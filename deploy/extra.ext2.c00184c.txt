ture when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetMetadataConfigurationOptions::soap_del() deep deletes _trt__GetMetadataConfigurationOptions data members, use only after _trt__GetMetadataConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetMetadataConfigurationOptions::soap_type() returns SOAP_TYPE__trt__GetMetadataConfigurationOptions or derived type identifier
class _trt__GetMetadataConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional metadata configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetMetadataConfigurationOptionsResponse is a complexType.
///
/// @note class _trt__GetMetadataConfigurationOptionsResponse operations:
/// - _trt__GetMetadataConfigurationOptionsResponse* soap_new__trt__GetMetadataConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _trt__GetMetadataConfigurationOptionsResponse* soap_new__trt__GetMetadataConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetMetadataConfigurationOptionsResponse* soap_new_req__trt__GetMetadataConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _trt__GetMetadataConfigurationOptionsResponse* soap_new_set__trt__GetMetadataConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetMetadataConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetMetadataConfigurationOptionsResponse(soap*, _trt__GetMetadataConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetMetadataConfigurationOptionsResponse(soap*, _trt__GetMetadataConfigurationOptionsResponse*) serialize to a stream
/// - _trt__GetMetadataConfigurationOptionsResponse* _trt__GetMetadataConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _trt__GetMetadataConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetMetadataConfigurationOptionsResponse::soap_del() deep deletes _trt__GetMetadataConfigurationOptionsResponse data members, use only after _trt__GetMetadataConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetMetadataConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__trt__GetMetadataConfigurationOptionsResponse or derived type identifier
class _trt__GetMetadataConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the metadata configuration options. If a metadata configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationOptions.
    tt__MetadataConfigurationOptions*    Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptions is a complexType.
///
/// @note class _trt__GetAudioOutputConfigurationOptions operations:
/// - _trt__GetAudioOutputConfigurationOptions* soap_new__trt__GetAudioOutputConfigurationOptions(soap*) allocate and default initialize
/// - _trt__GetAudioOutputConfigurationOptions* soap_new__trt__GetAudioOutputConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioOutputConfigurationOptions* soap_new_req__trt__GetAudioOutputConfigurationOptions(soap*, ...) allocate, set required members
/// - _trt__GetAudioOutputConfigurationOptions* soap_new_set__trt__GetAudioOutputConfigurationOptions(soap*, ...) allocate, set all public members
/// - _trt__GetAudioOutputConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfigurationOptions(soap*, _trt__GetAudioOutputConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationOptions(soap*, _trt__GetAudioOutputConfigurationOptions*) serialize to a stream
/// - _trt__GetAudioOutputConfigurationOptions* _trt__GetAudioOutputConfigurationOptions::soap_dup(soap*) returns deep copy of _trt__GetAudioOutputConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioOutputConfigurationOptions::soap_del() deep deletes _trt__GetAudioOutputConfigurationOptions data members, use only after _trt__GetAudioOutputConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioOutputConfigurationOptions::soap_type() returns SOAP_TYPE__trt__GetAudioOutputConfigurationOptions or derived type identifier
class _trt__GetAudioOutputConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio output configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioOutputConfigurationOptionsResponse is a complexType.
///
/// @note class _trt__GetAudioOutputConfigurationOptionsResponse operations:
/// - _trt__GetAudioOutputConfigurationOptionsResponse* soap_new__trt__GetAudioOutputConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _trt__GetAudioOutputConfigurationOptionsResponse* soap_new__trt__GetAudioOutputConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioOutputConfigurationOptionsResponse* soap_new_req__trt__GetAudioOutputConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioOutputConfigurationOptionsResponse* soap_new_set__trt__GetAudioOutputConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioOutputConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioOutputConfigurationOptionsResponse(soap*, _trt__GetAudioOutputConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioOutputConfigurationOptionsResponse(soap*, _trt__GetAudioOutputConfigurationOptionsResponse*) serialize to a stream
/// - _trt__GetAudioOutputConfigurationOptionsResponse* _trt__GetAudioOutputConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioOutputConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioOutputConfigurationOptionsResponse::soap_del() deep deletes _trt__GetAudioOutputConfigurationOptionsResponse data members, use only after _trt__GetAudioOutputConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioOutputConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__trt__GetAudioOutputConfigurationOptionsResponse or derived type identifier
class _trt__GetAudioOutputConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio output configuration options. If a audio output configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioOutputConfigurationOptions.
    tt__AudioOutputConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptions is a complexType.
///
/// @note class _trt__GetAudioDecoderConfigurationOptions operations:
/// - _trt__GetAudioDecoderConfigurationOptions* soap_new__trt__GetAudioDecoderConfigurationOptions(soap*) allocate and default initialize
/// - _trt__GetAudioDecoderConfigurationOptions* soap_new__trt__GetAudioDecoderConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioDecoderConfigurationOptions* soap_new_req__trt__GetAudioDecoderConfigurationOptions(soap*, ...) allocate, set required members
/// - _trt__GetAudioDecoderConfigurationOptions* soap_new_set__trt__GetAudioDecoderConfigurationOptions(soap*, ...) allocate, set all public members
/// - _trt__GetAudioDecoderConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfigurationOptions(soap*, _trt__GetAudioDecoderConfigurationOptions*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationOptions(soap*, _trt__GetAudioDecoderConfigurationOptions*) serialize to a stream
/// - _trt__GetAudioDecoderConfigurationOptions* _trt__GetAudioDecoderConfigurationOptions::soap_dup(soap*) returns deep copy of _trt__GetAudioDecoderConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioDecoderConfigurationOptions::soap_del() deep deletes _trt__GetAudioDecoderConfigurationOptions data members, use only after _trt__GetAudioDecoderConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioDecoderConfigurationOptions::soap_type() returns SOAP_TYPE__trt__GetAudioDecoderConfigurationOptions or derived type identifier
class _trt__GetAudioDecoderConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional audio decoder configuration token that specifies an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional ProfileToken that specifies an existing media profile that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetAudioDecoderConfigurationOptionsResponse is a complexType.
///
/// @note class _trt__GetAudioDecoderConfigurationOptionsResponse operations:
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* soap_new__trt__GetAudioDecoderConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* soap_new__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* soap_new_req__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* soap_new_set__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetAudioDecoderConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetAudioDecoderConfigurationOptionsResponse(soap*, _trt__GetAudioDecoderConfigurationOptionsResponse*) serialize to a stream
/// - _trt__GetAudioDecoderConfigurationOptionsResponse* _trt__GetAudioDecoderConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _trt__GetAudioDecoderConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetAudioDecoderConfigurationOptionsResponse::soap_del() deep deletes _trt__GetAudioDecoderConfigurationOptionsResponse data members, use only after _trt__GetAudioDecoderConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetAudioDecoderConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__trt__GetAudioDecoderConfigurationOptionsResponse or derived type identifier
class _trt__GetAudioDecoderConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This message contains the audio decoder configuration options. If a audio decoder configuration is specified, the options shall concern that particular configuration. If a media profile is specified, the options shall be compatible with that media profile. If no tokens are specified, the options shall be considered generic for the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Options" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfigurationOptions.
    tt__AudioDecoderConfigurationOptions*  Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstances is a complexType.
///
/// @note class _trt__GetGuaranteedNumberOfVideoEncoderInstances operations:
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*) allocate and default initialize
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, int num) allocate and default initialize an array
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* soap_new_req__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, ...) allocate, set required members
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* soap_new_set__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, ...) allocate, set all public members
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) deserialize from a stream
/// - int soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstances(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstances*) serialize to a stream
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances* _trt__GetGuaranteedNumberOfVideoEncoderInstances::soap_dup(soap*) returns deep copy of _trt__GetGuaranteedNumberOfVideoEncoderInstances, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstances::soap_del() deep deletes _trt__GetGuaranteedNumberOfVideoEncoderInstances data members, use only after _trt__GetGuaranteedNumberOfVideoEncoderInstances::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetGuaranteedNumberOfVideoEncoderInstances::soap_type() returns SOAP_TYPE__trt__GetGuaranteedNumberOfVideoEncoderInstances or derived type identifier
class _trt__GetGuaranteedNumberOfVideoEncoderInstances
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the video source configuration
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetGuaranteedNumberOfVideoEncoderInstancesResponse is a complexType.
///
/// @note class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse operations:
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*) allocate and default initialize
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* soap_new__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* soap_new_req__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, ...) allocate, set required members
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* soap_new_set__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, ...) allocate, set all public members
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) deserialize from a stream
/// - int soap_write__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse(soap*, _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse*) serialize to a stream
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse* _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse::soap_dup(soap*) returns deep copy of _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse::soap_del() deep deletes _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse data members, use only after _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse::soap_type() returns SOAP_TYPE__trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse or derived type identifier
class _trt__GetGuaranteedNumberOfVideoEncoderInstancesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The minimum guaranteed total number of encoder instances (applications) per VideoSourceConfiguration. The device is able to deliver the TotalNumber of streams
/// </BLOCKQUOTE></PRE>
///
/// Element "TotalNumber" of type xs:int.
    int                                  TotalNumber                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Jpeg streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "JPEG" of type xs:int.
    int*                                 JPEG                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many H264 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type xs:int.
    int*                                 H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   If a device limits the number of instances for respective Video Codecs the response contains the information how many Mpeg4 streams can be set up at the same time per VideoSource.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type xs:int.
    int*                                 MPEG4                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUri is a complexType.
///
/// @note class _trt__GetStreamUri operations:
/// - _trt__GetStreamUri* soap_new__trt__GetStreamUri(soap*) allocate and default initialize
/// - _trt__GetStreamUri* soap_new__trt__GetStreamUri(soap*, int num) allocate and default initialize an array
/// - _trt__GetStreamUri* soap_new_req__trt__GetStreamUri(soap*, ...) allocate, set required members
/// - _trt__GetStreamUri* soap_new_set__trt__GetStreamUri(soap*, ...) allocate, set all public members
/// - _trt__GetStreamUri::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetStreamUri(soap*, _trt__GetStreamUri*) deserialize from a stream
/// - int soap_write__trt__GetStreamUri(soap*, _trt__GetStreamUri*) serialize to a stream
/// - _trt__GetStreamUri* _trt__GetStreamUri::soap_dup(soap*) returns deep copy of _trt__GetStreamUri, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetStreamUri::soap_del() deep deletes _trt__GetStreamUri data members, use only after _trt__GetStreamUri::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetStreamUri::soap_type() returns SOAP_TYPE__trt__GetStreamUri or derived type identifier
class _trt__GetStreamUri
{ public:
/// <PRE><BLOCKQUOTE>
///   Stream Setup that should be used with the uri
/// </BLOCKQUOTE></PRE>
///
/// Element "StreamSetup" of type "http://www.onvif.org/ver10/schema":StreamSetup.
    tt__StreamSetup*                     StreamSetup                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the configuration of the content of the stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetStreamUriResponse is a complexType.
///
/// @note class _trt__GetStreamUriResponse operations:
/// - _trt__GetStreamUriResponse* soap_new__trt__GetStreamUriResponse(soap*) allocate and default initialize
/// - _trt__GetStreamUriResponse* soap_new__trt__GetStreamUriResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetStreamUriResponse* soap_new_req__trt__GetStreamUriResponse(soap*, ...) allocate, set required members
/// - _trt__GetStreamUriResponse* soap_new_set__trt__GetStreamUriResponse(soap*, ...) allocate, set all public members
/// - _trt__GetStreamUriResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetStreamUriResponse(soap*, _trt__GetStreamUriResponse*) deserialize from a stream
/// - int soap_write__trt__GetStreamUriResponse(soap*, _trt__GetStreamUriResponse*) serialize to a stream
/// - _trt__GetStreamUriResponse* _trt__GetStreamUriResponse::soap_dup(soap*) returns deep copy of _trt__GetStreamUriResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetStreamUriResponse::soap_del() deep deletes _trt__GetStreamUriResponse data members, use only after _trt__GetStreamUriResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetStreamUriResponse::soap_type() returns SOAP_TYPE__trt__GetStreamUriResponse or derived type identifier
class _trt__GetStreamUriResponse
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "MediaUri" of type "http://www.onvif.org/ver10/schema":MediaUri.
    tt__MediaUri*                        MediaUri                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreaming is a complexType.
///
/// @note class _trt__StartMulticastStreaming operations:
/// - _trt__StartMulticastStreaming* soap_new__trt__StartMulticastStreaming(soap*) allocate and default initialize
/// - _trt__StartMulticastStreaming* soap_new__trt__StartMulticastStreaming(soap*, int num) allocate and default initialize an array
/// - _trt__StartMulticastStreaming* soap_new_req__trt__StartMulticastStreaming(soap*, ...) allocate, set required members
/// - _trt__StartMulticastStreaming* soap_new_set__trt__StartMulticastStreaming(soap*, ...) allocate, set all public members
/// - _trt__StartMulticastStreaming::soap_default(soap*) default initialize members
/// - int soap_read__trt__StartMulticastStreaming(soap*, _trt__StartMulticastStreaming*) deserialize from a stream
/// - int soap_write__trt__StartMulticastStreaming(soap*, _trt__StartMulticastStreaming*) serialize to a stream
/// - _trt__StartMulticastStreaming* _trt__StartMulticastStreaming::soap_dup(soap*) returns deep copy of _trt__StartMulticastStreaming, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__StartMulticastStreaming::soap_del() deep deletes _trt__StartMulticastStreaming data members, use only after _trt__StartMulticastStreaming::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__StartMulticastStreaming::soap_type() returns SOAP_TYPE__trt__StartMulticastStreaming or derived type identifier
class _trt__StartMulticastStreaming
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StartMulticastStreamingResponse is a complexType.
///
/// @note class _trt__StartMulticastStreamingResponse operations:
/// - _trt__StartMulticastStreamingResponse* soap_new__trt__StartMulticastStreamingResponse(soap*) allocate and default initialize
/// - _trt__StartMulticastStreamingResponse* soap_new__trt__StartMulticastStreamingResponse(soap*, int num) allocate and default initialize an array
/// - _trt__StartMulticastStreamingResponse* soap_new_req__trt__StartMulticastStreamingResponse(soap*, ...) allocate, set required members
/// - _trt__StartMulticastStreamingResponse* soap_new_set__trt__StartMulticastStreamingResponse(soap*, ...) allocate, set all public members
/// - _trt__StartMulticastStreamingResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__StartMulticastStreamingResponse(soap*, _trt__StartMulticastStreamingResponse*) deserialize from a stream
/// - int soap_write__trt__StartMulticastStreamingResponse(soap*, _trt__StartMulticastStreamingResponse*) serialize to a stream
/// - _trt__StartMulticastStreamingResponse* _trt__StartMulticastStreamingResponse::soap_dup(soap*) returns deep copy of _trt__StartMulticastStreamingResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__StartMulticastStreamingResponse::soap_del() deep deletes _trt__StartMulticastStreamingResponse data members, use only after _trt__StartMulticastStreamingResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__StartMulticastStreamingResponse::soap_type() returns SOAP_TYPE__trt__StartMulticastStreamingResponse or derived type identifier
class _trt__StartMulticastStreamingResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreaming is a complexType.
///
/// @note class _trt__StopMulticastStreaming operations:
/// - _trt__StopMulticastStreaming* soap_new__trt__StopMulticastStreaming(soap*) allocate and default initialize
/// - _trt__StopMulticastStreaming* soap_new__trt__StopMulticastStreaming(soap*, int num) allocate and default initialize an array
/// - _trt__StopMulticastStreaming* soap_new_req__trt__StopMulticastStreaming(soap*, ...) allocate, set required members
/// - _trt__StopMulticastStreaming* soap_new_set__trt__StopMulticastStreaming(soap*, ...) allocate, set all public members
/// - _trt__StopMulticastStreaming::soap_default(soap*) default initialize members
/// - int soap_read__trt__StopMulticastStreaming(soap*, _trt__StopMulticastStreaming*) deserialize from a stream
/// - int soap_write__trt__StopMulticastStreaming(soap*, _trt__StopMulticastStreaming*) serialize to a stream
/// - _trt__StopMulticastStreaming* _trt__StopMulticastStreaming::soap_dup(soap*) returns deep copy of _trt__StopMulticastStreaming, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__StopMulticastStreaming::soap_del() deep deletes _trt__StopMulticastStreaming data members, use only after _trt__StopMulticastStreaming::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__StopMulticastStreaming::soap_type() returns SOAP_TYPE__trt__StopMulticastStreaming or derived type identifier
class _trt__StopMulticastStreaming
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of the Profile that is used to define the multicast stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":StopMulticastStreamingResponse is a complexType.
///
/// @note class _trt__StopMulticastStreamingResponse operations:
/// - _trt__StopMulticastStreamingResponse* soap_new__trt__StopMulticastStreamingResponse(soap*) allocate and default initialize
/// - _trt__StopMulticastStreamingResponse* soap_new__trt__StopMulticastStreamingResponse(soap*, int num) allocate and default initialize an array
/// - _trt__StopMulticastStreamingResponse* soap_new_req__trt__StopMulticastStreamingResponse(soap*, ...) allocate, set required members
/// - _trt__StopMulticastStreamingResponse* soap_new_set__trt__StopMulticastStreamingResponse(soap*, ...) allocate, set all public members
/// - _trt__StopMulticastStreamingResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__StopMulticastStreamingResponse(soap*, _trt__StopMulticastStreamingResponse*) deserialize from a stream
/// - int soap_write__trt__StopMulticastStreamingResponse(soap*, _trt__StopMulticastStreamingResponse*) serialize to a stream
/// - _trt__StopMulticastStreamingResponse* _trt__StopMulticastStreamingResponse::soap_dup(soap*) returns deep copy of _trt__StopMulticastStreamingResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__StopMulticastStreamingResponse::soap_del() deep deletes _trt__StopMulticastStreamingResponse data members, use only after _trt__StopMulticastStreamingResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__StopMulticastStreamingResponse::soap_type() returns SOAP_TYPE__trt__StopMulticastStreamingResponse or derived type identifier
class _trt__StopMulticastStreamingResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPoint is a complexType.
///
/// @note class _trt__SetSynchronizationPoint operations:
/// - _trt__SetSynchronizationPoint* soap_new__trt__SetSynchronizationPoint(soap*) allocate and default initialize
/// - _trt__SetSynchronizationPoint* soap_new__trt__SetSynchronizationPoint(soap*, int num) allocate and default initialize an array
/// - _trt__SetSynchronizationPoint* soap_new_req__trt__SetSynchronizationPoint(soap*, ...) allocate, set required members
/// - _trt__SetSynchronizationPoint* soap_new_set__trt__SetSynchronizationPoint(soap*, ...) allocate, set all public members
/// - _trt__SetSynchronizationPoint::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetSynchronizationPoint(soap*, _trt__SetSynchronizationPoint*) deserialize from a stream
/// - int soap_write__trt__SetSynchronizationPoint(soap*, _trt__SetSynchronizationPoint*) serialize to a stream
/// - _trt__SetSynchronizationPoint* _trt__SetSynchronizationPoint::soap_dup(soap*) returns deep copy of _trt__SetSynchronizationPoint, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetSynchronizationPoint::soap_del() deep deletes _trt__SetSynchronizationPoint data members, use only after _trt__SetSynchronizationPoint::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetSynchronizationPoint::soap_type() returns SOAP_TYPE__trt__SetSynchronizationPoint or derived type identifier
class _trt__SetSynchronizationPoint
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a Profile reference for which a Synchronization Point is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetSynchronizationPointResponse is a complexType.
///
/// @note class _trt__SetSynchronizationPointResponse operations:
/// - _trt__SetSynchronizationPointResponse* soap_new__trt__SetSynchronizationPointResponse(soap*) allocate and default initialize
/// - _trt__SetSynchronizationPointResponse* soap_new__trt__SetSynchronizationPointResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetSynchronizationPointResponse* soap_new_req__trt__SetSynchronizationPointResponse(soap*, ...) allocate, set required members
/// - _trt__SetSynchronizationPointResponse* soap_new_set__trt__SetSynchronizationPointResponse(soap*, ...) allocate, set all public members
/// - _trt__SetSynchronizationPointResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetSynchronizationPointResponse(soap*, _trt__SetSynchronizationPointResponse*) deserialize from a stream
/// - int soap_write__trt__SetSynchronizationPointResponse(soap*, _trt__SetSynchronizationPointResponse*) serialize to a stream
/// - _trt__SetSynchronizationPointResponse* _trt__SetSynchronizationPointResponse::soap_dup(soap*) returns deep copy of _trt__SetSynchronizationPointResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetSynchronizationPointResponse::soap_del() deep deletes _trt__SetSynchronizationPointResponse data members, use only after _trt__SetSynchronizationPointResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetSynchronizationPointResponse::soap_type() returns SOAP_TYPE__trt__SetSynchronizationPointResponse or derived type identifier
class _trt__SetSynchronizationPointResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUri is a complexType.
///
/// @note class _trt__GetSnapshotUri operations:
/// - _trt__GetSnapshotUri* soap_new__trt__GetSnapshotUri(soap*) allocate and default initialize
/// - _trt__GetSnapshotUri* soap_new__trt__GetSnapshotUri(soap*, int num) allocate and default initialize an array
/// - _trt__GetSnapshotUri* soap_new_req__trt__GetSnapshotUri(soap*, ...) allocate, set required members
/// - _trt__GetSnapshotUri* soap_new_set__trt__GetSnapshotUri(soap*, ...) allocate, set all public members
/// - _trt__GetSnapshotUri::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetSnapshotUri(soap*, _trt__GetSnapshotUri*) deserialize from a stream
/// - int soap_write__trt__GetSnapshotUri(soap*, _trt__GetSnapshotUri*) serialize to a stream
/// - _trt__GetSnapshotUri* _trt__GetSnapshotUri::soap_dup(soap*) returns deep copy of _trt__GetSnapshotUri, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetSnapshotUri::soap_del() deep deletes _trt__GetSnapshotUri data members, use only after _trt__GetSnapshotUri::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetSnapshotUri::soap_type() returns SOAP_TYPE__trt__GetSnapshotUri or derived type identifier
class _trt__GetSnapshotUri
{ public:
/// <PRE><BLOCKQUOTE>
///   The ProfileToken element indicates the media profile to use and will define the source and dimensions of the snapshot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetSnapshotUriResponse is a complexType.
///
/// @note class _trt__GetSnapshotUriResponse operations:
/// - _trt__GetSnapshotUriResponse* soap_new__trt__GetSnapshotUriResponse(soap*) allocate and default initialize
/// - _trt__GetSnapshotUriResponse* soap_new__trt__GetSnapshotUriResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetSnapshotUriResponse* soap_new_req__trt__GetSnapshotUriResponse(soap*, ...) allocate, set required members
/// - _trt__GetSnapshotUriResponse* soap_new_set__trt__GetSnapshotUriResponse(soap*, ...) allocate, set all public members
/// - _trt__GetSnapshotUriResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetSnapshotUriResponse(soap*, _trt__GetSnapshotUriResponse*) deserialize from a stream
/// - int soap_write__trt__GetSnapshotUriResponse(soap*, _trt__GetSnapshotUriResponse*) serialize to a stream
/// - _trt__GetSnapshotUriResponse* _trt__GetSnapshotUriResponse::soap_dup(soap*) returns deep copy of _trt__GetSnapshotUriResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetSnapshotUriResponse::soap_del() deep deletes _trt__GetSnapshotUriResponse data members, use only after _trt__GetSnapshotUriResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetSnapshotUriResponse::soap_type() returns SOAP_TYPE__trt__GetSnapshotUriResponse or derived type identifier
class _trt__GetSnapshotUriResponse
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "MediaUri" of type "http://www.onvif.org/ver10/schema":MediaUri.
    tt__MediaUri*                        MediaUri                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModes is a complexType.
///
/// @note class _trt__GetVideoSourceModes operations:
/// - _trt__GetVideoSourceModes* soap_new__trt__GetVideoSourceModes(soap*) allocate and default initialize
/// - _trt__GetVideoSourceModes* soap_new__trt__GetVideoSourceModes(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoSourceModes* soap_new_req__trt__GetVideoSourceModes(soap*, ...) allocate, set required members
/// - _trt__GetVideoSourceModes* soap_new_set__trt__GetVideoSourceModes(soap*, ...) allocate, set all public members
/// - _trt__GetVideoSourceModes::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoSourceModes(soap*, _trt__GetVideoSourceModes*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceModes(soap*, _trt__GetVideoSourceModes*) serialize to a stream
/// - _trt__GetVideoSourceModes* _trt__GetVideoSourceModes::soap_dup(soap*) returns deep copy of _trt__GetVideoSourceModes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoSourceModes::soap_del() deep deletes _trt__GetVideoSourceModes data members, use only after _trt__GetVideoSourceModes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoSourceModes::soap_type() returns SOAP_TYPE__trt__GetVideoSourceModes or derived type identifier
class _trt__GetVideoSourceModes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetVideoSourceModesResponse is a complexType.
///
/// @note class _trt__GetVideoSourceModesResponse operations:
/// - _trt__GetVideoSourceModesResponse* soap_new__trt__GetVideoSourceModesResponse(soap*) allocate and default initialize
/// - _trt__GetVideoSourceModesResponse* soap_new__trt__GetVideoSourceModesResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetVideoSourceModesResponse* soap_new_req__trt__GetVideoSourceModesResponse(soap*, ...) allocate, set required members
/// - _trt__GetVideoSourceModesResponse* soap_new_set__trt__GetVideoSourceModesResponse(soap*, ...) allocate, set all public members
/// - _trt__GetVideoSourceModesResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetVideoSourceModesResponse(soap*, _trt__GetVideoSourceModesResponse*) deserialize from a stream
/// - int soap_write__trt__GetVideoSourceModesResponse(soap*, _trt__GetVideoSourceModesResponse*) serialize to a stream
/// - _trt__GetVideoSourceModesResponse* _trt__GetVideoSourceModesResponse::soap_dup(soap*) returns deep copy of _trt__GetVideoSourceModesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetVideoSourceModesResponse::soap_del() deep deletes _trt__GetVideoSourceModesResponse data members, use only after _trt__GetVideoSourceModesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetVideoSourceModesResponse::soap_type() returns SOAP_TYPE__trt__GetVideoSourceModesResponse or derived type identifier
class _trt__GetVideoSourceModesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Return the information for specified video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of trt__VideoSourceMode* is 1..unbounded.
  $ int                                  __sizeVideoSourceModes         1;
/// Pointer to array trt__VideoSourceMode* of size 1..unbounded.
    trt__VideoSourceMode*               *VideoSourceModes               1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceMode is a complexType.
///
/// @note class _trt__SetVideoSourceMode operations:
/// - _trt__SetVideoSourceMode* soap_new__trt__SetVideoSourceMode(soap*) allocate and default initialize
/// - _trt__SetVideoSourceMode* soap_new__trt__SetVideoSourceMode(soap*, int num) allocate and default initialize an array
/// - _trt__SetVideoSourceMode* soap_new_req__trt__SetVideoSourceMode(soap*, ...) allocate, set required members
/// - _trt__SetVideoSourceMode* soap_new_set__trt__SetVideoSourceMode(soap*, ...) allocate, set all public members
/// - _trt__SetVideoSourceMode::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetVideoSourceMode(soap*, _trt__SetVideoSourceMode*) deserialize from a stream
/// - int soap_write__trt__SetVideoSourceMode(soap*, _trt__SetVideoSourceMode*) serialize to a stream
/// - _trt__SetVideoSourceMode* _trt__SetVideoSourceMode::soap_dup(soap*) returns deep copy of _trt__SetVideoSourceMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetVideoSourceMode::soap_del() deep deletes _trt__SetVideoSourceMode data members, use only after _trt__SetVideoSourceMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetVideoSourceMode::soap_type() returns SOAP_TYPE__trt__SetVideoSourceMode or derived type identifier
class _trt__SetVideoSourceMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a video source reference for which a video source mode is requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceToken               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Indicate video source mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceModeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   VideoSourceModeToken           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetVideoSourceModeResponse is a complexType.
///
/// @note class _trt__SetVideoSourceModeResponse operations:
/// - _trt__SetVideoSourceModeResponse* soap_new__trt__SetVideoSourceModeResponse(soap*) allocate and default initialize
/// - _trt__SetVideoSourceModeResponse* soap_new__trt__SetVideoSourceModeResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetVideoSourceModeResponse* soap_new_req__trt__SetVideoSourceModeResponse(soap*, ...) allocate, set required members
/// - _trt__SetVideoSourceModeResponse* soap_new_set__trt__SetVideoSourceModeResponse(soap*, ...) allocate, set all public members
/// - _trt__SetVideoSourceModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetVideoSourceModeResponse(soap*, _trt__SetVideoSourceModeResponse*) deserialize from a stream
/// - int soap_write__trt__SetVideoSourceModeResponse(soap*, _trt__SetVideoSourceModeResponse*) serialize to a stream
/// - _trt__SetVideoSourceModeResponse* _trt__SetVideoSourceModeResponse::soap_dup(soap*) returns deep copy of _trt__SetVideoSourceModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetVideoSourceModeResponse::soap_del() deep deletes _trt__SetVideoSourceModeResponse data members, use only after _trt__SetVideoSourceModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetVideoSourceModeResponse::soap_type() returns SOAP_TYPE__trt__SetVideoSourceModeResponse or derived type identifier
class _trt__SetVideoSourceModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The response contains information about rebooting after returning response. When Reboot is set true, a device will reboot automatically after setting mode.
/// </BLOCKQUOTE></PRE>
///
/// Element "Reboot" of type xs:boolean.
    bool                                 Reboot                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDs
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDs is a complexType.
///
/// @note class _trt__GetOSDs operations:
/// - _trt__GetOSDs* soap_new__trt__GetOSDs(soap*) allocate and default initialize
/// - _trt__GetOSDs* soap_new__trt__GetOSDs(soap*, int num) allocate and default initialize an array
/// - _trt__GetOSDs* soap_new_req__trt__GetOSDs(soap*, ...) allocate, set required members
/// - _trt__GetOSDs* soap_new_set__trt__GetOSDs(soap*, ...) allocate, set all public members
/// - _trt__GetOSDs::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetOSDs(soap*, _trt__GetOSDs*) deserialize from a stream
/// - int soap_write__trt__GetOSDs(soap*, _trt__GetOSDs*) serialize to a stream
/// - _trt__GetOSDs* _trt__GetOSDs::soap_dup(soap*) returns deep copy of _trt__GetOSDs, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetOSDs::soap_del() deep deletes _trt__GetOSDs data members, use only after _trt__GetOSDs::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetOSDs::soap_type() returns SOAP_TYPE__trt__GetOSDs or derived type identifier
class _trt__GetOSDs
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the Video Source Configuration, which has OSDs associated with are requested. If token not exist, request all available OSDs.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDsResponse is a complexType.
///
/// @note class _trt__GetOSDsResponse operations:
/// - _trt__GetOSDsResponse* soap_new__trt__GetOSDsResponse(soap*) allocate and default initialize
/// - _trt__GetOSDsResponse* soap_new__trt__GetOSDsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetOSDsResponse* soap_new_req__trt__GetOSDsResponse(soap*, ...) allocate, set required members
/// - _trt__GetOSDsResponse* soap_new_set__trt__GetOSDsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetOSDsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetOSDsResponse(soap*, _trt__GetOSDsResponse*) deserialize from a stream
/// - int soap_write__trt__GetOSDsResponse(soap*, _trt__GetOSDsResponse*) serialize to a stream
/// - _trt__GetOSDsResponse* _trt__GetOSDsResponse::soap_dup(soap*) returns deep copy of _trt__GetOSDsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetOSDsResponse::soap_del() deep deletes _trt__GetOSDsResponse data members, use only after _trt__GetOSDsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetOSDsResponse::soap_type() returns SOAP_TYPE__trt__GetOSDsResponse or derived type identifier
class _trt__GetOSDsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a list of requested OSDs.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__OSDConfiguration* is 0..unbounded.
  $ int                                  __sizeOSDs                     0;
/// Pointer to array tt__OSDConfiguration* of size 0..unbounded.
    tt__OSDConfiguration*               *OSDs                           0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSD is a complexType.
///
/// @note class _trt__GetOSD operations:
/// - _trt__GetOSD* soap_new__trt__GetOSD(soap*) allocate and default initialize
/// - _trt__GetOSD* soap_new__trt__GetOSD(soap*, int num) allocate and default initialize an array
/// - _trt__GetOSD* soap_new_req__trt__GetOSD(soap*, ...) allocate, set required members
/// - _trt__GetOSD* soap_new_set__trt__GetOSD(soap*, ...) allocate, set all public members
/// - _trt__GetOSD::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetOSD(soap*, _trt__GetOSD*) deserialize from a stream
/// - int soap_write__trt__GetOSD(soap*, _trt__GetOSD*) serialize to a stream
/// - _trt__GetOSD* _trt__GetOSD::soap_dup(soap*) returns deep copy of _trt__GetOSD, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetOSD::soap_del() deep deletes _trt__GetOSD data members, use only after _trt__GetOSD::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetOSD::soap_type() returns SOAP_TYPE__trt__GetOSD or derived type identifier
class _trt__GetOSD
{ public:
/// <PRE><BLOCKQUOTE>
///   The GetOSD command fetches the OSD configuration if the OSD token is known.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDResponse is a complexType.
///
/// @note class _trt__GetOSDResponse operations:
/// - _trt__GetOSDResponse* soap_new__trt__GetOSDResponse(soap*) allocate and default initialize
/// - _trt__GetOSDResponse* soap_new__trt__GetOSDResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetOSDResponse* soap_new_req__trt__GetOSDResponse(soap*, ...) allocate, set required members
/// - _trt__GetOSDResponse* soap_new_set__trt__GetOSDResponse(soap*, ...) allocate, set all public members
/// - _trt__GetOSDResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetOSDResponse(soap*, _trt__GetOSDResponse*) deserialize from a stream
/// - int soap_write__trt__GetOSDResponse(soap*, _trt__GetOSDResponse*) serialize to a stream
/// - _trt__GetOSDResponse* _trt__GetOSDResponse::soap_dup(soap*) returns deep copy of _trt__GetOSDResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetOSDResponse::soap_del() deep deletes _trt__GetOSDResponse data members, use only after _trt__GetOSDResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetOSDResponse::soap_type() returns SOAP_TYPE__trt__GetOSDResponse or derived type identifier
class _trt__GetOSDResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested OSD configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    tt__OSDConfiguration*                OSD                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetOSD is a complexType.
///
/// @note class _trt__SetOSD operations:
/// - _trt__SetOSD* soap_new__trt__SetOSD(soap*) allocate and default initialize
/// - _trt__SetOSD* soap_new__trt__SetOSD(soap*, int num) allocate and default initialize an array
/// - _trt__SetOSD* soap_new_req__trt__SetOSD(soap*, ...) allocate, set required members
/// - _trt__SetOSD* soap_new_set__trt__SetOSD(soap*, ...) allocate, set all public members
/// - _trt__SetOSD::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetOSD(soap*, _trt__SetOSD*) deserialize from a stream
/// - int soap_write__trt__SetOSD(soap*, _trt__SetOSD*) serialize to a stream
/// - _trt__SetOSD* _trt__SetOSD::soap_dup(soap*) returns deep copy of _trt__SetOSD, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetOSD::soap_del() deep deletes _trt__SetOSD data members, use only after _trt__SetOSD::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetOSD::soap_type() returns SOAP_TYPE__trt__SetOSD or derived type identifier
class _trt__SetOSD
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the modified OSD configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    tt__OSDConfiguration*                OSD                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":SetOSDResponse is a complexType.
///
/// @note class _trt__SetOSDResponse operations:
/// - _trt__SetOSDResponse* soap_new__trt__SetOSDResponse(soap*) allocate and default initialize
/// - _trt__SetOSDResponse* soap_new__trt__SetOSDResponse(soap*, int num) allocate and default initialize an array
/// - _trt__SetOSDResponse* soap_new_req__trt__SetOSDResponse(soap*, ...) allocate, set required members
/// - _trt__SetOSDResponse* soap_new_set__trt__SetOSDResponse(soap*, ...) allocate, set all public members
/// - _trt__SetOSDResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__SetOSDResponse(soap*, _trt__SetOSDResponse*) deserialize from a stream
/// - int soap_write__trt__SetOSDResponse(soap*, _trt__SetOSDResponse*) serialize to a stream
/// - _trt__SetOSDResponse* _trt__SetOSDResponse::soap_dup(soap*) returns deep copy of _trt__SetOSDResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__SetOSDResponse::soap_del() deep deletes _trt__SetOSDResponse data members, use only after _trt__SetOSDResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__SetOSDResponse::soap_type() returns SOAP_TYPE__trt__SetOSDResponse or derived type identifier
class _trt__SetOSDResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDOptions is a complexType.
///
/// @note class _trt__GetOSDOptions operations:
/// - _trt__GetOSDOptions* soap_new__trt__GetOSDOptions(soap*) allocate and default initialize
/// - _trt__GetOSDOptions* soap_new__trt__GetOSDOptions(soap*, int num) allocate and default initialize an array
/// - _trt__GetOSDOptions* soap_new_req__trt__GetOSDOptions(soap*, ...) allocate, set required members
/// - _trt__GetOSDOptions* soap_new_set__trt__GetOSDOptions(soap*, ...) allocate, set all public members
/// - _trt__GetOSDOptions::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetOSDOptions(soap*, _trt__GetOSDOptions*) deserialize from a stream
/// - int soap_write__trt__GetOSDOptions(soap*, _trt__GetOSDOptions*) serialize to a stream
/// - _trt__GetOSDOptions* _trt__GetOSDOptions::soap_dup(soap*) returns deep copy of _trt__GetOSDOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetOSDOptions::soap_del() deep deletes _trt__GetOSDOptions data members, use only after _trt__GetOSDOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetOSDOptions::soap_type() returns SOAP_TYPE__trt__GetOSDOptions or derived type identifier
class _trt__GetOSDOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Video Source Configuration Token that specifies an existing video source configuration that the options shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":GetOSDOptionsResponse is a complexType.
///
/// @note class _trt__GetOSDOptionsResponse operations:
/// - _trt__GetOSDOptionsResponse* soap_new__trt__GetOSDOptionsResponse(soap*) allocate and default initialize
/// - _trt__GetOSDOptionsResponse* soap_new__trt__GetOSDOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _trt__GetOSDOptionsResponse* soap_new_req__trt__GetOSDOptionsResponse(soap*, ...) allocate, set required members
/// - _trt__GetOSDOptionsResponse* soap_new_set__trt__GetOSDOptionsResponse(soap*, ...) allocate, set all public members
/// - _trt__GetOSDOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__GetOSDOptionsResponse(soap*, _trt__GetOSDOptionsResponse*) deserialize from a stream
/// - int soap_write__trt__GetOSDOptionsResponse(soap*, _trt__GetOSDOptionsResponse*) serialize to a stream
/// - _trt__GetOSDOptionsResponse* _trt__GetOSDOptionsResponse::soap_dup(soap*) returns deep copy of _trt__GetOSDOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__GetOSDOptionsResponse::soap_del() deep deletes _trt__GetOSDOptionsResponse data members, use only after _trt__GetOSDOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__GetOSDOptionsResponse::soap_type() returns SOAP_TYPE__trt__GetOSDOptionsResponse or derived type identifier
class _trt__GetOSDOptionsResponse
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "OSDOptions" of type "http://www.onvif.org/ver10/schema":OSDConfigurationOptions.
    tt__OSDConfigurationOptions*         OSDOptions                     1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateOSD is a complexType.
///
/// @note class _trt__CreateOSD operations:
/// - _trt__CreateOSD* soap_new__trt__CreateOSD(soap*) allocate and default initialize
/// - _trt__CreateOSD* soap_new__trt__CreateOSD(soap*, int num) allocate and default initialize an array
/// - _trt__CreateOSD* soap_new_req__trt__CreateOSD(soap*, ...) allocate, set required members
/// - _trt__CreateOSD* soap_new_set__trt__CreateOSD(soap*, ...) allocate, set all public members
/// - _trt__CreateOSD::soap_default(soap*) default initialize members
/// - int soap_read__trt__CreateOSD(soap*, _trt__CreateOSD*) deserialize from a stream
/// - int soap_write__trt__CreateOSD(soap*, _trt__CreateOSD*) serialize to a stream
/// - _trt__CreateOSD* _trt__CreateOSD::soap_dup(soap*) returns deep copy of _trt__CreateOSD, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__CreateOSD::soap_del() deep deletes _trt__CreateOSD data members, use only after _trt__CreateOSD::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__CreateOSD::soap_type() returns SOAP_TYPE__trt__CreateOSD or derived type identifier
class _trt__CreateOSD
{ public:
/// <PRE><BLOCKQUOTE>
///   Contain the initial OSD configuration for create.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSD" of type "http://www.onvif.org/ver10/schema":OSDConfiguration.
    tt__OSDConfiguration*                OSD                            1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":CreateOSDResponse is a complexType.
///
/// @note class _trt__CreateOSDResponse operations:
/// - _trt__CreateOSDResponse* soap_new__trt__CreateOSDResponse(soap*) allocate and default initialize
/// - _trt__CreateOSDResponse* soap_new__trt__CreateOSDResponse(soap*, int num) allocate and default initialize an array
/// - _trt__CreateOSDResponse* soap_new_req__trt__CreateOSDResponse(soap*, ...) allocate, set required members
/// - _trt__CreateOSDResponse* soap_new_set__trt__CreateOSDResponse(soap*, ...) allocate, set all public members
/// - _trt__CreateOSDResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__CreateOSDResponse(soap*, _trt__CreateOSDResponse*) deserialize from a stream
/// - int soap_write__trt__CreateOSDResponse(soap*, _trt__CreateOSDResponse*) serialize to a stream
/// - _trt__CreateOSDResponse* _trt__CreateOSDResponse::soap_dup(soap*) returns deep copy of _trt__CreateOSDResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__CreateOSDResponse::soap_del() deep deletes _trt__CreateOSDResponse data members, use only after _trt__CreateOSDResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__CreateOSDResponse::soap_type() returns SOAP_TYPE__trt__CreateOSDResponse or derived type identifier
class _trt__CreateOSDResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Returns Token of the newly created OSD
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSD
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteOSD is a complexType.
///
/// @note class _trt__DeleteOSD operations:
/// - _trt__DeleteOSD* soap_new__trt__DeleteOSD(soap*) allocate and default initialize
/// - _trt__DeleteOSD* soap_new__trt__DeleteOSD(soap*, int num) allocate and default initialize an array
/// - _trt__DeleteOSD* soap_new_req__trt__DeleteOSD(soap*, ...) allocate, set required members
/// - _trt__DeleteOSD* soap_new_set__trt__DeleteOSD(soap*, ...) allocate, set all public members
/// - _trt__DeleteOSD::soap_default(soap*) default initialize members
/// - int soap_read__trt__DeleteOSD(soap*, _trt__DeleteOSD*) deserialize from a stream
/// - int soap_write__trt__DeleteOSD(soap*, _trt__DeleteOSD*) serialize to a stream
/// - _trt__DeleteOSD* _trt__DeleteOSD::soap_dup(soap*) returns deep copy of _trt__DeleteOSD, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__DeleteOSD::soap_del() deep deletes _trt__DeleteOSD data members, use only after _trt__DeleteOSD::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__DeleteOSD::soap_type() returns SOAP_TYPE__trt__DeleteOSD or derived type identifier
class _trt__DeleteOSD
{ public:
/// <PRE><BLOCKQUOTE>
///   This element contains a reference to the OSD configuration that should be deleted.
/// </BLOCKQUOTE></PRE>
///
/// Element "OSDToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OSDToken                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse
/// @brief "http://www.onvif.org/ver10/media/wsdl":DeleteOSDResponse is a complexType.
///
/// @note class _trt__DeleteOSDResponse operations:
/// - _trt__DeleteOSDResponse* soap_new__trt__DeleteOSDResponse(soap*) allocate and default initialize
/// - _trt__DeleteOSDResponse* soap_new__trt__DeleteOSDResponse(soap*, int num) allocate and default initialize an array
/// - _trt__DeleteOSDResponse* soap_new_req__trt__DeleteOSDResponse(soap*, ...) allocate, set required members
/// - _trt__DeleteOSDResponse* soap_new_set__trt__DeleteOSDResponse(soap*, ...) allocate, set all public members
/// - _trt__DeleteOSDResponse::soap_default(soap*) default initialize members
/// - int soap_read__trt__DeleteOSDResponse(soap*, _trt__DeleteOSDResponse*) deserialize from a stream
/// - int soap_write__trt__DeleteOSDResponse(soap*, _trt__DeleteOSDResponse*) serialize to a stream
/// - _trt__DeleteOSDResponse* _trt__DeleteOSDResponse::soap_dup(soap*) returns deep copy of _trt__DeleteOSDResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _trt__DeleteOSDResponse::soap_del() deep deletes _trt__DeleteOSDResponse data members, use only after _trt__DeleteOSDResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _trt__DeleteOSDResponse::soap_type() returns SOAP_TYPE__trt__DeleteOSDResponse or derived type identifier
class _trt__DeleteOSDResponse
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver20/ptz/wsdl                                      *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver20/ptz/wsdl":Capabilities is a complexType.
///
/// @note class tptz__Capabilities operations:
/// - tptz__Capabilities* soap_new_tptz__Capabilities(soap*) allocate and default initialize
/// - tptz__Capabilities* soap_new_tptz__Capabilities(soap*, int num) allocate and default initialize an array
/// - tptz__Capabilities* soap_new_req_tptz__Capabilities(soap*, ...) allocate, set required members
/// - tptz__Capabilities* soap_new_set_tptz__Capabilities(soap*, ...) allocate, set all public members
/// - tptz__Capabilities::soap_default(soap*) default initialize members
/// - int soap_read_tptz__Capabilities(soap*, tptz__Capabilities*) deserialize from a stream
/// - int soap_write_tptz__Capabilities(soap*, tptz__Capabilities*) serialize to a stream
/// - tptz__Capabilities* tptz__Capabilities::soap_dup(soap*) returns deep copy of tptz__Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tptz__Capabilities::soap_del() deep deletes tptz__Capabilities data members, use only after tptz__Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tptz__Capabilities::soap_type() returns SOAP_TYPE_tptz__Capabilities or derived type identifier
class tptz__Capabilities
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not EFlip is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "EFlip" of type xs:boolean.
  @ bool*                                EFlip                          0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not reversing of PT control direction is supported.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "Reverse" of type xs:boolean.
  @ bool*                                Reverse                        0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates support for the GetCompatibleConfigurations command.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GetCompatibleConfigurations" of type xs:boolean.
  @ bool*                                GetCompatibleConfigurations    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the PTZStatus includes MoveStatus information.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MoveStatus" of type xs:boolean.
  @ bool*                                MoveStatus                     0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indicates that the PTZStatus includes Position information.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "StatusPosition" of type xs:boolean.
  @ bool*                                StatusPosition                 0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Indication of the methods of MoveAndTrack that are supported, acceptable values are defined in tt:MoveAndTrackMethod.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "MoveAndTrack" of type "http://www.onvif.org/ver10/schema":StringList.
  @ tt__StringList                       MoveAndTrack                   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilities is a complexType.
///
/// @note class _tptz__GetServiceCapabilities operations:
/// - _tptz__GetServiceCapabilities* soap_new__tptz__GetServiceCapabilities(soap*) allocate and default initialize
/// - _tptz__GetServiceCapabilities* soap_new__tptz__GetServiceCapabilities(soap*, int num) allocate and default initialize an array
/// - _tptz__GetServiceCapabilities* soap_new_req__tptz__GetServiceCapabilities(soap*, ...) allocate, set required members
/// - _tptz__GetServiceCapabilities* soap_new_set__tptz__GetServiceCapabilities(soap*, ...) allocate, set all public members
/// - _tptz__GetServiceCapabilities::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetServiceCapabilities(soap*, _tptz__GetServiceCapabilities*) deserialize from a stream
/// - int soap_write__tptz__GetServiceCapabilities(soap*, _tptz__GetServiceCapabilities*) serialize to a stream
/// - _tptz__GetServiceCapabilities* _tptz__GetServiceCapabilities::soap_dup(soap*) returns deep copy of _tptz__GetServiceCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetServiceCapabilities::soap_del() deep deletes _tptz__GetServiceCapabilities data members, use only after _tptz__GetServiceCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetServiceCapabilities::soap_type() returns SOAP_TYPE__tptz__GetServiceCapabilities or derived type identifier
class _tptz__GetServiceCapabilities
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetServiceCapabilitiesResponse is a complexType.
///
/// @note class _tptz__GetServiceCapabilitiesResponse operations:
/// - _tptz__GetServiceCapabilitiesResponse* soap_new__tptz__GetServiceCapabilitiesResponse(soap*) allocate and default initialize
/// - _tptz__GetServiceCapabilitiesResponse* soap_new__tptz__GetServiceCapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetServiceCapabilitiesResponse* soap_new_req__tptz__GetServiceCapabilitiesResponse(soap*, ...) allocate, set required members
/// - _tptz__GetServiceCapabilitiesResponse* soap_new_set__tptz__GetServiceCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetServiceCapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetServiceCapabilitiesResponse(soap*, _tptz__GetServiceCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tptz__GetServiceCapabilitiesResponse(soap*, _tptz__GetServiceCapabilitiesResponse*) serialize to a stream
/// - _tptz__GetServiceCapabilitiesResponse* _tptz__GetServiceCapabilitiesResponse::soap_dup(soap*) returns deep copy of _tptz__GetServiceCapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetServiceCapabilitiesResponse::soap_del() deep deletes _tptz__GetServiceCapabilitiesResponse data members, use only after _tptz__GetServiceCapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetServiceCapabilitiesResponse::soap_type() returns SOAP_TYPE__tptz__GetServiceCapabilitiesResponse or derived type identifier
class _tptz__GetServiceCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The capabilities for the PTZ service is returned in the Capabilities element.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver20/ptz/wsdl":Capabilities.
    tptz__Capabilities*                  Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodes
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodes is a complexType.
///
/// @note class _tptz__GetNodes operations:
/// - _tptz__GetNodes* soap_new__tptz__GetNodes(soap*) allocate and default initialize
/// - _tptz__GetNodes* soap_new__tptz__GetNodes(soap*, int num) allocate and default initialize an array
/// - _tptz__GetNodes* soap_new_req__tptz__GetNodes(soap*, ...) allocate, set required members
/// - _tptz__GetNodes* soap_new_set__tptz__GetNodes(soap*, ...) allocate, set all public members
/// - _tptz__GetNodes::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetNodes(soap*, _tptz__GetNodes*) deserialize from a stream
/// - int soap_write__tptz__GetNodes(soap*, _tptz__GetNodes*) serialize to a stream
/// - _tptz__GetNodes* _tptz__GetNodes::soap_dup(soap*) returns deep copy of _tptz__GetNodes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetNodes::soap_del() deep deletes _tptz__GetNodes data members, use only after _tptz__GetNodes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetNodes::soap_type() returns SOAP_TYPE__tptz__GetNodes or derived type identifier
class _tptz__GetNodes
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodesResponse is a complexType.
///
/// @note class _tptz__GetNodesResponse operations:
/// - _tptz__GetNodesResponse* soap_new__tptz__GetNodesResponse(soap*) allocate and default initialize
/// - _tptz__GetNodesResponse* soap_new__tptz__GetNodesResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetNodesResponse* soap_new_req__tptz__GetNodesResponse(soap*, ...) allocate, set required members
/// - _tptz__GetNodesResponse* soap_new_set__tptz__GetNodesResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetNodesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetNodesResponse(soap*, _tptz__GetNodesResponse*) deserialize from a stream
/// - int soap_write__tptz__GetNodesResponse(soap*, _tptz__GetNodesResponse*) serialize to a stream
/// - _tptz__GetNodesResponse* _tptz__GetNodesResponse::soap_dup(soap*) returns deep copy of _tptz__GetNodesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetNodesResponse::soap_del() deep deletes _tptz__GetNodesResponse data members, use only after _tptz__GetNodesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetNodesResponse::soap_type() returns SOAP_TYPE__tptz__GetNodesResponse or derived type identifier
class _tptz__GetNodesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of the existing PTZ Nodes on the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PTZNode* is 0..unbounded.
  $ int                                  __sizePTZNode                  0;
/// Pointer to array tt__PTZNode* of size 0..unbounded.
    tt__PTZNode*                        *PTZNode                        0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNode
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNode is a complexType.
///
/// @note class _tptz__GetNode operations:
/// - _tptz__GetNode* soap_new__tptz__GetNode(soap*) allocate and default initialize
/// - _tptz__GetNode* soap_new__tptz__GetNode(soap*, int num) allocate and default initialize an array
/// - _tptz__GetNode* soap_new_req__tptz__GetNode(soap*, ...) allocate, set required members
/// - _tptz__GetNode* soap_new_set__tptz__GetNode(soap*, ...) allocate, set all public members
/// - _tptz__GetNode::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetNode(soap*, _tptz__GetNode*) deserialize from a stream
/// - int soap_write__tptz__GetNode(soap*, _tptz__GetNode*) serialize to a stream
/// - _tptz__GetNode* _tptz__GetNode::soap_dup(soap*) returns deep copy of _tptz__GetNode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetNode::soap_del() deep deletes _tptz__GetNode data members, use only after _tptz__GetNode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetNode::soap_type() returns SOAP_TYPE__tptz__GetNode or derived type identifier
class _tptz__GetNode
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested PTZNode.
/// </BLOCKQUOTE></PRE>
///
/// Element "NodeToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   NodeToken                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetNodeResponse is a complexType.
///
/// @note class _tptz__GetNodeResponse operations:
/// - _tptz__GetNodeResponse* soap_new__tptz__GetNodeResponse(soap*) allocate and default initialize
/// - _tptz__GetNodeResponse* soap_new__tptz__GetNodeResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetNodeResponse* soap_new_req__tptz__GetNodeResponse(soap*, ...) allocate, set required members
/// - _tptz__GetNodeResponse* soap_new_set__tptz__GetNodeResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetNodeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetNodeResponse(soap*, _tptz__GetNodeResponse*) deserialize from a stream
/// - int soap_write__tptz__GetNodeResponse(soap*, _tptz__GetNodeResponse*) serialize to a stream
/// - _tptz__GetNodeResponse* _tptz__GetNodeResponse::soap_dup(soap*) returns deep copy of _tptz__GetNodeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetNodeResponse::soap_del() deep deletes _tptz__GetNodeResponse data members, use only after _tptz__GetNodeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetNodeResponse::soap_type() returns SOAP_TYPE__tptz__GetNodeResponse or derived type identifier
class _tptz__GetNodeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A requested PTZNode.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZNode" of type "http://www.onvif.org/ver10/schema":PTZNode.
    tt__PTZNode*                         PTZNode                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurations is a complexType.
///
/// @note class _tptz__GetConfigurations operations:
/// - _tptz__GetConfigurations* soap_new__tptz__GetConfigurations(soap*) allocate and default initialize
/// - _tptz__GetConfigurations* soap_new__tptz__GetConfigurations(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurations* soap_new_req__tptz__GetConfigurations(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurations* soap_new_set__tptz__GetConfigurations(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurations(soap*, _tptz__GetConfigurations*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurations(soap*, _tptz__GetConfigurations*) serialize to a stream
/// - _tptz__GetConfigurations* _tptz__GetConfigurations::soap_dup(soap*) returns deep copy of _tptz__GetConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurations::soap_del() deep deletes _tptz__GetConfigurations data members, use only after _tptz__GetConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurations::soap_type() returns SOAP_TYPE__tptz__GetConfigurations or derived type identifier
class _tptz__GetConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationsResponse is a complexType.
///
/// @note class _tptz__GetConfigurationsResponse operations:
/// - _tptz__GetConfigurationsResponse* soap_new__tptz__GetConfigurationsResponse(soap*) allocate and default initialize
/// - _tptz__GetConfigurationsResponse* soap_new__tptz__GetConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurationsResponse* soap_new_req__tptz__GetConfigurationsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurationsResponse* soap_new_set__tptz__GetConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurationsResponse(soap*, _tptz__GetConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationsResponse(soap*, _tptz__GetConfigurationsResponse*) serialize to a stream
/// - _tptz__GetConfigurationsResponse* _tptz__GetConfigurationsResponse::soap_dup(soap*) returns deep copy of _tptz__GetConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurationsResponse::soap_del() deep deletes _tptz__GetConfigurationsResponse data members, use only after _tptz__GetConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurationsResponse::soap_type() returns SOAP_TYPE__tptz__GetConfigurationsResponse or derived type identifier
class _tptz__GetConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of all existing PTZConfigurations on the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PTZConfiguration* is 0..unbounded.
  $ int                                  __sizePTZConfiguration         0;
/// Pointer to array tt__PTZConfiguration* of size 0..unbounded.
    tt__PTZConfiguration*               *PTZConfiguration               0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfiguration is a complexType.
///
/// @note class _tptz__GetConfiguration operations:
/// - _tptz__GetConfiguration* soap_new__tptz__GetConfiguration(soap*) allocate and default initialize
/// - _tptz__GetConfiguration* soap_new__tptz__GetConfiguration(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfiguration* soap_new_req__tptz__GetConfiguration(soap*, ...) allocate, set required members
/// - _tptz__GetConfiguration* soap_new_set__tptz__GetConfiguration(soap*, ...) allocate, set all public members
/// - _tptz__GetConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfiguration(soap*, _tptz__GetConfiguration*) deserialize from a stream
/// - int soap_write__tptz__GetConfiguration(soap*, _tptz__GetConfiguration*) serialize to a stream
/// - _tptz__GetConfiguration* _tptz__GetConfiguration::soap_dup(soap*) returns deep copy of _tptz__GetConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfiguration::soap_del() deep deletes _tptz__GetConfiguration data members, use only after _tptz__GetConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfiguration::soap_type() returns SOAP_TYPE__tptz__GetConfiguration or derived type identifier
class _tptz__GetConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of the requested PTZConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PTZConfigurationToken          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationResponse is a complexType.
///
/// @note class _tptz__GetConfigurationResponse operations:
/// - _tptz__GetConfigurationResponse* soap_new__tptz__GetConfigurationResponse(soap*) allocate and default initialize
/// - _tptz__GetConfigurationResponse* soap_new__tptz__GetConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurationResponse* soap_new_req__tptz__GetConfigurationResponse(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurationResponse* soap_new_set__tptz__GetConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurationResponse(soap*, _tptz__GetConfigurationResponse*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationResponse(soap*, _tptz__GetConfigurationResponse*) serialize to a stream
/// - _tptz__GetConfigurationResponse* _tptz__GetConfigurationResponse::soap_dup(soap*) returns deep copy of _tptz__GetConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurationResponse::soap_del() deep deletes _tptz__GetConfigurationResponse data members, use only after _tptz__GetConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurationResponse::soap_type() returns SOAP_TYPE__tptz__GetConfigurationResponse or derived type identifier
class _tptz__GetConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A requested PTZConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetConfiguration is a complexType.
///
/// @note class _tptz__SetConfiguration operations:
/// - _tptz__SetConfiguration* soap_new__tptz__SetConfiguration(soap*) allocate and default initialize
/// - _tptz__SetConfiguration* soap_new__tptz__SetConfiguration(soap*, int num) allocate and default initialize an array
/// - _tptz__SetConfiguration* soap_new_req__tptz__SetConfiguration(soap*, ...) allocate, set required members
/// - _tptz__SetConfiguration* soap_new_set__tptz__SetConfiguration(soap*, ...) allocate, set all public members
/// - _tptz__SetConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetConfiguration(soap*, _tptz__SetConfiguration*) deserialize from a stream
/// - int soap_write__tptz__SetConfiguration(soap*, _tptz__SetConfiguration*) serialize to a stream
/// - _tptz__SetConfiguration* _tptz__SetConfiguration::soap_dup(soap*) returns deep copy of _tptz__SetConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetConfiguration::soap_del() deep deletes _tptz__SetConfiguration data members, use only after _tptz__SetConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetConfiguration::soap_type() returns SOAP_TYPE__tptz__SetConfiguration or derived type identifier
class _tptz__SetConfiguration
{ public:

/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Flag that makes configuration persistent. Example: User wants the configuration to exist after reboot.
/// </BLOCKQUOTE></PRE>
///
/// Element "ForcePersistence" of type xs:boolean.
    bool                                 ForcePersistence               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetConfigurationResponse is a complexType.
///
/// @note class _tptz__SetConfigurationResponse operations:
/// - _tptz__SetConfigurationResponse* soap_new__tptz__SetConfigurationResponse(soap*) allocate and default initialize
/// - _tptz__SetConfigurationResponse* soap_new__tptz__SetConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__SetConfigurationResponse* soap_new_req__tptz__SetConfigurationResponse(soap*, ...) allocate, set required members
/// - _tptz__SetConfigurationResponse* soap_new_set__tptz__SetConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tptz__SetConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetConfigurationResponse(soap*, _tptz__SetConfigurationResponse*) deserialize from a stream
/// - int soap_write__tptz__SetConfigurationResponse(soap*, _tptz__SetConfigurationResponse*) serialize to a stream
/// - _tptz__SetConfigurationResponse* _tptz__SetConfigurationResponse::soap_dup(soap*) returns deep copy of _tptz__SetConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetConfigurationResponse::soap_del() deep deletes _tptz__SetConfigurationResponse data members, use only after _tptz__SetConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetConfigurationResponse::soap_type() returns SOAP_TYPE__tptz__SetConfigurationResponse or derived type identifier
class _tptz__SetConfigurationResponse
{ public:
//  BEGIN SEQUENCE <xs:sequence minOccurs="0">
    struct __tptz__SetConfigurationResponse_sequence
    {
    }                                   *__SetConfigurationResponse_sequence 0;
//  END OF SEQUENCE
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptions is a complexType.
///
/// @note class _tptz__GetConfigurationOptions operations:
/// - _tptz__GetConfigurationOptions* soap_new__tptz__GetConfigurationOptions(soap*) allocate and default initialize
/// - _tptz__GetConfigurationOptions* soap_new__tptz__GetConfigurationOptions(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurationOptions* soap_new_req__tptz__GetConfigurationOptions(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurationOptions* soap_new_set__tptz__GetConfigurationOptions(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurationOptions::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurationOptions(soap*, _tptz__GetConfigurationOptions*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationOptions(soap*, _tptz__GetConfigurationOptions*) serialize to a stream
/// - _tptz__GetConfigurationOptions* _tptz__GetConfigurationOptions::soap_dup(soap*) returns deep copy of _tptz__GetConfigurationOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurationOptions::soap_del() deep deletes _tptz__GetConfigurationOptions data members, use only after _tptz__GetConfigurationOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurationOptions::soap_type() returns SOAP_TYPE__tptz__GetConfigurationOptions or derived type identifier
class _tptz__GetConfigurationOptions
{ public:
/// <PRE><BLOCKQUOTE>
///   Token of an existing configuration that the options are intended for.
/// </BLOCKQUOTE></PRE>
///
/// Element "ConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ConfigurationToken             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetConfigurationOptionsResponse is a complexType.
///
/// @note class _tptz__GetConfigurationOptionsResponse operations:
/// - _tptz__GetConfigurationOptionsResponse* soap_new__tptz__GetConfigurationOptionsResponse(soap*) allocate and default initialize
/// - _tptz__GetConfigurationOptionsResponse* soap_new__tptz__GetConfigurationOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetConfigurationOptionsResponse* soap_new_req__tptz__GetConfigurationOptionsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetConfigurationOptionsResponse* soap_new_set__tptz__GetConfigurationOptionsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetConfigurationOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetConfigurationOptionsResponse(soap*, _tptz__GetConfigurationOptionsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetConfigurationOptionsResponse(soap*, _tptz__GetConfigurationOptionsResponse*) serialize to a stream
/// - _tptz__GetConfigurationOptionsResponse* _tptz__GetConfigurationOptionsResponse::soap_dup(soap*) returns deep copy of _tptz__GetConfigurationOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetConfigurationOptionsResponse::soap_del() deep deletes _tptz__GetConfigurationOptionsResponse data members, use only after _tptz__GetConfigurationOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetConfigurationOptionsResponse::soap_type() returns SOAP_TYPE__tptz__GetConfigurationOptionsResponse or derived type identifier
class _tptz__GetConfigurationOptionsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The requested PTZ configuration options.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfigurationOptions" of type "http://www.onvif.org/ver10/schema":PTZConfigurationOptions.
    tt__PTZConfigurationOptions*         PTZConfigurationOptions        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommand is a complexType.
///
/// @note class _tptz__SendAuxiliaryCommand operations:
/// - _tptz__SendAuxiliaryCommand* soap_new__tptz__SendAuxiliaryCommand(soap*) allocate and default initialize
/// - _tptz__SendAuxiliaryCommand* soap_new__tptz__SendAuxiliaryCommand(soap*, int num) allocate and default initialize an array
/// - _tptz__SendAuxiliaryCommand* soap_new_req__tptz__SendAuxiliaryCommand(soap*, ...) allocate, set required members
/// - _tptz__SendAuxiliaryCommand* soap_new_set__tptz__SendAuxiliaryCommand(soap*, ...) allocate, set all public members
/// - _tptz__SendAuxiliaryCommand::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SendAuxiliaryCommand(soap*, _tptz__SendAuxiliaryCommand*) deserialize from a stream
/// - int soap_write__tptz__SendAuxiliaryCommand(soap*, _tptz__SendAuxiliaryCommand*) serialize to a stream
/// - _tptz__SendAuxiliaryCommand* _tptz__SendAuxiliaryCommand::soap_dup(soap*) returns deep copy of _tptz__SendAuxiliaryCommand, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SendAuxiliaryCommand::soap_del() deep deletes _tptz__SendAuxiliaryCommand data members, use only after _tptz__SendAuxiliaryCommand::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SendAuxiliaryCommand::soap_type() returns SOAP_TYPE__tptz__SendAuxiliaryCommand or derived type identifier
class _tptz__SendAuxiliaryCommand
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The Auxiliary request data.
/// </BLOCKQUOTE></PRE>
///
/// Element "AuxiliaryData" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryData                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
/// @note class _tptz__SendAuxiliaryCommandResponse operations:
/// - _tptz__SendAuxiliaryCommandResponse* soap_new__tptz__SendAuxiliaryCommandResponse(soap*) allocate and default initialize
/// - _tptz__SendAuxiliaryCommandResponse* soap_new__tptz__SendAuxiliaryCommandResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__SendAuxiliaryCommandResponse* soap_new_req__tptz__SendAuxiliaryCommandResponse(soap*, ...) allocate, set required members
/// - _tptz__SendAuxiliaryCommandResponse* soap_new_set__tptz__SendAuxiliaryCommandResponse(soap*, ...) allocate, set all public members
/// - _tptz__SendAuxiliaryCommandResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SendAuxiliaryCommandResponse(soap*, _tptz__SendAuxiliaryCommandResponse*) deserialize from a stream
/// - int soap_write__tptz__SendAuxiliaryCommandResponse(soap*, _tptz__SendAuxiliaryCommandResponse*) serialize to a stream
/// - _tptz__SendAuxiliaryCommandResponse* _tptz__SendAuxiliaryCommandResponse::soap_dup(soap*) returns deep copy of _tptz__SendAuxiliaryCommandResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SendAuxiliaryCommandResponse::soap_del() deep deletes _tptz__SendAuxiliaryCommandResponse data members, use only after _tptz__SendAuxiliaryCommandResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SendAuxiliaryCommandResponse::soap_type() returns SOAP_TYPE__tptz__SendAuxiliaryCommandResponse or derived type identifier
class _tptz__SendAuxiliaryCommandResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The response contains the auxiliary response.
/// </BLOCKQUOTE></PRE>
///
/// Element "AuxiliaryResponse" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryResponse              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresets
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresets is a complexType.
///
/// @note class _tptz__GetPresets operations:
/// - _tptz__GetPresets* soap_new__tptz__GetPresets(soap*) allocate and default initialize
/// - _tptz__GetPresets* soap_new__tptz__GetPresets(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresets* soap_new_req__tptz__GetPresets(soap*, ...) allocate, set required members
/// - _tptz__GetPresets* soap_new_set__tptz__GetPresets(soap*, ...) allocate, set all public members
/// - _tptz__GetPresets::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresets(soap*, _tptz__GetPresets*) deserialize from a stream
/// - int soap_write__tptz__GetPresets(soap*, _tptz__GetPresets*) serialize to a stream
/// - _tptz__GetPresets* _tptz__GetPresets::soap_dup(soap*) returns deep copy of _tptz__GetPresets, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresets::soap_del() deep deletes _tptz__GetPresets data members, use only after _tptz__GetPresets::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresets::soap_type() returns SOAP_TYPE__tptz__GetPresets or derived type identifier
class _tptz__GetPresets
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetsResponse is a complexType.
///
/// @note class _tptz__GetPresetsResponse operations:
/// - _tptz__GetPresetsResponse* soap_new__tptz__GetPresetsResponse(soap*) allocate and default initialize
/// - _tptz__GetPresetsResponse* soap_new__tptz__GetPresetsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetsResponse* soap_new_req__tptz__GetPresetsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetPresetsResponse* soap_new_set__tptz__GetPresetsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetsResponse(soap*, _tptz__GetPresetsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetsResponse(soap*, _tptz__GetPresetsResponse*) serialize to a stream
/// - _tptz__GetPresetsResponse* _tptz__GetPresetsResponse::soap_dup(soap*) returns deep copy of _tptz__GetPresetsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetsResponse::soap_del() deep deletes _tptz__GetPresetsResponse data members, use only after _tptz__GetPresetsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetsResponse::soap_type() returns SOAP_TYPE__tptz__GetPresetsResponse or derived type identifier
class _tptz__GetPresetsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of presets which are available for the requested MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PTZPreset* is 0..unbounded.
  $ int                                  __sizePreset                   0;
/// Pointer to array tt__PTZPreset* of size 0..unbounded.
    tt__PTZPreset*                      *Preset                         0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetPreset is a complexType.
///
/// @note class _tptz__SetPreset operations:
/// - _tptz__SetPreset* soap_new__tptz__SetPreset(soap*) allocate and default initialize
/// - _tptz__SetPreset* soap_new__tptz__SetPreset(soap*, int num) allocate and default initialize an array
/// - _tptz__SetPreset* soap_new_req__tptz__SetPreset(soap*, ...) allocate, set required members
/// - _tptz__SetPreset* soap_new_set__tptz__SetPreset(soap*, ...) allocate, set all public members
/// - _tptz__SetPreset::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetPreset(soap*, _tptz__SetPreset*) deserialize from a stream
/// - int soap_write__tptz__SetPreset(soap*, _tptz__SetPreset*) serialize to a stream
/// - _tptz__SetPreset* _tptz__SetPreset::soap_dup(soap*) returns deep copy of _tptz__SetPreset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetPreset::soap_del() deep deletes _tptz__SetPreset data members, use only after _tptz__SetPreset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetPreset::soap_type() returns SOAP_TYPE__tptz__SetPreset or derived type identifier
class _tptz__SetPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset name.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetName" of type xs:string.
    char*                                PresetName                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetPresetResponse is a complexType.
///
/// @note class _tptz__SetPresetResponse operations:
/// - _tptz__SetPresetResponse* soap_new__tptz__SetPresetResponse(soap*) allocate and default initialize
/// - _tptz__SetPresetResponse* soap_new__tptz__SetPresetResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__SetPresetResponse* soap_new_req__tptz__SetPresetResponse(soap*, ...) allocate, set required members
/// - _tptz__SetPresetResponse* soap_new_set__tptz__SetPresetResponse(soap*, ...) allocate, set all public members
/// - _tptz__SetPresetResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetPresetResponse(soap*, _tptz__SetPresetResponse*) deserialize from a stream
/// - int soap_write__tptz__SetPresetResponse(soap*, _tptz__SetPresetResponse*) serialize to a stream
/// - _tptz__SetPresetResponse* _tptz__SetPresetResponse::soap_dup(soap*) returns deep copy of _tptz__SetPresetResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetPresetResponse::soap_del() deep deletes _tptz__SetPresetResponse data members, use only after _tptz__SetPresetResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetPresetResponse::soap_type() returns SOAP_TYPE__tptz__SetPresetResponse or derived type identifier
class _tptz__SetPresetResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A token to the Preset which has been set.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePreset is a complexType.
///
/// @note class _tptz__RemovePreset operations:
/// - _tptz__RemovePreset* soap_new__tptz__RemovePreset(soap*) allocate and default initialize
/// - _tptz__RemovePreset* soap_new__tptz__RemovePreset(soap*, int num) allocate and default initialize an array
/// - _tptz__RemovePreset* soap_new_req__tptz__RemovePreset(soap*, ...) allocate, set required members
/// - _tptz__RemovePreset* soap_new_set__tptz__RemovePreset(soap*, ...) allocate, set all public members
/// - _tptz__RemovePreset::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RemovePreset(soap*, _tptz__RemovePreset*) deserialize from a stream
/// - int soap_write__tptz__RemovePreset(soap*, _tptz__RemovePreset*) serialize to a stream
/// - _tptz__RemovePreset* _tptz__RemovePreset::soap_dup(soap*) returns deep copy of _tptz__RemovePreset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RemovePreset::soap_del() deep deletes _tptz__RemovePreset data members, use only after _tptz__RemovePreset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RemovePreset::soap_type() returns SOAP_TYPE__tptz__RemovePreset or derived type identifier
class _tptz__RemovePreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetResponse is a complexType.
///
/// @note class _tptz__RemovePresetResponse operations:
/// - _tptz__RemovePresetResponse* soap_new__tptz__RemovePresetResponse(soap*) allocate and default initialize
/// - _tptz__RemovePresetResponse* soap_new__tptz__RemovePresetResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__RemovePresetResponse* soap_new_req__tptz__RemovePresetResponse(soap*, ...) allocate, set required members
/// - _tptz__RemovePresetResponse* soap_new_set__tptz__RemovePresetResponse(soap*, ...) allocate, set all public members
/// - _tptz__RemovePresetResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RemovePresetResponse(soap*, _tptz__RemovePresetResponse*) deserialize from a stream
/// - int soap_write__tptz__RemovePresetResponse(soap*, _tptz__RemovePresetResponse*) serialize to a stream
/// - _tptz__RemovePresetResponse* _tptz__RemovePresetResponse::soap_dup(soap*) returns deep copy of _tptz__RemovePresetResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RemovePresetResponse::soap_del() deep deletes _tptz__RemovePresetResponse data members, use only after _tptz__RemovePresetResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RemovePresetResponse::soap_type() returns SOAP_TYPE__tptz__RemovePresetResponse or derived type identifier
class _tptz__RemovePresetResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoPreset is a complexType.
///
/// @note class _tptz__GotoPreset operations:
/// - _tptz__GotoPreset* soap_new__tptz__GotoPreset(soap*) allocate and default initialize
/// - _tptz__GotoPreset* soap_new__tptz__GotoPreset(soap*, int num) allocate and default initialize an array
/// - _tptz__GotoPreset* soap_new_req__tptz__GotoPreset(soap*, ...) allocate, set required members
/// - _tptz__GotoPreset* soap_new_set__tptz__GotoPreset(soap*, ...) allocate, set all public members
/// - _tptz__GotoPreset::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GotoPreset(soap*, _tptz__GotoPreset*) deserialize from a stream
/// - int soap_write__tptz__GotoPreset(soap*, _tptz__GotoPreset*) serialize to a stream
/// - _tptz__GotoPreset* _tptz__GotoPreset::soap_dup(soap*) returns deep copy of _tptz__GotoPreset, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GotoPreset::soap_del() deep deletes _tptz__GotoPreset data members, use only after _tptz__GotoPreset::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GotoPreset::soap_type() returns SOAP_TYPE__tptz__GotoPreset or derived type identifier
class _tptz__GotoPreset
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoPresetResponse is a complexType.
///
/// @note class _tptz__GotoPresetResponse operations:
/// - _tptz__GotoPresetResponse* soap_new__tptz__GotoPresetResponse(soap*) allocate and default initialize
/// - _tptz__GotoPresetResponse* soap_new__tptz__GotoPresetResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GotoPresetResponse* soap_new_req__tptz__GotoPresetResponse(soap*, ...) allocate, set required members
/// - _tptz__GotoPresetResponse* soap_new_set__tptz__GotoPresetResponse(soap*, ...) allocate, set all public members
/// - _tptz__GotoPresetResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GotoPresetResponse(soap*, _tptz__GotoP