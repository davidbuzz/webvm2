 gains
    - BRD_SAFETYOPTION parameter documentation fix (ActiveForSafetyEnable and Disable were reversed)
    - Compassmot fix to protect against bad gyro biases from GSF yaw
    - ICE engine fix for starting after reaching a specified altitude
    - LED thread locking fix to avoid watchdog
    - Logging rotation on disarm disabled if Replay logging active (avoids gaps in logs)
    - RC input on IOMCU bug fix (RC might not be regained if lost)
    - Serial passthrough fixed
5) Custom build server fix to which features are included/excluded
------------------------------------------------------------------
Copter 4.4.0-beta1 19-Apr-2023
Changes from 4.3.6
1) New autopilots supported
    - ESP32
    - Flywoo Goku F405S AIO
    - Foxeer H743v1
    - MambaF405-2022B
    - PixPilot-V3
    - PixSurveyA2
    - rFCU H743
    - ThePeach K1/R1
2) Autopilot specific changes
    - Bi-Directional DShot support for CubeOrangePlus-bdshot, CUAVNora+, MatekF405TE/VTOL-bdshot, MatekL431, Pixhawk6C-bdshot, QioTekZealotH743-bdshot
    - Bi-Directional DShot up to 8 channels on MatekH743
    - BlueRobotics Navigator supports baro on I2C bus 6
    - BMP280 baro only for BeastF7, KakuteF4, KakuteF7Mini, MambaF405, MatekF405, Omnibusf4 to reduce code size (aka "flash")
    - CSRF and Hott telemetry disabled by default on some low power boards (aka "minimised boards")
    - Foxeer Reaper F745 supports external compasses
    - OmnibusF4 support for BMI270 IMU
    - OmnibusF7V2-bdshot support removed
    - KakuteF7 regains displayport, frees up DMA from unused serial port
    - KakuteH7v2 gets second battery sensor
    - MambaH743v4 supports VTX
    - MatekF405-Wing supports InvensenseV3 IMUs
    - PixPilot-V6 heater enabled
    - Raspberry 64OS startup crash fixed
    - ReaperF745AIO serial protocol defaults fixed
    - SkystarsH7HD (non-bdshot) removed as users should always use -bdshot version
    - Skyviper loses many unnecessary features to save flash
    - UBlox GPS only for AtomRCF405NAVI, BeastF7, MatekF405, Omnibusf4 to reduce code size (aka "flash")
    - VRBrain-v52 and VRCore-v10 features reduced to save flash
3) Driver enhancements
    - ARK RTK GPS support
    - BMI088 IMU filtering and timing improved, ignores bad data
    - CRSF OSD may display disarmed state after flight mode (enabled using RC_OPTIONS)
    - Daiwa winch baud rate obeys SERIALx_BAUD parameter
    - EFI supports fuel pressure and ignition voltage reporting and battery failsafe
    - ICM45686 IMU support
    - ICM20602 uses fast reset instead of full reset on bad temperature sample (avoids occasional very high offset)
    - ICM45686 supports fast sampling
    - MAX31865 temp sensor support
    - MB85RS256TY-32k, PB85RS128C and PB85RS2MC FRAM support
    - MMC3416 compass orientation fix
    - MPPT battery monitor reliability improvements, enable/disable aux function and less spammy
    - Multiple USD-D1-CAN radar support
    - NMEA output rate configurable (see NMEA_RATE_MS) 
    - NMEA output supports PASHR message (see NMEA_MSG_EN)
    - OSD supports average resting cell voltage (see OSD_ACRVOLT_xxx params)
    - Rockblock satellite modem support
    - Serial baud support for 2Mbps (only some hardware supports this speed)
    - SF45b lidar filtering reduced (allows detecting smaller obstacles
    - SmartAudio 2.0 learns all VTX power levels)
    - UAVCAN ESCs report error count using ESC Telemetry
    - Unicore GPS (e.g. UM982) support
    - VectorNav 100 external AHRS support
    - 5 IMUs supported
4) EKF related enhancements
    - Baro compensation using wind estimates works when climbing or descending (see BAROx_WCF_UP/DN)
    - External AHRS support for enabling only some sensors (e.g. IMU, Baro, Compass) see EAHRS_SENSORS
    - Magnetic field tables updated
    - Non-compass initial yaw alignment uses GPS course over GSF (mostly affects Planes and Rover)
5) Control and navigation enhancements
    - AutoTune of attitude control yaw D gain (set AUTOTUNE_AXES=8)
    - Circle moode and Loiter Turns command supports counter-clockwise rotation (set CIRCLE_RATE to negative number)
    - DO_SET_ROI_NONE command turns off ROI
    - JUMP_TAG mission item support
    - Missions can be stored on SD card (see BRD_SD_MISSION)
    - NAV_SCRIPT_TIME command accepts floating point arguments
    - Pause/Resume returns success if mission is already paused or resumed
    - Payload Place enhancements
        - Descent speed is configurable (see PLDP_SPEED_DN)
        - Manual release supported (detects pilot release of gripper)
        - Post release delay is configurable (see PLDP_DELAY)
        - Range finder range used to protect against premature release (see PLDP_RNG_MIN)
        - Touchdown detection threshold is configurable (see PLDP_THRESH)
    - Position controller angle max adjusted inflight with CH6 Tuning knob (set TUNE=59)
    - Surface tracking time constant allows tuning response (see SURFTRAK_TC)
    - Throttle-Gain boost increases attitude control gains when throttle high (see ATC_THR_G_BOOST)
    - Waypoint navigation cornering acceleration is configurable (see WPNAV_ACCEL_C)
    - WeatherVane into the wind in Auto and Guided modes (see WVANE_ENABLE)
6) TradHeli specific enhancements
    - Manual autorotation support
    - Improved collect to yaw compensation
7) Filtering enhancements
    - FFT notch can be run based on filtered data
    - Warn of motor noise at RPM frequency using FFT
    - In-flight FFT can better track low frequency noise
    - In-flight FFT logging improved
    - IMU data can be read and replayed for FFT analysis
8) Camera and gimbal enhancements
    - BMMCC support included in Servo driver
    - DJI RS2/RS3-Pro gimbal support
    - Dual camera support (see CAM2_TYPE)
    - Gimbal/Mount2 can be moved to retracted or neutral position
    - Gremsy ZIO support
    - IMAGE_START_CAPTURE, SET_CAMERA_ZOOM/FOCUS, VIDEO_START/STOP_CAPTURE command support
    - Paramters renamed and rescaled
        - CAM_TRIGG_TYPE renamed to CAM1_TYPE and options have changed
        - CAM_DURATION renamed to CAM1_DURATION and scaled in seconds
        - CAM_FEEDBACK_PIN/POL renamed to CAM1_FEEBAK_PIN/POL
        - CAM_MIN_INTERVAL renamed to CAM1_INTRVAL_MIN and scaled in seconds
        - CAM_TRIGG_DIST renamed to CAMx_TRIGG_DIST and accepts fractional values
    - RunCam2 4k support
    - ViewPro camera gimbal support
9) Logging changes
    - BARD msg includes 3-axis dynamic pressure useful for baro compensation of wind estimate
    - MCU log msg includes main CPU temp and voltage (was part of POWR message)
    - RCOut banner message always included in Logs
    - SCR message includes memory usage of all running scripts
    - CANS message includes CAN bus tx/rx statistics
    - OFCA (optical flow calibration log message) units added
    - Home location not logged to CMD message
    - MOTB message includes throttle output
10) Scripting enhancements
    - Copter deadreckoning upgraded to applet
    - EFI Skypower driver gets improved telem messages and bug fixes
    - Generator throttle control example added
    - Heap max increased by allowing heap to be split across multiple underlying OS heaps
    - Hexsoon LEDs applet
    - Logging from scripts supports more formats
    - Parameters can be removed or reordered
    - Parameter description support (scripts must be in AP's applet or driver directory)
    - Rangefinder driver support
    - Runcam_on_arm applet starts recording when vehicle is armed
    - Safety switch, E-Stop and motor interlock support
    - Scripts can restart all scripts
    - Script_Controller applet supports inflight switching of active scripts
11) Custom build server enhancements
    - AIS support for displaying nearby boats can be included
    - Battery, Camera and Compass drivers can be included/excluded
    - EKF3 wind estimation can be included/excluded
    - PCA9685, ToshibaLED, PLAY_TUNE notify drivers can be included/excluded
    - Preclanding can be included/excluded
    - RichenPower generator can be included/excluded
    - RC SRXL protocol can be excluded
    - SIRF GPSs can be included/excluded
12) Safety related enhancements and fixes
    - Arming check for high throttle skipped when arming in Auto mode
    - Arming check for servo outputs skipped when SERVOx_FUNCTION is scripting
    - Arming check fix if both "All" and other bitmasks are selected (previously only ran the other checks)
    - "EK3 sources require RangeFinder" pre-arm check fix when user only sets up 2nd rangefinder (e.g. 1st is disabled)
    - Pre-arm check that low and critical battery failsafe thresholds are different
    - Pre-arm message fixed if 2nd EKF core unhealthy
    - Pre-arm check if reboot required to enabled IMU batch sampling (used for vibe analysis)
    - RC failsafe (aka throttle failsafe) option to change to Brake mode
    - RC failsafe timeout configurable (see RC_FS_TIMEOUT)
    - Takeoff check of motor RPM (see TKOFF_RPM_MIN)
    - Turtle mode warns user to raise throttle to arm
13) Minor enhancements
    - Boot time reduced by improving parameter conversion efficiency
    - BRD_SAFETYENABLE parameter renamed to BRD_SAFETY_DEFLT
    - Compass calibration auxiliary switch function (set RCx_OPTION=171)
    - Disable IMU3 auxiliary switch function (set RCx_OPTION=110)
    - Frame type sent to GCS defaults to multicopter to ease first time setup
    - Rangefinder and FS_OPTIONS param conversion code reduced (affects when upgrading from 3.6 or earlier)
    - MAVFTP supports file renaming
    - MAVLink in-progress reply to some requests for calibration from GCS
14) Bug fixes:
    - ADSB telemetry and callsign fixes
    - Battery pct reported to GCS limited to 0% to 100% range
    - Bi-directional DShot fix on H7 boards after system time wrap (more complete fix than in 4.3.6)
    - DisplayPort OSD screen reliability improvement on heavily loaded OSDs especially F4 boards
    - DisplayPort OSD artificial horizon better matches actual horizon
    - EFI Serial MS bug fix to avoid possible infinite loop
    - EKF3 Replay fix when COMPASS_LEARN=3
    - ESC Telemetry external temp reporting fix
    - Fence upload works even if Auto mode is excluded from firmware
    - FMT messages logged even when Fence is exncluded from firmware (e.g. unselected when using custom build server)
    - Guided mode slow yaw fix
    - Hardfault avoided if user changes INS_LOG_BAT_CNT while batch sampling running
    - ICM20649 temp sensor tolerate increased to avoid unnecessary FIFO reset
    - IMU detection bug fix to avoid duplicates
    - IMU temp cal fix when using auxiliary IMU
    - Message Interval fix for restoring default rate https://github.com/ArduPilot/ardupilot/pull/21947
    - RADIO_STATUS messages slow-down feature never completely stops messages from being sent
    - SERVOx_TRIM value output momentarily if SERVOx_FUNCTION is changed from Disabled to RCPassThru, RCIN1, etc.  Avoids momentary divide-by-zero
    - Scripting file system open fix
    - Scripting PWM source deletion crash fix
    - MAVFTP fix for low baudrates (4800 baud and lower)
    - ModalAI VOXL reset handling fix
    - MPU6500 IMU fast sampling rate to 4k (was 1K)
    - NMEA GPGGA output fixed for GPS quality, num sats and hdop
    - Position control reset avoided even with very uneven main loop rate due to high CPU load
    - SingleCopter and CoaxCopter fix to fin centering when using DShot
    - SystemID mode fix to write PID log messages
    - Terrain offset increased from 15m to 30m (see TERRAIN_OFS_MAX)to reduce chance of "clamping"
    - Throttle notch FFT tuning param fix
    - VTX protects against pitmode changes when not enabled or vehicle disarmed
15) Developer specific items
    - DroneCAN replaces UAVCAN
    - FlighAxis simulator rangefinder fixed
    - Scripts in applet and drivers directory checked using linter
    - Simulator supports main loop timing jitter (see SIM_TIME_JITTER)
    - Simulink model and init scripts
    - SITL on hardware support (useful to demo servos moving in response to simulated flight)
    - SITL parameter definitions added (some, not all)
    - Webots 2023a simulator support
    - XPlane support for wider range of aircraft
------------------------------------------------------------------
Copter 4.3.8 24-Aug-2023 / 4.3.8-beta1 12-Aug-2023
Changes from 4.3.7
1) Bug fixes
    - DroneCAN GPS RTK injection fix
    - INAxxx battery monitors allow for battery reset remaining
    - Notch filter gyro glitch caused by race condition fixed
    - Scripting restart memory corruption bug fixed
------------------------------------------------------------------
Copter 4.3.7 31-May-2023 / 4.3.7-beta1 24-May-2023
Changes from 4.3.6
1) Bug fixes
    a) EKF3 accel bias calculations bug fix
    b) EKF3 accel bias process noise adjusted for greater robustness
    c) GSF yaw numerical stability fix caused by compassmot
    d) INS batch sampler fix to avoid watchdog if INS_LOG_BAT_CNT changed without rebooting
    e) Memory corruption bug in the STM32H757 (very rare)
    f) RC input on IOMCU bug fix (RC might not be regained if lost)
------------------------------------------------------------------
Copter 4.3.6 05-Apr-2023 / 4.3.6-beta1, 4.3.6--beta2 27-Mar-2023
Changes from 4.3.5
1) Bi-directional DShot fix for possible motor stop approx 72min after startup 
------------------------------------------------------------------
Copter Copter 4.3.5 14-Mar-2023 / 4.3.5-rc1 01-Mar-2023
Changes from 4.3.4
1) Bug fixes
    a) GPS unconfigured error fix for non-M10 uBlox GPS
    b) Gremsy gimbal fix when attached to autopilot's serial3 (or higher)
    c) Landing detector fix with large AHRS_TRIM values (>0.1)
    d) MambaF405 2022 gets VTX power on support
    e) MCU voltage enabled on H757 CPUs (including CubeOrangePlus)
    f) PiccoloCAN fix for ESC voltage and current scaling 
    g) Servo gimbal mount yaw handling fix (only affects 3-axis servo gimbals)
------------------------------------------------------------------
Copter 4.3.4 01-Mar-2023
Changes from 4.3.4-rc1
1) Lua script PWMSource feature disabled (will be back in 4.4.x)
------------------------------------------------------------------
Copter 4.3.4-rc1 14-Feb-2023
Changes from 4.3.3
1) AutoPilot specific enhancements
    a) CubeOrangePlusBG support
    b) Foxeer ReaperF745 supports external compass
    c) MambaH743v4 supports VTX power
2) Precision landing option to resume tracking target after pilot repositioning
3) Bug fixes
    a) Arming check fix for terrain following with rangefinder (failed if terrain db was disabled)
    b) Arming check fix if BARO_FIELD_ELEV set
    c) Compass calibration diagonals set to 1,1,1 if incorrectly set to 0,0,0
    d) FFT notch tune feature disabled (will be re-released in 4.4)
    e) Gimbal's yaw feed-forward set to zero when landed (affects Gremsy gimbals)
    f) IOMCU double reset and safety disable fix
    g) Logging fix for duplicate format messages
    h) OpenDroneId sets emergency status on crash or chute deploy
    i) Peripheral firmware updates using MAVCAN fixed
    j) RC protocol cannot be changed once detected on boards with IOMCU
    k) Surface tracking uses filtered and corrected rangefinder values
------------------------------------------------------------------
Copter 4.3.3 20-Jan-2023
Changes from 4.3.3-rc1
1) Bug fixes
    a) MAVFTP fix to terminate session error (could cause FTP failures)
    b) IMU fast fifo reset log message max frequency reduced
------------------------------------------------------------------
Copter 4.3.3-rc1 09-Jan-2023
Changes from 4.3.2
1) Autopilot related changes
    a) AIRLink LTE module enable pin and HEAT_ params added
    b) CUAV Nora/Nora+ bdshot firmware (allows Bi-directional DShot)
    c) CubeOrange, CubeYellow gets fast reset of ICM20602
    d) MambaH743v2 with dual ICM42688 supported
    e) PixPilot-V6
2) Attitude and Navigation controllers use real-time dt (better handles variable or slow main loop)
3) MAVFTP speed improvement including faster param download
4) Bug fixes
    a) Analog rangefinder GPIO pin arming check fixed
    b) Arming check of AHRS/EKF vs GPS location disabled if GPS disabled
    c) CRSF gets RC_OPTIONS for ELRS baudrate to avoid RC failsafes
    d) Null pointer checks avoid watchdog when out of memory
    e) Position Controller limit handling improved to avoid overshooting and hard landings
    f) Position Controller internal error after 70min of flight fixed
    g) PSC_ANGLE_MAX param reduction causing WPNAV_ACCEL to be set too low fixed
    h) Servo gimbal yaw jump to opposite side fixed
    i) Siyi A8 gimbal driver's record video feature fixed
    j) SToRM32 serial gimbal driver actual angle reporting fixed (pitch and yaw angle signs were reversed)
    k) Takeoff in Auto, Guided fixed when target altitude is current altitude
    l) Takeoff in Auto handles baro drift before takeoff
    m) Takeoff twitch due to velocity integrator init bug fixed
------------------------------------------------------------------
Copter 4.3.2 23-Dec-2022
Changes from 4.3.2-rc1
1) Reverted arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE)
------------------------------------------------------------------
Copter 4.3.2-rc1 10-Dec-2022
Changes from 4.3.1
1) Arming check that main loop is running at configured speed (e.g. SCHED_LOOP_RATE)
2) uBlox M10 support
3) Autopilot specific changes
    a) CubeOrange defaults to using 2nd IMU as primary
    b) SIRF and SBP GPS disabled on BeastF7v2, MatekF405-STD, MAtekF405-Wing, omnibusf4pro
4) Bug fixes
    a) AutoTune gains loaded correctly during pilot testing
    b) Camera driver's CAM_MIN_INTERVAL fixed if pilot manually triggers extra picture
    c) EKF3 fix when using EK3_RNG_USE_HGT/SPD params and rangefinder provides bad readings
    d) Main loop slowdown after arming fixed (parameter logging was causing delays)
    e) Main loop's fast tasks always run (caused twitches in Loiter on heavily loaded CPUs)
    f) MAVLink commands received on private channels checked for valid target sysid
    g) ModalAI cameras support fixed (ODOMETRY message frame was consumed incorrectly)
    h) Param reset after firmware load fixed on these boards
        - BeastF7v2
        - CubeYellow-bdshot
        - f405-MatekAirspeed
        - FlywooF745Nano
        - KakuteF4Mini
        - KakuteF7-bdshot
        - MatekF405-bdshot
        - MatekF405-STD
        - MatekF405-Wing-bdshot
        - MatekF765-SE
        - MatekF765-Wing-bdshot
    i) Siyi A8 gimbal support fixed
    j) Windows builds move to compiling only 64-bit executables
------------------------------------------------------------------
Copter 4.3.1 05-Dec-2022 / 4.3.1-rc1 17-Nov-2022
Changes from 4.3.0
1) Autopilot specific enhancements
   a) ARKV6X support
   b) MatekH743 supports 8 bi-directional dshot channels
   c) Pixhawk boards support MS5607 baros
   d) SpeedbyBee F405v3 support
2) DroneCAN Airspeed sensor support including hygrometer (aka water vapour) readings
3) EFI support (electronic fuel injection engines)
4) Pre-arm warning if multiple UARTs with SERIALx_PROTOCOL = RCIN
5) Siyi gimbal support
6) Bug fixes
    a) Arm check warning loses duplicate "AHRS" prefix
    b) AtomRCF405NAVI bootloader file name fixed
    c) BRD_SAFETY_MASK fixed on boards with both FMU safety switch and IOMCU
    d) Compass calibration continues even if a single compass's cal fails
    e) Gremsy gimbal driver sends autopilot info at lower rate to save bandwidth
    f) Invensense 42605 and 42609 IMUs use anti-aliasing filter and notch filter
    g) Mode change to AUTOTUNE message shortened
    h) OSD stats screen fix
    i) RC input on serial port uses first UART with SERIALx_PROTOCOL = 23 (was using last)
    j) RunCam caching fix with enablement and setup on 3-pos switch
    k) RTK CAN GPS fix when GPSs conneted to separate CAN ports on autopilot
    l) SkyViper GPS fix
    m) Turtle mode safety fixes (e.g. can only enter Tutle mode with at zero throttle)
------------------------------------------------------------------
Copter 4.3.0 31-Oct-2022 / 4.3.0-beta4 24-Oct-2022
Changes from 4.3.0-beta3
1) Scripting supports implementing AUX functions
2) Bug fixes
    a) BMI085 accel scaling fixed
    b) Build with gcc 11.3 fixed (developer only)
    c) EKF3 alt discrepancy if GPS or baro alt changed soon after startup fixed
    d) Harmonic Notch and ESC telem fix when motor outputs are non-contiguous
    e) NMEA GPS's KSXT message parsing fixed (affected position accuracy)
    f) Scripting random number generator fix
------------------------------------------------------------------
Copter 4.3.0-beta3 14-Oct-2022
Changes from 4.3.0-beta2
1) Pixhawk1-1M, fmuv2, fmuv3 display warning if firmware mismatches board's flash size (1M and 2M)
2) Scripting support for multi-byte i2c reads
3) Bug fixes
    a) Airspeed CAN sensor ordering fixed (ordering could change if using multiple airspeed sensors)
    b) BRD_SAFETY_MASK fix for enabling outputs when safety is on
    c) Defaults.parm file processing fixed when a line has >100 characters and/or no new line (developer only)
    d) NMEA serial output precision fixed (was only accurate to 1m, now accurate to 1cm)
------------------------------------------------------------------
Copter 4.3.0-beta2 4-Oct-2022
Changes from 4.3.0-beta1
1) Autopilot specific fixes and enhancements
    a) AIRLink autopilot supports UART2
    b) CUAV V6X supports CAN battery monitor by default
    c) MatekF405-CAN board uses less memory to fix compass calibration issues
    d) Pixhawk1-1M only supports uBlox and NMEA GPSs to save flash space
    e) SkystarsH7HD-bdshot (allows Bi-directional DShot)
    f) SkystarsH7HD supports VTX power by default
2) EFI support
    a) Currawong ECU support (added as Electronic Fuel Injection driver)
    b) Scripting support for EFI drivers (allows writing EFI drivers in Lua)
    c) SkyPower and HFE CAN EFI drivers (via scripting)
3) Safety features
    a) Arming check that SPIN_MIN less than 0.3 and greater than SPIN_ARM
4) Minor enhancements
    a) Autopilot board names max length increased to 23 characters (was 13)
    b) CAN actuators can report PWM equivalent values (eases debugging)
    c) Log download speed improved for boards with "block" backends
    d) Notch filter slew limit reduces chance of notch freq moving incorrectly 
    e) SLCAN disabled when vehicle is armed to reduce CPU load
5) Bug fixes
    a) DO_JUMP mission command fixed if active command changed before changing to Auto mode
    b) EKF3 altitude error fix when using dual GPSs and affinity enabled
    c) FFT indexing bug fixed
    d) Gimbal mount fix to default mode (see MNTx_DEFLT_MODE parameter)
    e) MSP fix to report arm status to DJI FPV goggles
    f) Notch fix for non-throttle notch (was being incorrectly disabled)
    g) OSD fixes for params, font and resolution
    h) RPM reporting from harmonic notch fixed
    i) "Sending unknown message (50)" warning removed
    j) SBF/GSOF/NOVA GPS auto detction of baud rate fixed
    k) VideoTX fixes for buffer overruns and Tramp video transmitter support
------------------------------------------------------------------
Copter 4.3.0-beta1 14-Sep-2022
Changes from 4.2.3
1) New autopilot support
    a) AtomRCF405
    b) CubeOrange-SimOnHardWare
    c) DevEBoxH7v2
    d) KakuteH7Mini-Nand
    e) KakuteH7v2
    f) Mamba F405 Mk4
    g) SkystarsH7HD
    h) bi-directional dshot (aka "bdshot") versions for CubeOrange, CubeYellow, KakuteF7, KakuteH7, MatekF405-Wing, Matek F765, PH4-mini, Pixhawk-1M
2) EKF enhancements and fixes
    a) EK3_GPS_VACC_MAX threshold to control when GPS altitude is used as alt source
    b) EKF ring buffer fix for very slow sensor updates (those that update once every few seconds)
    c) EKF3 source set change captured in Replay logs
3) Gimbal enhancements
    a) Angle limit params renamed and scaled to degrees (e.g. MNT1_ROLL_MIN, MNT1_PITCH_MIN, etc)
    b) BrushlessPWM driver (set MNT1_TYPE = 7) is unstabilized Servo driver
    c) Dual mount support (see MNT1_, MNT2 params)
    d) Gremsy driver added (set MNT1_TYPE = 6)
    e) MAVLink gimbalv2 support including sending GIMBAL_DEVICE_STATUS_UPDATE (replaces MOUNT_STATUS message)
    f) "Mount Lock" auxiliary switch supports follow and lock modes in RC targetting (aka earth-frame and body-frame)    
    g) RC channels to control gimbal set using RCx_OPTION = 212 (Roll), 213 (Pitch) or 214 (Yaw)
    h) RC targetting rotation rate in deg/sec (see MNT1_RC_RATE which r#include "Copter.h"


/*
 * Init and run calls for althold, flight mode
 */

// althold_init - initialise althold controller
bool ModeAltHold::init(bool ignore_checks)
{

    // initialise the vertical position controller
    if (!pos_control->is_active_z()) {
        pos_control->init_z_controller();
    }

    // set vertical speed and acceleration limits
    pos_control->set_max_speed_accel_z(-get_pilot_speed_dn(), g.pilot_speed_up, g.pilot_accel_z);
    pos_control->set_correction_speed_accel_z(-get_pilot_speed_dn(), g.pilot_speed_up, g.pilot_accel_z);

    return true;
}

// althold_run - runs the althold controller
// should be called at 100hz or more
void ModeAltHold::run()
{
    // set vertical speed and acceleration limits
    pos_control->set_max_speed_accel_z(-get_pilot_speed_dn(), g.pilot_speed_up, g.pilot_accel_z);

    // apply SIMPLE mode transform to pilot inputs
    update_simple_mode();

    // get pilot desired lean angles
    float target_roll, target_pitch;
    get_pilot_desired_lean_angles(target_roll, target_pitch, copter.aparm.angle_max, attitude_control->get_althold_lean_angle_max_cd());

    // get pilot's desired yaw rate
    float target_yaw_rate = get_pilot_desired_yaw_rate(channel_yaw->norm_input_dz());

    // get pilot desired climb rate
    float target_climb_rate = get_pilot_desired_climb_rate(channel_throttle->get_control_in());
    target_climb_rate = constrain_float(target_climb_rate, -get_pilot_speed_dn(), g.pilot_speed_up);

    // Alt Hold State Machine Determination
    AltHoldModeState althold_state = get_alt_hold_state(target_climb_rate);

    // Alt Hold State Machine
    switch (althold_state) {

    case AltHoldModeState::MotorStopped:
        attitude_control->reset_rate_controller_I_terms();
        attitude_control->reset_yaw_target_and_rate(false);
        pos_control->relax_z_controller(0.0f);   // forces throttle output to decay to zero
        break;

    case AltHoldModeState::Landed_Ground_Idle:
        attitude_control->reset_yaw_target_and_rate();
        FALLTHROUGH;

    case AltHoldModeState::Landed_Pre_Takeoff:
        attitude_control->reset_rate_controller_I_terms_smoothly();
        pos_control->relax_z_controller(0.0f);   // forces throttle output to decay to zero
        break;

    case AltHoldModeState::Takeoff:
        // initiate take-off
        if (!takeoff.running()) {
            takeoff.start(constrain_float(g.pilot_takeoff_alt,0.0f,1000.0f));
        }

        // get avoidance adjusted climb rate
        target_climb_rate = get_avoidance_adjusted_climbrate(target_climb_rate);

        // set position controller targets adjusted for pilot input
        takeoff.do_pilot_takeoff(target_climb_rate);
        break;

    case AltHoldModeState::Flying:
        motors->set_desired_spool_state(AP_Motors::DesiredSpoolState::THROTTLE_UNLIMITED);

#if AP_AVOIDANCE_ENABLED
        // apply avoidance
        copter.avoid.adjust_roll_pitch(target_roll, target_pitch, copter.aparm.angle_max);
#endif

        // get avoidance adjusted climb rate
        target_climb_rate = get_avoidance_adjusted_climbrate(target_climb_rate);

#if AP_RANGEFINDER_ENABLED
        // update the vertical offset based on the surface measurement
        copter.surface_tracking.update_surface_offset();
#endif

        // Send the commanded climb rate to the position controller
        pos_control->set_pos_target_z_from_climb_rate_cm(target_climb_rate);
        break;
    }

    // call attitude controller
    attitude_control->input_euler_angle_roll_pitch_euler_rate_yaw(target_roll, target_pitch, target_yaw_rate);

    // run the vertical position controller and set output throttle
    pos_control->update_z_controller();
}
                                                                                                                                                                                                                                                                                                                                                                                   #include "Blimp.h"

/*
   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/*
 *  Blimp parameter definitions
 *
 */

#define DEFAULT_FRAME_CLASS 0

const AP_Param::Info Blimp::var_info[] = {
    // @Param: FORMAT_VERSION
    // @DisplayName: Eeprom format version number
    // @Description: This value is incremented when changes are made to the eeprom format
    // @User: Advanced
    GSCALAR(format_version, "FORMAT_VERSION",   0),

    // @Param: SYSID_THISMAV
    // @DisplayName: MAVLink system ID of this vehicle
    // @Description: Allows setting an individual MAVLink system id for this vehicle to distinguish it from others on the same network
    // @Range: 1 255
    // @User: Advanced
    GSCALAR(sysid_this_mav, "SYSID_THISMAV",   MAV_SYSTEM_ID),

    // @Param: SYSID_MYGCS
    // @DisplayName: My ground station number
    // @Description: Allows restricting radio overrides to only come from my ground station
    // @Range: 1 255
    // @Increment: 1
    // @User: Advanced
    GSCALAR(sysid_my_gcs,   "SYSID_MYGCS",     255),

    // @Param: PILOT_THR_FILT
    // @DisplayName: Throttle filter cutoff
    // @Description: Throttle filter cutoff (Hz) - active whenever altitude control is inactive - 0 to disable
    // @User: Advanced
    // @Units: Hz
    // @Range: 0 10
    // @Increment: .5
    GSCALAR(throttle_filt,  "PILOT_THR_FILT",     0),

    // @Param: PILOT_THR_BHV
    // @DisplayName: Throttle stick behavior
    // @Description: Bitmask containing various throttle stick options. TX with sprung throttle can set PILOT_THR_BHV to "1" so motor feedback when landed starts from mid-stick instead of bottom of stick.
    // @User: Standard
    // @Bitmask: 0:Feedback from mid stick,1:High throttle cancels landing,2:Disarm on land detection
    GSCALAR(throttle_behavior, "PILOT_THR_BHV", 0),

    // SerialManager was here

    // @Param: TELEM_DELAY
    // @DisplayName: Telemetry startup delay
    // @Description: The amount of time (in seconds) to delay radio telemetry to prevent an Xbee bricking on power up
    // @User: Advanced
    // @Units: s
    // @Range: 0 30
    // @Increment: 1
    GSCALAR(telem_delay, "TELEM_DELAY",     0),

    // @Param: GCS_PID_MASK
    // @DisplayName: GCS PID tuning mask
    // @Description: bitmask of PIDs to send MAVLink PID_TUNING messages for
    // @User: Advanced
    // @Bitmask: 0:VELX,1:VELY,2:VELZ,3:VELYAW,4:POSX,5:POSY,6:POZ,7:POSYAW
    GSCALAR(gcs_pid_mask, "GCS_PID_MASK",     0),

    // @Param: FS_GCS_ENABLE
    // @DisplayName: Ground Station Failsafe Enable
    // @Description: Controls whether failsafe will be invoked (and what action to take) when connection with Ground station is lost for at least 5 seconds. See FS_OPTIONS param for additional actions, or for cases allowing Mission continuation, when GCS failsafe is enabled.
    // @Values: 0:Disabled/NoAction,5:Land
    // @User: Standard
    GSCALAR(failsafe_gcs, "FS_GCS_ENABLE", FS_GCS_DISABLED),

    // @Param: GPS_HDOP_GOOD
    // @DisplayName: GPS Hdop Good
    // @Description: GPS Hdop value at or below this value represent a good position.  Used for pre-arm checks
    // @Range: 100 900
    // @User: Advanced
    GSCALAR(gps_hdop_good, "GPS_HDOP_GOOD", GPS_HDOP_GOOD_DEFAULT),

    // @Param: FS_THR_ENABLE
    // @DisplayName: Throttle Failsafe Enable
    // @Description: The throttle failsafe allows you to configure a software failsafe activated by a setting on the throttle input channel
    // @Values:  0:Disabled,3:Enabled always Land
    // @User: Standard
    GSCALAR(failsafe_throttle,  "FS_THR_ENABLE",   FS_THR_ENABLED_ALWAYS_RTL),

    // @Param: FS_THR_VALUE
    // @DisplayName: Throttle Failsafe Value
    // @Description: The PWM level in microseconds on channel 3 below which throttle failsafe triggers
    // @Range: 910 1100
    // @Units: PWM
    // @Increment: 1
    // @User: Standard
    GSCALAR(failsafe_throttle_value, "FS_THR_VALUE",      FS_THR_VALUE_DEFAULT),

    // @Param: THR_DZ
    // @DisplayName: Throttle deadzone
    // @Description: The deadzone above and below mid throttle in PWM microseconds. Used in AltHold, Loiter, PosHold flight modes
    // @User: Standard
    // @Range: 0 300
    // @Units: PWM
    // @Increment: 1
    GSCALAR(throttle_deadzone,  "THR_DZ",    THR_DZ_DEFAULT),

    // @Param: FLTMODE1
    // @DisplayName: Flight Mode 1
    // @Description: Flight mode when Channel 5 pwm is <= 1230
    // @Values: 0:LAND,1:MANUAL,2:VELOCITY,3:LOITER
    // @User: Standard
    GSCALAR(flight_mode1, "FLTMODE1",               (uint8_t)FLIGHT_MODE_1),

    // @Param: FLTMODE2
    // @CopyFieldsFrom: FLTMODE1
    // @DisplayName: Flight Mode 2
    // @Description: Flight mode when Channel 5 pwm is >1230, <= 1360
    GSCALAR(flight_mode2, "FLTMODE2",               (uint8_t)FLIGHT_MODE_2),

    // @Param: FLTMODE3
    // @CopyFieldsFrom: FLTMODE1
    // @DisplayName: Flight Mode 3
    // @Description: Flight mode when Channel 5 pwm is >1360, <= 1490
    GSCALAR(flight_mode3, "FLTMODE3",               (uint8_t)FLIGHT_MODE_3),

    // @Param: FLTMODE4
    // @CopyFieldsFrom: FLTMODE1
    // @DisplayName: Flight Mode 4
    // @Description: Flight mode when Channel 5 pwm is >1490, <= 1620
    GSCALAR(flight_mode4, "FLTMODE4",               (uint8_t)FLIGHT_MODE_4),

    // @Param: FLTMODE5
    // @CopyFieldsFrom: FLTMODE1
    // @DisplayName: Flight Mode 5
    // @Description: Flight mode when Channel 5 pwm is >1620, <= 1749
    GSCALAR(flight_mode5, "FLTMODE5",               (uint8_t)FLIGHT_MODE_5),

    // @Param: FLTMODE6
    // @CopyFieldsFrom: FLTMODE1
    // @DisplayName: Flight Mode 6
    // @Description: Flight mode when Channel 5 pwm is >=1750
    GSCALAR(flight_mode6, "FLTMODE6",               (uint8_t)FLIGHT_MODE_6),

    // @Param: FLTMODE_CH
    // @DisplayName: Flightmode channel
    // @Description: RC Channel to use for flight mode control
    // @Values: 0:Disabled,5:Channel5,6:Channel6,7:Channel7,8:Channel8
    // @User: Advanced
    GSCALAR(flight_mode_chan, "FLTMODE_CH",         CH_MODE_DEFAULT),

    // @Param: INITIAL_MODE
    // @DisplayName: Initial flight mode
    // @Description: This selects the mode to start in on boot.
    // @CopyValuesFrom: FLTMODE1
    // @User: Advanced
    GSCALAR(initial_mode,        "INITIAL_MODE",     (uint8_t)Mode::Number::MANUAL),

    // @Param: LOG_BITMASK
    // @DisplayName: Log bitmask
    // @Description: Bitmap of what log types to enable in on-board logger. This value is made up of the sum of each of the log types you want to be saved. On boards supporting microSD cards or other large block-storage devices it is usually best just to enable all basic log types by setting this to 65535.
    // @Bitmask: 0:Fast Attitude,1:Medium Attitude,2:GPS,3:System Performance,4:Control Tuning,6:RC Input,7:IMU,9:Battery Monitor,10:RC Output,12:PID,13:Compass
    // @User: Standard
    GSCALAR(log_bitmask,    "LOG_BITMASK",          DEFAULT_LOG_BITMASK),

    // @Group: ARMING_
    // @Path: ../libraries/AP_Arming/AP_Arming.cpp
    GOBJECT(arming,                 "ARMING_", AP_Arming_Blimp),

    // @Param: DISARM_DELAY
    // @DisplayName: Disarm delay
    // @Description: Delay before automatic disarm in seconds. A value of zero disables auto disarm.
    // @Units: s
    // @Range: 0 127
    // @User: Advanced
    GSCALAR(disarm_delay, "DISARM_DELAY",           AUTO_DISARMING_DELAY),

    // @Param: FS_EKF_ACTION
    // @DisplayName: EKF Failsafe Action
    // @Description: Controls the action that will be taken when an EKF failsafe is invoked
    // @Values: 1:Land, 3:Land even in MANUAL
    // @User: Advanced
    GSCALAR(fs_ekf_action, "FS_EKF_ACTION",    FS_EKF_ACTION_DEFAULT),

    // @Param: FS_EKF_THRESH
    // @DisplayName: EKF failsafe variance threshold
    // @Description: Allows setting the maximum acceptable compass and velocity variance
    // @Values: 0.6:Strict, 0.8:Default, 1.0:Relaxed
    // @User: Advanced
    GSCALAR(fs_ekf_thresh, "FS_EKF_THRESH",    FS_EKF_THRESHOLD_DEFAULT),

    // @Param: FS_CRASH_CHECK
    // @DisplayName: Crash check enable
    // @Description: This enables automatic crash checking. When enabled the motors will disarm if a crash is detected.
    // @Values: 0:Disabled, 1:Enabled
    // @User: Advanced
    GSCALAR(fs_crash_check, "FS_CRASH_CHECK",    1),

    // @Param: MAX_VEL_XY
    // @DisplayName: Max XY Velocity
    // @Description: Sets the maximum XY velocity, in m/s
    // @Range: 0.2 5
    // @User: Standard
    GSCALAR(max_vel_xy, "MAX_VEL_XY", 0.5),

    // @Param: MAX_VEL_Z
    // @DisplayName: Max Z Velocity
    // @Description: Sets the maximum Z velocity, in m/s
    // @Range: 0.2 5
    // @User: Standard
    GSCALAR(max_vel_z, "MAX_VEL_Z", 0.4),

    // @Param: MAX_VEL_YAW
    // @DisplayName: Max yaw Velocity
    // @Description: Sets the maximum yaw velocity, in rad/s
    // @Range: 0.2 5
    // @User: Standard
    GSCALAR(max_vel_yaw, "MAX_VEL_YAW", 0.5),

    // @Param: MAX_POS_XY
    // @DisplayName: Max XY Position change
    // @Description: Sets the maximum XY position change, in m/s
    // @Range: 0.1 5
    // @User: Standard
    GSCALAR(max_pos_xy, "MAX_POS_XY", 0.2),

    // @Param: MAX_POS_Z
    // @DisplayName: Max Z Position change
    // @Description: Sets the maximum Z position change, in m/s
    // @Range: 0.1 5
    // @User: Standard
    GSCALAR(max_pos_z, "MAX_POS_Z", 0.15),

    // @Param: MAX_POS_YAW
    // @DisplayName: Max Yaw Position change
    // @Description: Sets the maximum Yaw position change, in rad/s
    // @Range: 0.1 5
    // @User: Standard
    GSCALAR(max_pos_yaw, "MAX_POS_YAW", 0.3),

    // @Param: SIMPLE_MODE
    // @DisplayName: Simple mode
    // @Description: Simple mode for Position control - "forward" moves blimp in +ve X direction world-frame
    // @Values: 0:Disabled, 1:Enabled
    // @User: Standard
    GSCALAR(simple_mode, "SIMPLE_MODE", 0),

    // @Param: DIS_MASK
    // @DisplayName: Disable output mask
    // @Description: Mask for disabling (setting to zero) one or more of the 4 output axis in mode Velocity or Loiter
    // @Bitmask: 0:Right,1:Front,2:Down,3:Yaw
    // @User: Standard
    GSCALAR(dis_mask, "DIS_MASK", 0),

    // @Param: PID_DZ
    // @DisplayName: Deadzone for the position PIDs
    // @Description: Output 0 thrust signal when blimp is within this distance (in meters) of the target position. Warning: If this param is greater than MAX_POS_XY param then the blimp won't move at all in the XY plane in Loiter mode as it does not allow more than a second's lag. Same for the other axes.
    // @Units: m
    // @Range: 0.1 1
    // @User: Standard
    GSCALAR(pid_dz, "PID_DZ", 0),

    // @Param: RC_SPEED
    // @DisplayName: ESC Update Speed
    // @Description: This is the speed in Hertz that your ESCs will receive updates
    // @Units: Hz
    // @Range: 50 490
    // @Increment: 1
    // @User: Advanced
    GSCALAR(rc_speed, "RC_SPEED",              RC_FAST_SPEED),

    // variables not in the g class which contain EEPROM saved variables

    // @Group: COMPASS_
    // @Path: ../libraries/AP_Compass/AP_Compass.cpp
    GOBJECT(compass,        "COMPASS_", Compass),

    // @Group: INS
    // @Path: ../libraries/AP_InertialSensor/AP_InertialSensor.cpp
    GOBJECT(ins,            "INS", AP_InertialSensor),

    // @Group: SR0_
    // @Path: GCS_Mavlink.cpp
    GOBJECTN(_gcs.chan_parameters[0],  gcs0,       "SR0_",     GCS_MAVLINK_Parameters),

#if MAVLINK_COMM_NUM_BUFFERS >= 2
    // @Group: SR1_
    // @Path: GCS_Mavlink.cpp
    GOBJECTN(_gcs.chan_parameters[1],  gcs1,       "SR1_",     GCS_MAVLINK_Parameters),
#endif

#if MAVLINK_COMM_NUM_BUFFERS >= 3
    // @Group: SR2_
    // @Path: GCS_Mavlink.cpp
    GOBJECTN(_gcs.chan_parameters[2],  gcs2,       "SR2_",     GCS_MAVLINK_Parameters),
#endif

#if MAVLINK_COMM_NUM_BUFFERS >= 4
    // @Group: SR3_
    // @Path: GCS_Mavlink.cpp
    GOBJECTN(_gcs.chan_parameters[3],  gcs3,       "SR3_",     GCS_MAVLINK_Parameters),
#endif

#if MAVLINK_COMM_NUM_BUFFERS >= 5
    // @Group: SR4_
    // @Path: GCS_Mavlink.cpp
    GOBJECTN(_gcs.chan_parameters[4],  gcs4,       "SR4_",     GCS_MAVLINK_Parameters),
#endif

#if MAVLINK_COMM_NUM_BUFFERS >= 6
    // @Group: SR5_
    // @Path: GCS_Mavlink.cpp
    GOBJECTN(_gcs.chan_parameters[5],  gcs5,       "SR5_",     GCS_MAVLINK_Parameters),
#endif

#if MAVLINK_COMM_NUM_BUFFERS >= 7
    // @Group: SR6_
    // @Path: GCS_Mavlink.cpp
    GOBJECTN(_gcs.chan_parameters[6],  gcs6,       "SR6_",     GCS_MAVLINK_Parameters),
#endif

    // @Group: AHRS_
    // @Path: ../libraries/AP_AHRS/AP_AHRS.cpp
    GOBJECT(ahrs,                   "AHRS_",    AP_AHRS),

    // @Group: BATT
    // @Path: ../libraries/AP_BattMonitor/AP_BattMonitor.cpp
    GOBJECT(battery,                "BATT",         AP_BattMonitor),

    // @Group: BRD_
    // @Path: ../libraries/AP_BoardConfig/AP_BoardConfig.cpp
    GOBJECT(BoardConfig,            "BRD_",       AP_BoardConfig),

#if HAL_MAX_CAN_PROTOCOL_DRIVERS
    // @Group: CAN_
    // @Path: ../libraries/AP_CANManager/AP_CANManager.cpp
    GOBJECT(can_mgr,        "CAN_",       AP_CANManager),
#endif

#if AP_SIM_ENABLED
    GOBJECT(sitl, "SIM_", SITL::SIM),
#endif

    // @Group: BARO
    // @Path: ../libraries/AP_Baro/AP_Baro.cpp
    GOBJECT(barometer, "BARO", AP_Baro),

    // GPS driver
    // @Group: GPS
    // @Path: ../libraries/AP_GPS/AP_GPS.cpp
    GOBJECT(gps, "GPS", AP_GPS),

    // @Group: SCHED_
    // @Path: ../libraries/AP_Scheduler/AP_Scheduler.cpp
    GOBJECT(scheduler, "SCHED_", AP_Scheduler),

    // @Group: RCMAP_
    // @Path: ../libraries/AP_RCMapper/AP_RCMapper.cpp
    GOBJECT(rcmap, "RCMAP_",        RCMapper),

#if HAL_NAVEKF2_AVAILABLE
    // @Group: EK2_
    // @Path: ../libraries/AP_NavEKF2/AP_NavEKF2.cpp
    GOBJECTN(ahrs.EKF2, NavEKF2, "EK2_", NavEKF2),
#endif

#if HAL_NAVEKF3_AVAILABLE
    // @Group: EK3_
    // @Path: ../libraries/AP_NavEKF3/AP_NavEKF3.cpp
    GOBJECTN(ahrs.EKF3, NavEKF3, "EK3_", NavEKF3),
#endif

#if AP_RSSI_ENABLED
    // @Group: RSSI_
    // @Path: ../libraries/AP_RSSI/AP_RSSI.cpp
    GOBJECT(rssi, "RSSI_",  AP_RSSI),
#endif

    // @Group: NTF_
    // @Path: ../libraries/AP_Notify/AP_Notify.cpp
    GOBJECT(notify, "NTF_",  AP_Notify),

    // @Group:
    // @Path: Parameters.cpp
    GOBJECT(g2, "",  ParametersG2),

    // @Group: FINS_
    // @Path: Fins.cpp
    GOBJECTPTR(motors, "FINS_", Fins),

    // @Param: VELXY_P
    // @DisplayName: Velocity (horizontal) P gain
    // @Description: Velocity (horizontal) P gain.  Converts the difference between desired and actual velocity to a target acceleration
    // @Range: 0.1 6.0
    // @Increment: 0.1
    // @User: Advanced

    // @Param: VELXY_I
    // @DisplayName: Velocity (horizontal) I gain
    // @Description: Velocity (horizontal) I gain.  Corrects long-term difference between desired and actual velocity to a target acceleration
    // @Range: 0.02 1.00
    // @Increment: 0.01
    // @User: Advanced

    // @Param: VELXY_D
    // @DisplayName: Velocity (horizontal) D gain
    // @Description: Velocity (horizontal) D gain.  Corrects short-term changes in velocity
    // @Range: 0.00 1.00
    // @Increment: 0.001
    // @User: Advanced

    // @Param: VELXY_IMAX
    // @DisplayName: Velocity (horizontal) integrator maximum
    // @Description: Velocity (horizontal) integrator maximum.  Constrains the target acceleration that the I gain will output
    // @Range: 0 4500
    // @Increment: 10
    // @Units: cm/s/s
    // @User: Advanced

    // @Param: VELXY_FLTE
    // @DisplayName: Velocity (horizontal) input filter
    // @Description: Velocity (horizontal) input filter.  This filter (in Hz) is applied to the input for P and I terms
    // @Range: 0 100
    // @Units: Hz
    // @User: Advanced

    // @Param: VELXY_FLTD
    // @DisplayName: Velocity (horizontal) input filter
    // @Description: Velocity (horizontal) input filter.  This filter (in Hz) is applied to the input for D term
    // @Range: 0 100
    // @Units: Hz
    // @User: Advanced

    // @Param: VELXY_FF
    // @DisplayName: Velocity (horizontal) feed forward gain
    // @Description: Velocity (horizontal) feed forward gain.  Converts the difference between desired velocity to a target acceleration
    // @Range: 0 6
    // @Increment: 0.01
    // @User: Advanced
    GOBJECT(pid_vel_xy, "VELXY_", AC_PID_2D),

    // @Param: VELZ_P
    // @DisplayName: Velocity (vertical) P gain
    // @Description: Velocity (vertical) P gain.  Converts the difference between desired and actual velocity to a target acceleration
    // @Range: 0.1 6.0
    // @Increment: 0.1
    // @User: Advanced

    // @Param: VELZ_I
    // @DisplayName: Velocity (vertical) I gain
    // @Description: Velocity (vertical) I gain.  Corrects long-term difference between desired and actual velocity to a target acceleration
    // @Range: 0.02 1.00
    // @Increment: 0.01
    // @User: Advanced

    // @Param: VELZ_D
    // @DisplayName: Velocity (vertical) D gain
    // @Description: Velocity (vertical) D gain.  Corrects short-term changes in velocity
    // @Range: 0.00 1.00
    // @Increment: 0.001
    // @User: Advanced

    // @Param: VELZ_IMAX
    // @DisplayName: Velocity (vertical) integrator maximum
    // @Description: Velocity (vertical) integrator maximum.  Constrains the target acceleration that the I gain will output
    // @Range: 0 4500
    // @Increment: 10
    // @Units: cm/s/s
    // @User: Advanced

    // @Param: VELZ_FLTE
    // @DisplayName: Velocity (vertical) input filter
    // @Description: Velocity (vertical) input filter.  This filter (in Hz) is applied to the input for P and I terms
    // @Range: 0 100
    // @Units: Hz
    // @User: Advanced

    // @Param: VELZ_FLTD
    // @DisplayName: Velocity (vertical) input filter
    // @Description: Velocity (vertical) input filter.  This filter (in Hz) is applied to the input for D term
    // @Range: 0 100
    // @Units: Hz
    // @User: Advanced

    // @Param: VELZ_FF
    // @DisplayName: Velocity (vertical) feed forward gain
    // @Description: Velocity (vertical) feed forward gain.  Converts the difference between desired velocity to a target acceleration
    // @Range: 0 6
    // @Increment: 0.01
    // @User: Advanced
    GOBJECT(pid_vel_z, "VELZ_", AC_PID_Basic),

    // @Param: VELYAW_P
    // @DisplayName: Velocity (yaw) P gain
    // @Description: Velocity (yaw) P gain.  Converts the difference between desired and actual velocity to a target acceleration
    // @Range: 0.1 6.0
    // @Increment: 0.1
    // @User: Advanced

    // @Param: VELYAW_I
    // @DisplayName: Velocity (yaw) I gain
    // @Description: Velocity (yaw) I gain.  Corrects long-term difference between desired and actual velocity to a target acceleration
    // @Range: 0.02 1.00
    // @Increment: 0.01
    // @User: Advanced

    // @Param: VELYAW_D
    // @DisplayName: Velocity (yaw) D gain
    // @Description: Velocity (yaw) D gain.  Corrects short-term changes in velocity
    // @Range: 0.00 1.00
    // @Increment: 0.001
    // @User: Advanced

    // @Param: VELYAW_IMAX
    // @DisplayName: Velocity (yaw) integrator maximum
    // @Description: Velocity (yaw) integrator maximum.  Constrains the target acceleration that the I gain will output
    // @Range: 0 4500
    // @Increment: 10
    // @Units: cm/s/s
    // @User: Advanced

    // @Param: VELYAW_FLTE
    // @DisplayName: Velocity (yaw) input filter
    // @Description: Velocity (yaw) input filter.  This filter (in Hz) is applied to the input for P and I terms
    // @Range: 0 100
    // @Units: Hz
    // @User: Advanced

    // @Param: VELYAW_FF
    // @DisplayName: Velocity (yaw) feed forward gain
    // @Description: Velocity (yaw) feed forward gain.  Converts the difference between desired velocity to a target acceleration
    // @Range: 0 6
    // @Increment: 0.01
    // @User: Advanced
    GOBJECT(pid_vel_yaw, "VELYAW_", AC_PID_Basic),

    // @Param: POSXY_P
    // @DisplayName: Position (horizontal) P gain
    // @Description: Position (horizontal) P gain.  Converts the difference between desired and actual position to a target velocity
    // @Range: 0.1 6.0
    // @Increment: 0.1
    // @User: Advanced

    // @Param: POSXY_I
    // @DisplayName: Position (horizontal) I gain
    // @Description: Position (horizontal) I gain.  Corrects long-term difference between desired and actual position to a target velocity
    // @Range: 0.02 1.00
    // @Increment: 0.01
    // @User: Advanced

    // @Param: POSXY_D
    // @DisplayName: Position (horizontal) D gain
    // @Description: Position (horizontal) D gain.  Corrects short-term changes in position
    // @Range: 0.00 1.00
    // @Increment: 0.001
    // @User: Advanced

    // @Param: POSXY_IMAX
    // @DisplayName: Position (horizontal) integrator maximum
    // @Description: Position (horizontal) integrator maximum.  Constrains the target acceleration that the I gain will output
    // @Range: 0 4500
    // @Increment: 10
    // @Units: cm/s/s
    // @User: Advanced

    // @Param: POSXY_FLTE
    // @DisplayName: Position (horizontal) input filter
    // @Description: Position (horizontal) input filter.  This filter (in Hz) is applied to the input for P and I terms
    // @Range: 0 100
    // @Units: Hz
    // @User: Advanced

    // @Param: POSXY_FLTD
    // @DisplayName: Position (horizontal) input filter
    // @Description: Position (horizontal) input filter.  This filter (in Hz) is applied to the input for D term
    // @Range: 0 100
    // @Units: Hz
    // @User: Advanced

    // @Param: POSXY_FF
    // @DisplayName: Position (horizontal) feed forward gain
    // @Description: Position (horizontal) feed forward gain.  Converts the difference between desired position to a target velocity
    // @Range: 0 6
    // @Increment: 0.01
    // @User: Advanced
    GOBJECT(pid_pos_xy, "POSXY_", AC_PID_2D),

    // @Param: POSZ_P
    // @DisplayName: Position (vertical) P gain
    // @Description: Position (vertical) P gain.  Converts the difference between desired and actual position to a target velocity
    // @Range: 0.1 6.0
    // @Increment: 0.1
    // @User: Advanced

    // @Param: POSZ_I
    // @DisplayName: Position (vertical) I gain
    // @Description: Position (vertical) I gain.  Corrects long-term difference between desired and actual position to a target velocity
    // @Range: 0.02 1.00
    // @Increment: 0.01
    // @User: Advanced

    // @Param: POSZ_D
    // @DisplayName: Position (vertical) D gain
    // @Description: Position (vertical) D gain.  Corrects short-term changes in position
    // @Range: 0.00 1.00
    // @Increment: 0.001
    // @User: Advanced

    // @Param: POSZ_IMAX
    // @DisplayName: Position (vertical) integrator maximum
    // @Description: Position (vertical) integrator maximum.  Constrains the target acceleration that the I gain will output
    // @Range: 0 4500
    // @Increment: 10
    // @Units: cm/s/s
    // @User: Advanced

    // @Param: POSZ_FLTE
    // @DisplayName: Position (vertical) input filter
    // @Description: Position (vertical) input filter.  This filter (in Hz) is applied to the input for P and I terms
    // @Range: 0 100
    // @Units: Hz
    // @User: Advanced

    // @Param: POSZ_FLTD
    // @DisplayName: Position (vertical) input filter
    // @Description: Position (vertical) input filter.  This filter (in Hz) is applied to the input for D term
    // @Range: 0 100
    // @Units: Hz
    // @User: Advanced

    // @Param: POSZ_FF
    // @DisplayName: Position (vertical) feed forward gain
    // @Description: Position (vertical) feed forward gain.  Converts the difference between desired position to a target velocity
    // @Range: 0 6
    // @Increment: 0.01
    // @User: Advanced
    GOBJECT(pid_pos_z, "POSZ_", AC_PID_Basic),

    // @Param: POSYAW_P
    // @DisplayName: Position (yaw) axis controller P gain
    // @Description: Position (yaw) axis controller P gain.
    // @Range: 0.0 3.0
    // @Increment: 0.01
    // @User: Standard

    // @Param: POSYAW_I
    // @DisplayName: Position (yaw) axis controller I gain
    // @Description: Position (yaw) axis controller I gain.
    // @Range: 0.0 3.0
    // @Increment: 0.01
    // @User: Standard

    // @Param: POSYAW_IMAX
    // @DisplayName: Position (yaw) axis controller I gain maximum
    // @Description: Position (yaw) axis controller I gain maximum.
    // @Range: 0 4000
    // @Increment: 10
    // @Units: d%
    // @User: Standard

    // @Param: POSYAW_D
    // @DisplayName: Position (yaw) axis controller D gain
    // @Description: Position (yaw) axis controller D gain.
    // @Range: 0.001 0.1
    // @Increment: 0.001
    // @User: Standard

    // @Param: POSYAW_FF
    // @DisplayName: Position (yaw) axis controller feed forward
    // @Description: Position (yaw) axis controller feed forward
    // @Range: 0 0.5
    // @Increment: 0.001
    // @User: Standard

    // @Param: POSYAW_FLTT
    // @DisplayName: Position (yaw) target frequency filter in Hz
    // @Description: Position (yaw) target frequency filter in Hz
    // @Range: 1 50
    // @Increment: 1
    // @Units: Hz
    // @User: Standard

    // @Param: POSYAW_FLTE
    // @DisplayName: Position (yaw) error frequency filter in Hz
    // @Description: Position (yaw) error frequency filter in Hz
    // @Range: 1 100
    // @Increment: 1
    // @Units: Hz
    // @User: Standard

    // @Param: POSYAW_FLTD
    // @DisplayName: Position (yaw) derivative input filter in Hz
    // @Description: Position (yaw) derivative input filter in Hz
    // @Range: 1 100
    // @Increment: 1
    // @Units: Hz
    // @User: Standard

    // @Param: POSYAW_SMAX
    // @DisplayName: Yaw slew rate limit
    // @Description: Sets an upper limit on the slew rate produced by the combined P and D gains.
    // @Range: 0 200
    // @Increment: 0.5
    // @User: Advanced

    // @Param: POSYAW_PDMX
    // @DisplayName: Position (yaw) axis controller PD sum maximum
    // @Description: Position (yaw) axis controller PD sum maximum.  The maximum/minimum value that the sum of the P and D term can output
    // @Range: 0 4000
    // @Increment: 10
    // @Units: d%
    // @User: Advanced

    // @Param: POSYAW_D_FF
    // @DisplayName: Position (yaw) Derivative FeedForward Gain
    // @Description: FF D Gain which produces an output that is proportional to the rate of change of the target
    // @Range: 0 0.1
    // @Increment: 0.001
    // @User: Advanced

    // @Param: POSYAW_NTF
    // @DisplayName: Position (yaw) Target notch filter index
    // @Description: Position (yaw) Target notch filter index
    // @Range: 1 8
    // @User: Advanced

    // @Param: POSYAW_NEF
    // @DisplayName: Position (yaw) Error notch filter index
    // @Description: Position (yaw) Error notch filter index
    // @Range: 1 8
    // @User: Advanced

    GOBJECT(pid_pos_yaw, "POSYAW_", AC_PID),

    // @Group:
    // @Path: ../libraries/AP_Vehicle/AP_Vehicle.cpp
    PARAM_VEHICLE_INFO,

    AP_VAREND
};

/*
  2nd group of parameters
 */
const AP_Param::GroupInfo ParametersG2::var_info[] = {

    // @Param: DEV_OPTIONS
    // @DisplayName: Development options
    // @Description: Bitmask of developer options. The meanings of the bit fields in this parameter may vary at any time. Developers should check the source code for current meaning
    // @Bitmask: 0:Unknown
    // @User: Advanced
    AP_GROUPINFO("DEV_OPTIONS", 7, ParametersG2, dev_options, 0),

    // @Param: SYSID_ENFORCE
    // @DisplayName: GCS sysid enforcement
    // @Description: This controls whether packets from other than the expected GCS system ID will be accepted
    // @Values: 0:NotEnforced,1:Enforced
    // @User: Advanced
    AP_GROUPINFO("SYSID_ENFORCE", 11, ParametersG2, sysid_enforce, 0),

    // 12 was AP_Stats

    // @Param: FRAME_CLASS
    // @DisplayName: Frame Class
    // @Description: Controls major frame class for blimp.
    // @Values: 0:Finnedblimp
    // @User: Standard
    // @RebootRequired: True
    AP_GROUPINFO("FRAME_CLASS", 15, ParametersG2, frame_class, DEFAULT_FRAME_CLASS),

    // @Group: SERVO
    // @Path: ../libraries/SRV_Channel/SRV_Channels.cpp
    AP_SUBGROUPINFO(servo_channels, "SERVO", 16, ParametersG2, SRV_Channels),

    // @Group: RC
    // @Path: ../libraries/RC_Channel/RC_Channels_VarInfo.h
    AP_SUBGROUPINFO(rc_channels, "RC", 17, ParametersG2, RC_Channels_Blimp),

    // @Param: PILOT_SPEED_DN
    // @DisplayName: Pilot maximum vertical speed descending
    // @Description: The maximum vertical descending velocity the pilot may request in cm/s
    // @Units: cm/s
    // @Range: 50 500
    // @Increment: 10
    // @User: Standard
    AP_GROUPINFO("PILOT_SPEED_DN", 24, ParametersG2, pilot_speed_dn, 0),

    // 30 was AP_Scripting

    // @Param: FS_VIBE_ENABLE
    // @DisplayName: Vibration Failsafe enable
    // @Description: This enables the vibration failsafe which will use modified altitude estimation and control during high vibrations
    // @Values: 0:Disabled, 1:Enabled
    // @User: Standard
    AP_GROUPINFO("FS_VIBE_ENABLE", 35, ParametersG2, fs_vibe_enabled, 1),

    // @Param: FS_OPTIONS
    // @DisplayName: Failsafe options bitmask
    // @Description: Bitmask of additional options for battery, radio, & GCS failsafes. 0 (default) disables all options.
    // @Bitmask: 4:Continue if in pilot controlled modes on GCS failsafe
    // @User: Advanced
    AP_GROUPINFO("FS_OPTIONS", 36, ParametersG2, fs_options, (float)Blimp::FailsafeOption::GCS_CONTINUE_IF_PILOT_CONTROL),

    // @Param: FS_GCS_TIMEOUT
    // @DisplayName: GCS failsafe timeout
    // @Description: Timeout before triggering the GCS failsafe
    // @Units: s
    // @Range: 2 120
    // @Increment: 1
    // @User: Standard
    AP_GROUPINFO("FS_GCS_TIMEOUT", 42, ParametersG2, fs_gcs_timeout, 5),

    AP_GROUPEND
};

/*
  constructor for g2 object
 */
ParametersG2::ParametersG2(void)
{
    AP_Param::setup_object_defaults(this, var_info);
}

void Blimp::load_parameters(void)
{
    AP_Vehicle::load_parameters(g.format_version, Parameters::k_format_version);

    static const AP_Param::G2ObjectConversion g2_conversions[] {
#if AP_STATS_ENABLED
    // PARAMETER_CONVERSION - Added: Jan-2024 for Copter-4.6
        { &stats, stats.var_info, 12 },
#endif
#if AP_SCRIPTING_ENABLED
    // PARAMETER_CONVERSION - Added: Jan-2024 for Copter-4.6
        { &scripting, scripting.var_info, 30 },
#endif
    };
    AP_Param::convert_g2_objects(&g2, g2_conversions, ARRAY_SIZE(g2_conversions));

    // PARAMETER_CONVERSION - Added: Feb-2024
#if HAL_LOGGING_ENABLED
    AP_Param::convert_class(g.k_param_logger, &logger, logger.var_info, 0, true);
#endif

    static const AP_Param::TopLevelObjectConversion toplevel_conversions[] {
#if AP_SERIALMANAGER_ENABLED
        // PARAMETER_CONVERSION - Added: Feb-2024
        { &serial_manager, serial_manager.var_info, Parameters::k_param_serial_manager_old },
#endif
    };

    AP_Param::convert_toplevel_objects(toplevel_conversions, ARRAY_SIZE(toplevel_conversions));

    // setup AP_Param frame type flags
    AP_Param::set_frame_type_flags(AP_PARAM_FRAME_BLIMP);
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #include "Blimp.h"

#include "RC_Channel.h"


// defining these two macros and including the RC_Channels_VarInfo header defines the parameter information common to all vehicle types
#define RC_CHANNELS_SUBCLASS RC_Channels_Blimp
#define RC_CHANNEL_SUBCLASS RC_Channel_Blimp

#include <RC_Channel/RC_Channels_VarInfo.h>

int8_t RC_Channels_Blimp::flight_mode_channel_number() const
{
    return blimp.g.flight_mode_chan.get();
}

void RC_Channel_Blimp::mode_switch_changed(modeswitch_pos_t new_pos)
{
    if (new_pos < 0 || (uint8_t)new_pos > blimp.num_flight_modes) {
        // should not have been called
        return;
    }

    if (!blimp.set_mode((Mode::Number)blimp.flight_modes[new_pos].get(), ModeReason::RC_COMMAND)) {
        // alert user to mode change failure
        if (blimp.ap.initialised) {
            AP_Notify::events.user_mode_change_failed = 1;
        }
        return;
    }

    // play a tone
    // alert user to mode change (except if autopilot is just starting up)
    if (blimp.ap.initialised) {
        AP_Notify::events.user_mode_change = 1;
    }
}

bool RC_Channels_Blimp::in_rc_failsafe() const
{
    return blimp.failsafe.radio;
}

bool RC_Channels_Blimp::has_valid_input() const
{
    if (blimp.failsafe.radio) {
        return false;
    }
    if (blimp.failsafe.radio_counter != 0) {
        return false;
    }
    return true;
}

RC_Channel * RC_Channels_Blimp::get_arming_channel(void) const
{
    return blimp.channel_yaw;
}

// init_aux_switch_function - initialize aux functions
void RC_Channel_Blimp::init_aux_function(const AUX_FUNC ch_option, const AuxSwitchPos ch_flag)
{
    // init channel options
    switch (ch_option) {
    // the following functions do not need to be initialised:
    case AUX_FUNC::MANUAL:
        break;
    default:
        RC_Channel::init_aux_function(ch_option, ch_flag);
        break;
    }
}

// do_aux_function_change_mode - change mode based on an aux switch
// being moved
void RC_Channel_Blimp::do_aux_function_change_mode(const Mode::Number mode,
        const AuxSwitchPos ch_flag)
{
    switch (ch_flag) {
    case AuxSwitchPos::HIGH: {
        // engage mode (if not possible we remain in current flight mode)
        const bool success = blimp.set_mode(mode, ModeReason::AUX_FUNCTION);
        if (blimp.ap.initialised) {
            if (success) {
                AP_Notify::events.user_mode_change = 1;
            } else {
                AP_Notify::events.user_mode_change_failed = 1;
            }
        }
        break;
    }
    default:
        // return to flight mode switch's flight mode if we are currently
        // in this mode
        if (blimp.control_mode == mode) {
            rc().reset_mode_switch();
        }
    }
}

// do_aux_function - implement the function invoked by auxiliary switches
bool RC_Channel_Blimp::do_aux_function(const AUX_FUNC ch_option, const AuxSwitchPos ch_flag)
{
    switch (ch_option) {

    case AUX_FUNC::SAVE_TRIM:
        if ((ch_flag == AuxSwitchPos::HIGH) &&
            (blimp.control_mode <= Mode::Number::MANUAL) &&
            (blimp.channel_up->get_control_in() == 0)) {
            blimp.save_trim();
        }
        break;

    case AUX_FUNC::LOITER:
        do_aux_function_change_mode(Mode::Number::LOITER, ch_flag);
        break;

    case AUX_FUNC::MANUAL:
        do_aux_function_change_mode(Mode::Number::MANUAL, ch_flag);
        break;

    default:
        return RC_Channel::do_aux_function(ch_option, ch_flag);
    }
    return true;
}

// save_trim - adds roll and pitch trims from the radio to ahrs
void Blimp::save_trim()
{
    // save roll and pitch trim
    float roll_trim = ToRad((float)channel_right->get_control_in()/100.0f);
    float pitch_trim = ToRad((float)channel_front->get_control_in()/100.0f);
    ahrs.add_trim(roll_trim, pitch_trim);
    LOGGER_WRITE_EVENT(LogEvent::SAVE_TRIM);
    gcs().send_text(MAV_SEVERITY_INFO, "Trim saved");
}

// auto_trim - slightly adjusts the ahrs.roll_trim and ahrs.pitch_trim towards the current stick positions
// meant to be called continuously while the pilot attempts to keep the blimp level
void Blimp::auto_trim_cancel()
{
    auto_trim_counter = 0;
    AP_Notify::flags.save_trim = false;
    gcs().send_text(MAV_SEVERITY_INFO, "AutoTrim cancelled");
}

void Blimp::auto_trim()
{
    if (auto_trim_counter > 0) {
        if (blimp.flightmode != &blimp.mode_manual ||
            !blimp.motors->armed()) {
            auto_trim_cancel();
            return;
        }

        // flash the leds
        AP_Notify::flags.save_trim = true;

        if (!auto_trim_started) {
            if (ap.land_complete) {
                // haven't taken off yet
                return;
            }
            auto_trim_started = true;
        }

        if (ap.land_complete) {
            // landed again.
            auto_trim_cancel();
            return;
        }

        auto_trim_counter--;

        // calculate roll trim adjustment
        float roll_trim_adjustment = ToRad((float)channel_right->get_control_in() / 4000.0f);

        // calculate pitch trim adjustment
        float pitch_trim_adjustment = ToRad((float)channel_front->get_control_in() / 4000.0f);

        // add trim to ahrs object
        // save to eeprom on last iteration
        ahrs.add_trim(roll_trim_adjustment, pitch_trim_adjustment, (auto_trim_counter == 0));

        // on last iteration restore leds and accel gains to normal
        if (auto_trim_counter == 0) {
            AP_Notify::flags.save_trim = false;
            gcs().send_text(MAV_SEVERITY_INFO, "AutoTrim: Trims saved");
        }
    }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      GNU GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.

                            Preamble

  The GNU General Public License is a free, copyleft license for
software and other kinds of works.

  The licenses for most software and other practical works are designed
to take away your freedom to share and change the works.  By contrast,
the GNU General Public License is intended to guarantee your freedom to
share and change all versions of a program--to make sure it remains free
software for all its users.  We, the Free Software Foundation, use the
GNU General Public License for most of our software; it applies also to
any other work released this way by its authors.  You can apply it to
your programs, too.

  When we speak of free software, we are referring to freedom, not
price.  Our General Public Licenses are designed to make sure that you
have the freedom to distribute copies of free software (and charge for
them if you wish), that you receive source code or can get it if you
want it, that you can change the software or use pieces of it in new
free programs, and that you know you can do these things.

  To protect your rights, we need to prevent others from denying you
these rights or asking you to surrender the rights.  Therefore, you have
certain responsibilities if you distribute copies of the software, or if
you modify it: responsibilities to respect the freedom of others.

  For example, if you distribute copies of such a program, whether
gratis or for a fee, you must pass on to the recipients the same
freedoms that you received.  You must make sure that they, too, receive
or can get the source code.  And you must show them these terms so they
know their rights.

  Developers that use the GNU GPL protect your rights with two steps:
(1) assert copyright on the software, and (2) offer you this License
giving you legal permission to copy, distribute and/or modify it.

  For the developers' and authors' protection, the GPL clearly explains
that there is no warranty for this free software.  For both users' and
authors' sake, the GPL requires that modified versions be marked as
changed, so that their problems will not be attributed erroneously to
authors of previous versions.

  Some devices are designed to deny users access to install or run
modified versions of the software inside them, although the manufacturer
can do so.  This is fundamentally incompatible with the aim of
protecting users' freedom to change the software.  The systematic
pattern of such abuse occurs in the area of products for individuals to
use, which is precisely where it is most unacceptable.  Therefore, we
have designed this version of the GPL to prohibit the practice for those
products.  If such problems arise substantially in other domains, we
stand ready to extend this provision to those domains in future versions
of the GPL, as needed to protect the freedom of users.

  Finally, every program is threatened constantly by software patents.
States should not allow patents to restrict development and use of
software on general-purpose computers, but in those that do, we wish to
avoid the special danger that patents applied to a free program could
make it effectively proprietary.  To prevent this, the GPL assures that
patents cannot be used to render the program non-free.

  The precise terms and conditions for copying, distribution and
modification follow.

                       TERMS AND CONDITIONS

  0. Definitions.

  "This License" refers to version 3 of the GNU General Public License.

  "Copyright" also means copyright-like laws that apply to other kinds of
works, such as semiconductor masks.

  "The Program" refers to any copyrightable work licensed under this
License.  Each licensee is addressed as "you".  "Licensees" and
"recipients" may be individuals or organizations.

  To "modify" a work means to copy from or adapt all or part of the work
in a fashion requiring copyright permission, other than the making of an
exact copy.  The resulting work is called a "modified version" of the
earlier work or a work "based on" the earlier work.

  A "covered work" means either the unmodified Program or a work based
on the Program.

  To "propagate" a work means to do anything with it that, without
permission, would make you directly or secondarily liable for
infringement under applicable copyright law, except executing it on a
computer or modifying a private copy.  Propagation includes copying,
distribution (with or without modification), making available to the
public, and in some countries other activities as well.

  To "convey" a work means any kind of propagation that enables other
parties to make or receive copies.  Mere interaction with a user through
a computer network, with no transfer of a copy, is not conveying.

  An interactive user interface displays "Appropriate Legal Notices"
to the extent that it includes a convenient and prominently visible
feature that (1) displays an appropriate copyright notice, and (2)
tells the user that there is no warranty for the work (except to the
extent that warranties are provided), that licensees may convey the
work under this License, and how to view a copy of this License.  If
the interface presents a list of user commands or options, such as a
menu, a prominent item in the list meets this criterion.

  1. Source Code.

  The "source code" for a work means the preferred form of the work
for making modifications to it.  "Object code" means any non-source
form of a work.

  A "Standard Interface" means an interface that either is an official
standard defined by a recognized standards body, or, in the case of
interfaces specified for a particular programming language, one that
is widely used among developers working in that language.

  The "System Libraries" of an executable work include anything, other
than the work as a whole, that (a) is included in the normal form of
packaging a Major Component, but which is not part of that Major
Component, and (b) serves only to enable use of the work with that
Major Component, or to implement a Standard Interface for which an
implementation is available to the public in source code form.  A
"Major Component", in this context, means a major essential component
(kernel, window system, and so on) of the specific operating system
(if any) on which the executable work runs, or a compiler used to
produce the work, or an object code interpreter used to run it.

  The "Corresponding Source" for a work in object code form means all
the source code needed to generate, install, and (for an executable
work) run the object code and to modify the work, including scripts to
control those activities.  However, it does not include the work's
System Libraries, or general-purpose tools or generally available free
programs which are used unmodified in performing those activities but
which are not part of the work.  For example, Corresponding Source
includes interface definition files associated with source files for
the work, and the source code for shared libraries and dynamically
linked subprograms that the work is specifically designed to require,
such as by intimate data communication or control flow between those
subprograms and other parts of the work.

  The Corresponding Source need not include anything that users
can regenerate automatically from other parts of the Corresponding
Source.

  The Corresponding Source for a work in source code form is that
same work.

  2. Basic Permissions.

  All rights granted under this License are granted for the term of
copyright on the Program, and are irrevocable provided the stated
conditions are met.  This License explicitly affirms your unlimited
permission to run the unmodified Program.  The output from running a
covered work is covered by this License only if the output, given its
content, constitutes a covered work.  This License acknowledges your
rights of fair use or other equivalent, as provided by copyright law.

  You may make, run and propagate covered works that you do not
convey, without conditions so long as your license otherwise remains
in force.  You may convey covered works to others for the sole purpose
of having them make modifications exclusively for you, or provide you
with facilities for running those works, provided that you comply with
the terms of this License in conveying all material for which you do
not control copyright.  Those thus making or running the covered works
for you must do so exclusively on your behalf, under your direction
and control, on terms that prohibit them from making any copies of
your copyrighted material outside their relationship with you.

  Conveying under any other circumstances is permitted solely under
the conditions stated below.  Sublicensing is not allowed; section 10
makes it unnecessary.

  3. Protecting Users' Legal Rights From Anti-Circumvention Law.

  No covered work shall be deemed part of an effective technological
measure under any applicable law fulfilling obligations under article
11 of the WIPO copyright treaty adopted on 20 December 1996, or
similar laws prohibiting or restricting circumvention of such
measures.

  When you convey a covered work, you waive any legal power to forbid
circumvention of technological measures to the extent such circumvention
is effected by exercising rights under this License with respect to
the covered work, and you disclaim any intention to limit operation or
modification of the work as a means of enforcing, against the work's
users, your or third parties' legal rights to forbid circumvention of
technological measures.

  4. Conveying Verbatim Copies.

  You may convey verbatim copies of the Program's source code as you
receive it, in any medium, provided that you conspicuously and
appropriately publish on each copy an appropriate copyright notice;
keep intact all notices stating that this License and any
non-permissive terms added in accord with section 7 apply to the code;
keep intact all notices of the absence of any warranty; and give all
recipients a copy of this License along with the Program.

  You may charge any price or no price for each copy that you convey,
and you may offer support or warranty protection for a fee.

  5. Conveying Modified Source Versions.

  You may convey a work based on the Program, or the modifications to
produce it from the Program, in the form of source code under the
terms of section 4, provided that you also meet all of these conditions:

    a) The work must carry prominent notices stating that you modified
    it, and giving a relevant date.

    b) The work must carry prominent notices stating that it is
    released under this License and any conditions added under section
    7.  This requirement modifies the requirement in section 4 to
    "keep intact all notices".

    c) You must license the entire work, as a whole, under this
    License to anyone who comes into possession of a copy.  This
    License will therefore apply, along with any applicable section 7
    additional terms, to the whole of the work, and all its parts,
    regardless of how they are packaged.  This License gives no
    permission to license the work in any other way, but it does not
    invalidate such permission if you have separately received it.

    d) If the work has interactive user interfaces, each must display
    Appropriate Legal Notices; however, if the Program has interactive
    interfaces that do not display Appropriate Legal Notices, your
    work need not make them do so.

  A compilation of a covered work with other separate and independent
works, which are not by their nature extensions of the covered work,
and which are not combined with it such as to form a larger program,
in or on a volume of a storage or distribution medium, is called an
"aggregate" if the compilation and its resulting copyright are not
used to limit the access or legal rights of the compilation's users
beyond what the individual works permit.  Inclusion of a covered work
in an aggregate does not cause this License to apply to the other
parts of the aggregate.

  6. Conveying Non-Source Forms.

  You may convey a covered work in object code form under the terms
of sections 4 and 5, provided that you also convey the
machine-readable Corresponding Source under the terms of this License,
in one of these ways:

    a) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by the
    Corresponding Source fixed on a durable physical medium
    customarily used for software interchange.

    b) Convey the object code in, or embodied in, a physical product
    (including a physical distribution medium), accompanied by a
    written offer, valid for at least three years and valid for as
    long as you offer spare parts or customer support for that product
    model, to give anyone who possesses the object code either (1) a
    copy of the Corresponding Source for all the software in the
    product that is covered by this License, on a durable physical
    medium customarily used for software interchange, for a price no
    more than your reasonable cost of physically performing this
    conveying of source, or (2) access to copy the
    Corresponding Source from a network server at no charge.

    c) Convey individual copies of the object code with a copy of the
    written offer to provide the Corresponding Source.  This
    alternative is allowed only occasionally and noncommercially, and
    only if you received the object code with such an offer, in accord
    with subsection 6b.

    d) Convey the object code by offering access from a designated
    place (gratis or for a charge), and offer equivalent access to the
    Corresponding Source in the same way through the same place at no
    further charge.  You need not require recipients to copy the
    Corresponding Source along with the object code.  If the place to
    copy the object code is a network server, the Corresponding Source
    may be on a different server (operated by you or a third party)
    that supports equivalent copying facilities, provided you maintain
    clear directions next to the object code saying where to find the
    Corresponding Source.  Regardless of what server hosts the
    Corresponding Source, you remain obligated to ensure that it is
    available for as long as needed to satisfy these requirements.

    e) Convey the object code using peer-to-peer transmission, provided
    you inform other peers where the object code and Corresponding
    Source of the work are being offered to the general public at no
    charge under subsection 6d.

  A separable portion of the object code, whose source code is excluded
from the Corresponding Source as a System Library, need not be
included in conveying the object code work.

  A "User Product" is either (1) a "consumer product", which means any
tangible personal property which is normally used for personal, family,
or household purposes, or (2) anything designed or sold for incorporation
into a dwelling.  In determining whether a product is a consumer product,
doubtful cases shall be resolved in favor of coverage.  For a particular
product received by a particular user, "normally used" refers to a
typical or common use of that class of product, regardless of the status
of the particular user or of the way in which the particular user
actually uses, or expects or is expected to use, the product.  A product
is a consumer product regardless of whether the product has substantial
commercial, industrial or non-consumer uses, unless such uses represent
the only significant mode of use of the product.

  "Installation Information" for a User Product means any methods,
procedures, authorization keys, or other information required to install
and execute modified versions of a covered work in that User Product from
a modified version of its Corresponding Source.  The information must
suffice to ensure that the continued functioning of the modified object
code is in no case prevented or interfered with solely because
modification has been made.

  If you convey an o# Doxyfile 1.5.8

# This file describes the settings to be used by the documentation system
# doxygen (www.doxygen.org) for a project
#
# All text after a hash (#) is considered a comment and will be ignored
# The format is:
#       TAG = value [value, ...]
# For lists items can also be appended using:
#       TAG += value [value, ...]
# Values that contain spaces should be placed between quotes (" ")

#---------------------------------------------------------------------------
# Project related configuration options
#---------------------------------------------------------------------------

# This tag specifies the encoding used for all characters in the config file 
# that follow. The default is UTF-8 which is also the encoding used for all 
# text before the first occurrence of this tag. Doxygen uses libiconv (or the 
# iconv built into libc) for the transcoding. See 
# http://www.gnu.org/software/libiconv for the list of possible encodings.

DOXYFILE_ENCODING      = UTF-8

# The PROJECT_NAME tag is a single word (or a sequence of words surrounded 
# by quotes) that should identify the project.

PROJECT_NAME           = "@PROJECT_NAME@"

# The PROJECT_NUMBER tag can be used to enter a project or revision number. 
# This could be handy for archiving the generated documentation or 
# if some version control system is used.

PROJECT_NUMBER         = "@PROJECT_VERSION@"

# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute) 
# base path where the generated documentation will be put. 
# If a relative path is entered, it will be relative to the location 
# where doxygen was started. If left blank the current directory will be used.

OUTPUT_DIRECTORY       = "@DOXYFILE_OUTPUT_DIR@"

# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create 
# 4096 sub-directories (in 2 levels) under the output directory of each output 
# format and will distribute the generated files over these directories. 
# Enabling this option can be useful when feeding doxygen a huge amount of 
# source files, where putting all generated files in the same directory would 
# otherwise cause performance problems for the file system.

CREATE_SUBDIRS         = NO

# The OUTPUT_LANGUAGE tag is used to specify the language in which all 
# documentation generated by doxygen is written. Doxygen will use this 
# information to generate all constant output in the proper language. 
# The default language is English, other supported languages are: 
# Afrikaans, Arabic, Brazilian, Catalan, Chinese, Chinese-Traditional, 
# Croatian, Czech, Danish, Dutch, Farsi, Finnish, French, German, Greek, 
# Hungarian, Italian, Japanese, Japanese-en (Japanese with English messages), 
# Korean, Korean-en, Lithuanian, Norwegian, Macedonian, Persian, Polish, 
# Portuguese, Romanian, Russian, Serbian, Serbian-Cyrilic, Slovak, Slovene, 
# Spanish, Swedish, and Ukrainian.

OUTPUT_LANGUAGE        = English

# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will 
# include brief member descriptions after the members that are listed in 
# the file and class documentation (similar to JavaDoc). 
# Set to NO to disable this.

BRIEF_MEMBER_DESC      = YES

# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend 
# the brief description of a member or function before the detailed description. 
# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the 
# brief descriptions will be completely suppressed.

REPEAT_BRIEF           = YES

# This tag implements a quasi-intelligent brief description abbreviator 
# that is used to form the text in various listings. Each string 
# in this list, if found as the leading text of the brief description, will be 
# stripped from the text and the result after processing the whole list, is 
# used as the annotated text. Otherwise, the brief description is used as-is. 
# If left blank, the following values are used ("$name" is automatically 
# replaced with the name of the entity): "The $name class" "The $name widget" 
# "The $name file" "is" "provides" "specifies" "contains" 
# "represents" "a" "an" "the"

ABBREVIATE_BRIEF       = 

# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then 
# Doxygen will generate a detailed section even if there is only a brief 
# description.

ALWAYS_DETAILED_SEC    = NO

# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all 
# inherited members of a class in the documentation of that class as if those 
# members were ordinary class members. Constructors, destructors and assignment 
# operators of the base classes will not be shown.

INLINE_INHERITED_MEMB  = NO

# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full 
# path before files name in the file list and in the header files. If set 
# to NO the shortest path that makes the file name unique will be used.

FULL_PATH_NAMES        = NO

# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag 
# can be used to strip a user-defined part of the path. Stripping is 
# only done if one of the specified strings matches the left-hand part of 
# the path. The tag can be used to show relative paths in the file list. 
# If left blank the directory from which doxygen is run is used as the 
# path to strip.

STRIP_FROM_PATH        = 

# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of 
# the path mentioned in the documentation of a class, which tells 
# the reader which header file to include in order to use a class. 
# If left blank only the name of the header file containing the class 
# definition is used. Otherwise one should specify the include paths that 
# are normally passed to the compiler using the -I flag.

STRIP_FROM_INC_PATH    = 

# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter 
# (but less readable) file names. This can be useful is your file systems 
# doesn't support long names like on DOS, Mac, or CD-ROM.

SHORT_NAMES            = NO

# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen 
# will interpret the first line (until the first dot) of a JavaDoc-style 
# comment as the brief description. If set to NO, the JavaDoc 
# comments will behave just like regular Qt-style comments 
# (thus requiring an explicit @brief command for a brief description.)

JAVADOC_AUTOBRIEF      = NO

# If the QT_AUTOBRIEF tag is set to YES then Doxygen will 
# interpret the first line (until the first dot) of a Qt-style 
# comment as the brief description. If set to NO, the comments 
# will behave just like regular Qt-style comments (thus requiring 
# an explicit \brief command for a brief description.)

QT_AUTOBRIEF           = NO

# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen 
# treat a multi-line C++ special comment block (i.e. a block of //! or /// 
# comments) as a brief description. This used to be the default behaviour. 
# The new default is to treat a multi-line C++ comment block as a detailed 
# description. Set this tag to YES if you prefer the old behaviour instead.

MULTILINE_CPP_IS_BRIEF = NO

# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented 
# member inherits the documentation from any documented member that it 
# re-implements.

INHERIT_DOCS           = YES

# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce 
# a new page for each member. If set to NO, the documentation of a member will 
# be part of the file/class/namespace that contains it.

SEPARATE_MEMBER_PAGES  = NO

# The TAB_SIZE tag can be used to set the number of spaces in a tab. 
# Doxygen uses this value to replace tabs by spaces in code fragments.

TAB_SIZE               = 8

# This tag can be used to specify a number of aliases that acts 
# as commands in the documentation. An alias has the form "name=value". 
# For example adding "sideeffect=\par Side Effects:\n" will allow you to 
# put the command \sideeffect (or @sideeffect) in the documentation, which 
# will result in a user-defined paragraph with heading "Side Effects:". 
# You can put \n's in the value part of an alias to insert newlines.

ALIASES                = 

# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C 
# sources only. Doxygen will then generate output that is more tailored for C. 
# For instance, some of the names that are used will be different. The list 
# of all members will be omitted, etc.

OPTIMIZE_OUTPUT_FOR_C  = NO

# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java 
# sources only. Doxygen will then generate output that is more tailored for 
# Java. For instance, namespaces will be presented as packages, qualified 
# scopes will look different, etc.

OPTIMIZE_OUTPUT_JAVA   = NO

# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran 
# sources only. Doxygen will then generate output that is more tailored for 
# Fortran.

OPTIMIZE_FOR_FORTRAN   = NO

# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL 
# sources. Doxygen will then generate output that is tailored for 
# VHDL.

OPTIMIZE_OUTPUT_VHDL   = NO

# Doxygen selects the parser to use depending on the extension of the files it parses. 
# With this tag you can assign which parser to use for a given extension. 
# Doxygen has a built-in mapping, but you can override or extend it using this tag. 
# The format is ext=language, where ext is a file extension, and language is one of 
# the parsers supported by doxygen: IDL, Java, Javascript, C#, C, C++, D, PHP, 
# Objective-C, Python, Fortran, VHDL, C, C++. For instance to make doxygen treat 
# .inc files as Fortran files (default is PHP), and .f files as C (default is Fortran), 
# use: inc=Fortran f=C

EXTENSION_MAPPING      = 

# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want 
# to include (a tag file for) the STL sources as input, then you should 
# set this tag to YES in order to let doxygen match functions declarations and 
# definitions whose arguments contain STL classes (e.g. func(std::string); v.s. 
# func(std::string) {}). This also make the inheritance and collaboration 
# diagrams that involve STL classes more complete and accurate.

BUILTIN_STL_SUPPORT    = NO

# If you use Microsoft's C++/CLI language, you should set this option to YES to 
# enable parsing support.

CPP_CLI_SUPPORT        = NO

# Set the SIP_SUPPORT tag to YES if your project consists of sip sources only. 
# Doxygen will parse them like normal C++ but will assume all classes use public 
# instead of private inheritance when no explicit protection keyword is present.

SIP_SUPPORT            = NO

# For Microsoft's IDL there are propget and propput attributes to indicate getter 
# and setter methods for a property. Setting this option to YES (the default) 
# will make doxygen to replace the get and set methods by a property in the 
# documentation. This will only work if the methods are indeed getting or 
# setting a simple type. If this is not the case, or you want to show the 
# methods anyway, you should set this option to NO.

IDL_PROPERTY_SUPPORT   = YES

# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC 
# tag is set to YES, then doxygen will reuse the documentation of the first 
# member in the group (if any) for the other members of the group. By default 
# all members of a group must be documented explicitly.

DISTRIBUTE_GROUP_DOC   = NO

# Set the SUBGROUPING tag to YES (the default) to allow class member groups of 
# the same type (for instance a group of public functions) to be put as a 
# subgroup of that type (e.g. under the Public Functions section). Set it to 
# NO to prevent subgrouping. Alternatively, this can be done per class using 
# the \nosubgrouping command.

SUBGROUPING            = YES

# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct, union, or enum 
# is documented as struct, union, or enum with the name of the typedef. So 
# typedef struct TypeS {} TypeT, will appear in the documentation as a struct 
# with name TypeT. When disabled the typedef will appear as a member of a file, 
# namespace, or class. And the struct will be named TypeS. This can typically 
# be useful for C code in case the coding convention dictates that all compound 
# types are typedef'ed and only the typedef is referenced, never the tag name.

TYPEDEF_HIDES_STRUCT   = NO

# The SYMBOL_CACHE_SIZE determines the size of the internal cache use to 
# determine which symbols to keep in memory and which to flush to disk. 
# When the cache is full, less often used symbols will be written to disk. 
# For small to medium size projects (<1000 input files) the default value is 
# probably good enough. For larger projects a too small cache size can cause 
# doxygen to be busy swapping symbols to and from disk most of the time 
# causing a significant performance penality. 
# If the system has enough physical memory increasing the cache will improve the 
# performance by keeping more symbols in memory. Note that the value works on 
# a logarithmic scale so increasing the size by one will roughly double the 
# memory usage. The cache size is given by this formula: 
# 2^(16+SYMBOL_CACHE_SIZE). The valid range is 0..9, the default is 0, 
# corresponding to a cache size of 2^16 = 65536 symbols

SYMBOL_CACHE_SIZE      = 0

#---------------------------------------------------------------------------
# Build related configuration options
#---------------------------------------------------------------------------

# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in 
# documentation are documented, even if no documentation was available. 
# Private class members and static file members will be hidden unless 
# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES

EXTRACT_ALL            = NO

# If the EXTRACT_PRIVATE tag is set to YES all private members of a class 
# will be included in the documentation.

EXTRACT_PRIVATE        = NO

# If the EXTRACT_STATIC tag is set to YES all static members of a file 
# will be included in the documentation.

EXTRACT_STATIC         = NO

# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs) 
# defined locally in source files will be included in the documentation. 
# If set to NO only classes defined in header files are included.

EXTRACT_LOCAL_CLASSES  = YES

# This flag is only useful for Objective-C code. When set to YES local 
# methods, which are defined in the implementation section but not in 
# the interface are included in the documentation. 
# If set to NO (the default) only methods in the interface are included.

EXTRACT_LOCAL_METHODS  = NO

# If this flag is set to YES, the members of anonymous namespaces will be 
# extracted and appear in the documentation as a namespace called 
# 'anonymous_namespace{file}', where file will be replaced with the base 
# name of the file that contains the anonymous namespace. By default 
# anonymous namespace are hidden.

EXTRACT_ANON_NSPACES   = NO

# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all 
# undocumented members of documented classes, files or namespaces. 
# If set to NO (the default) these members will be included in the 
# various overviews, but no documentation section is generated. 
# This option has no effect if EXTRACT_ALL is enabled.

HIDE_UNDOC_MEMBERS     = NO

# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all 
# undocumented classes that are normally visible in the class hierarchy. 
# If set to NO (the default) these classes will be included in the various 
# overviews. This option has no effect if EXTRACT_ALL is enabled.

HIDE_UNDOC_CLASSES     = NO

# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all 
# friend (class|struct|union) declarations. 
# If set to NO (the default) these declarations will be included in the 
# documentation.

HIDE_FRIEND_COMPOUNDS  = NO

# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any 
# documentation blocks found inside the body of a function. 
# If set to NO (the default) these blocks will be appended to the 
# function's detailed documentation block.

HIDE_IN_BODY_DOCS      = NO

# The INTERNAL_DOCS tag determines if documentation 
# that is typed after a \internal command is included. If the tag is set 
# to NO (the defaul - Mission jump_to_landing_sequence binding
    - mount-poi.lua upgraded to applet, sends better feedback, can lock onto Location
    - Networking/Ethernet support
    - Plane dual-aircraft synchronised aerobatics
    - Proximity driver support
    - Rangefinder drivers can support signal quality
    - revert_param.lua applet for quickly reverting params during tuning
    - RockBlock.lua applet supports setting mode, fix for battery voltage reporting
    - Serial/UART reading performance improvement using readstring binding
    - sport_aerobatics.lua rudder control fixed
    - Thread priority can be set using SCR_THD_PRIORITY (useful for Lua drivers)
    - Wind alignment and head_wind speed bindings
11) Safety related enhancements and fixes
    - Arm/Disarmed GPIO may be disabled using BRD_OPTIONS
    - Arming check that Auto mode requires mission
    - Arming check of compass vs world magnetic model to detect metal in ground (see ARMING_MAGTHRESH)
    - Arming check of GPIO pin interrupt storm
    - Arming check of Lua script CRC
    - Arming check of mission loaded from SD card
    - Arming check of Relay pin conflicts
    - Arming check of emergency stop skipped if emergency stop aux function configured
    - Arming check that at least some outputs are configured
    - Arming failures reported more quickly when changing from success to failed
    - ARMING_OPTIONS allows supressing "Armed", "Disarmed" text messages
    - BRD_SAFETY_MASK extended to apply to CAN ESCs and servos
    - Buzzer noise for gyro calibration and arming checks passed
    - Dijkstras object avoidance supports "fast waypoints" (see AVOID_OPTIONS)
    - Fence breach failsafe gets disarm action
    - FENCE_OPTIONS supports union OR intersection of all polygon fences
    - FLTMODE_GCSBLOCK blocks GCS from changing vehicle to specified modes
    - Main loop lockup recovery by forcing mutex release (only helps if caused by software bug)
    - Mandatory arming checks cannot be skipped (previously setting ARMING_CHECKS=0 skipped all)
    - Rally points supports altitude frame (AMSL, Relative or Terrain)
    - SERVO_RC_FS_MSK allows outputs using RC passthrough to move to SERVOx_TRIM on RC failsafe
12) System Enhancements
    - CAN port can support a second CAN protocol on the same bus (2nd protocol must be 11 bit, see CAN_Dn_PROTOCOL2)
    - CAN-FD support (allows faster data transfer rates)
    - Crash dump info logged if main thread locksup (helps with root cause analysis)
    - Ethernet/Networking support for UDP and TCP server and client (see NET_ENABLED) and PPP (see SERIALx_PROTOCOL)
    - Firmware flashing from SD card
    - Linux board SBUS input decoding made consistent with ChibiOS
    - Linux boards support DroneCAN
    - Parameter defaults stored in @ROMFS/defaults.parm
    - SD Card formatting supported on all boards
    - Second USB endpoint defaults to MAVLink (instead of SLCAN) except on CubePilot boards
    - Serial over DroneCAN (see CAN_D1_UC_SER_EN) useful for configuring F9P DroneCAN GPSs using uCenter
13) Custom Build server include/exclude features extended to include
    - APJ Tools
    - Bootloader flashing
    - Button
    - Compass calibration
    - DroneCAN GPS
    - ExternalAHRS (e.g. MicroStrain, Vectornav)
    - Generator
    - Highmark Servo
    - Hobbywing ESCs
    - Kill IMU
    - Payload Place
    - Plane BlackBox arming allows Plane to be used as logger (see ARMING_BBOX_SPD)
    - Plane's TX Tuning
    - Precision landing
    - Proximity sensor
    - RC Protocol
    - Relay
    - SBUS Output
    - ToneAlarm
    - Winch
14) Developer specific items
    - ChibiOS upgrade to 21.11
    - UAVCAN replaced with DroneCAN
    - AUTOPILOT_VERSION_REQUEST message deprecated (use REQUEST_MESSAGE instead)
    - PREFLIGHT_SET_SENSOR_OFFSETS support deprecated (was unused by all known ground stations)
    - MISSION_SET_CURRENT message deprecated (use DO_SET_MISSION_CURRENT command instead)
    - MISSION_CURRENT message sends num commands and stopped/paused/running/complete state
    - Python version requirement increased to 3.6.9
    - mavlink_parse.py shows all suported mavlink messages
    - COMMAND_INT messages can be used for nearly all commands (previously COMMAND_LONG)
15) Bug fixes:
    - 3DR Solo gimbal mavlink routing fixed
    - Bootloop fixed if INS_GYRO_FILTER set too high
    - Button Internal Error caused by floating pin or slow device power-up fixed
    - CAN Compass order maintained even if compass powered up after autopilot
    - Compass device IDs only saved when calibrated to ensure external compasses appear as primary on new boards
    - Currawong ECU EFI does not send exhaust gas temperature
    - DCM fallback in order to get better GPS is disabled if GPS is not used
    - DJI RS2/RS3 gimbal reported angle fix
    - DO_SET_ROI, ROI_LOCATION, ROI_NONE bug fix that could lead to gimbal pointing at old target
    - Generator parameter init fix (defaults might not always have been loaded correctly)
    - GPS_TC_BLEND parameter removed (it was unused)
    - Harmonic Notch gets protection against extremely low notch filter frequencies
    - IE 650/800 Generators report fuel remaining
    - INS calibration prevents unlikely case of two calibrations running at same time
    - LPS2XH Baro supported over I2C fixed
    - MatekH743 storage eeprom size fixed
    - MAVLink routing fix to avoid processing packet meant for another vehicle
    - Mount properly enforces user defined angle limits
    - MPU6500 IMU filter corrected to 4k
    - NMEA output time and altitude fixed
    - OSD gets labels for all supported serial protocols
    - OSD RF panel format fixed
    - Omni vehicle support fixed
    - RobotisServo initialisation fix
    - RPM accuracy and time wrap handling improved
    - Sagetech ADSB MXS altitude fix (needs amsl, was sending alt-above-terrain)
    - SageTechMXS ADSB climb rate direction fixed
    - SBUS out exactly matches SBUS in decoding
    - Serial port RTS pins default to pulldown (SiK radios could getting stuck in bootloader mode)
    - SERIALx_ parameters removed for ports that can't actually be used
    - Servo gimbal attitude reporting fix
    - Servo output fix when using scaled RC passthrough (e.g. SERVOx_FUNCTION = RCinXScaled)
    - Siyi continuous zoom stutter fixed
    - Siyi gimbal upside-down mode fixed (avoid bobbing if upside-down)
    - SmartRTL premature "buffer full" failure fixed
    - ST24 RC protocol fixed
    - STM32L496 CAN2 init fix (AP_Periph only?)
    - VFR_HUD climb rate reports best estimate during high vibration events (previously it would stop updating)
    - Visual Odometry healthy check fix in case of out-of-memory
    - VTX_MAX_POWER restored (allows setting radio's power)
------------------------------------------------------------------
Rover 4.4.0 19-Dec-2023 / Rover 4.4.0-beta11 05-Dec-2023
Changes from 4.4.0-beta10
1) Autopilot related enhancement and fixes
    - CubeOrange Sim-on-hardware compilation fix
    - RADIX2HD supports external I2C compasses
    - SpeedyBeeF405v4 support
2) Bug fixes
    - DroneCAN battery monitor with cell monitor SoC reporting fix
    - NTF_LED_TYPES parameter description fixed (was missing IS31FL3195)
    - ProfiLED output fixed in both Notify and Scripting
    - Scripting bug that could cause crash if parameters were added in flight
    - STAT_BOOTCNT param fix (was not updating in some cases)
    - don't query hobbywing DroneCAN ESC IDs while armed
3) Rover specific changes
    - Auto mode keeps navigating while paused at waypoints (reduces overshoot)
    - QuikTune script simplification (only tunes rate and speed controllers)
    - Torqeedo battery nearly empty reporting fix
------------------------------------------------------------------
Rover 4.4.0-beta10 14-Nov-2023
Changes from 4.4.0-beta9
1) AP_GPS: correct uBlox M10 configuration on low flash boards
------------------------------------------------------------------
Rover 4.4.0-beta9 07-Nov-2023
Changes from 4.4.0-beta8
1) Autopilot related enhancements and fixes
    - BETAFTP-F405 board configuration fixes
    - CubeOrangePlus-BG edition ICM45486 IMU setup fixed
    - YJUAV_A6SE_H743 support
2) Minor enhancements
    - GPS_DRV_OPTION allows using ellipsoid height in more GPS drivers
    - Lua script support for fully populating ESC telemetry data
3) Bug fixes
   - AK09916 compass being non-responsive fixed
   - IxM42xxx IMUs "stuck" gyros fixed
   - Notch filtering protection when using uninitialised RPM source in ESC telemetry
   - SIYI gimbal driver parsing bug fixed (was causing lost packets)
------------------------------------------------------------------
Rover 4.4.0-beta8 13-Oct-2023
Changes from 4.4.0-beta7
1) Autopilot related enhancements and fixes
    - BETAFPV-F405 support
    - MambaF405v2 battery and serial setup corrected
    - mRo Control Zero OEM H7 bdshot support
    - SpeedyBee-F405-Wing gets VTX power control
    - SpeedyBee-F405-Mini support
    - T-Motor H743 Mini support
2) EKF3 supports baroless boards
3) GPS-for-yaw allows base GPS to update at only 3Hz
4) INA battery monitor supports config of shunt resistor used (see BATTx_SHUNT)
5) Log VER message includes vehicle type
6) OpenDroneId option to auto-store IDs in persistent flash
7) RC SBUS protection against invalid data in first 4 channels
8) Bug fixes
    - BMI088 IMU error value handling fixed to avoid occasional negative spike
    - Dev environment CI autotest stability improvements
    - OSD correct DisplayPort BF MSP symbols
    - OSD option to correct direction arrows for BF font set
    - Sensor status reporting to GCS fixed for baroless boards
------------------------------------------------------------------
Rover 4.4.0-beta7 14-Sep-2023
Changes from 4.4.0-beta6
1) Autopilot related enhancements
    - H750 external flash optimisations for to lower CPU load
    - MambaF405Mini fixes to match manufacturer's recommended wiring
    - RADIX2 HD support
    - YJUAV_A6SE support
2) Bug fixes
    - Airbotf4 features minimised to build for 4.4
    - ChibiOS clock fix for 480Mhz H7 boards (affected FDCAN)
    - RPI hardware version check fix
------------------------------------------------------------------
Rover 4.4.0-beta6 05-Sep-2023
Changes from 4.4.0-beta5
1) Autopilot related fixes and enhancements
    - KakuteH7-wing get 8 bit directional dshot channel support
    - Luminousbee5 boards defaults updated
    - Navigator autopilot GPIOs fix (PWM output was broken)
    - Pixhawk6C Serial RTS lines pulled low on startup
    - QiotekZealotF427 and QiotekZealotH743 battery monitor default fixed
    - SDMODELH7V1 supporta
2) Driver enhancements
    - DroneCAN battery monitors allow reset of battery SoC
    - Himark DroneCAN servo support
    - Hobbywing DroneCAN ESC support
3) Asymmetrical thrust support for skid steering rovers (see MOT_THST_ASYM)
4) EKF3 high vibration handling improved with EK3_GLITCH_RADIUS option
5) Custom build server gets mission storage on SDCard selection
6) SITL default parameter handling bug fix
------------------------------------------------------------------
Rover 4.4.0-beta5 12-Aug-2023
Changes from 4.4.0-beta4
1) Autopilots specific changes
    - SIYI N7 support
2) Bug fixes
    - DroneCAN airspeed sensor fix to handle missing packets
    - DroneCAN GPS RTK injection fix
    - Notch filter gyro glitch caused by race condition fixed
------------------------------------------------------------------
Rover 4.4.0-beta4 27-July-2023
Changes from 4.4.0-beta3
1) Autopilots specific changes
    - Diatone-Mamba-MK4-H743v2 uses SPL06 baro (was DPS280)
    - DMA for I2C disabled on F7 and H7 boards
    - Foxeer H743v1 default serial protocol config fixes
    - HeeWing-F405 and F405v2 support
    - iFlight BlitzF7 support
2) Rover specific enhancements
    - QuikTune Lua script
    - Circle mode safety improvements including handling when CIRC_SPEED set too high
    - Velocity controller I-term build-up avoided when steering reaches limits
3) Bug fixes
    - BLHeli returns battery status requested via MSP (avoids hang when using esc-configurator)
    - CRSFv3 rescans at baudrates to avoid RX loss
    - EK3_ABIAS_P_NSE param range fix
    - Scripting restart memory corruption bug fixed
    - Siyi A8/ZR10 driver fix to avoid crash if serial port not configured
------------------------------------------------------------------
Rover 4.4.0-beta3 03-July-2023
Changes from 4.4.0-beta2
1) Autopilots specific changes
    - Holybro KakuteH7-Wing support
    - JFB100 external watchdog GPIO support added
    - Pixhawk1-bdshot support
    - Pixhawk6X-bdshot support
    - SpeedyBeeF4 loses bdshot support
2) Device drivers
    - added LP5562 I2C LED driver
    - added IS31FL3195 LED driver
3) Circle mode accuracy improvement
4) Camera and Gimbal related changes
    - DO_SET_ROI_NONE command support added
5) Bug fixes
    - ADSB sensor loss of transceiver message less spammy 
    - EKF vertical velocity reset fixed on loss of GPS
    - GPS pre-arm failure message clarified
    - SERVOx_PROTOCOL "SToRM32 Gimbal Serial" value renamed to "Gimbal" because also used by Siyi
    - SERIALx_OPTION "Swap" renamed to "SwapTXRX" for clarity
    - SBF GPS ellipsoid height fixed
    - Ublox M10S GPS auto configuration fixed
------------------------------------------------------------------
Rover 4.4.0-beta2 05-Jun-2023
Changes from 4.4.0-beta1
1) Autopilots specific changes
    - FlywooF745 update to motor pin output mapping and baro
    - FoxeerH743 support
    - JFB100 support
    - Mamba-F405v2 supports ICM42688
    - Matek-F405-TE/VTOL support
    - Matek-H743 IMU SPI slowed to 1Mhz to avoid init issues
    - SpeedyBee-405-Wing support
2) Rover specific changes
    - Circle mode and Auto mode LOITER_TURNS support
    - Dock mode added to INITIAL_MODE and MODE1 parameter list
3) AHRS/EKF related fixes and Enhancements
    - EKF allocation failure handled to avoid watchdog
    - EKF3 accel bias calculation fix and tuning for greater robustness
    - Airspeed sensor remains enabled during dead-reckoning (few copters have airspeed sensors)
    - Wind speed estimates updates reduced while dead-reckoning
4) Other Enhancements
    - Attitude control slew limits always calculated (helps tuning reporting and analysis)
    - INA228 and INA238 I2C battery monitor support
    - LOG_DISARMED=3 logs while disarmed but discards log if never eventually armed
    - LOG_DARM_RATEMAX reduces logging while disarmed
    - Serial LEDs threading enhancement to support longer lengths without dshot interference
4) Bug fixes
    - Analog battery monitor2 current parameter default fixed
    - AutoTune fix for loading Yaw Rate D gains
    - BRD_SAFETYOPTION parameter documentation fix (ActiveForSafetyEnable and Disable were reversed)
    - Compassmot fix to protect against bad gyro biases from GSF yaw
    - ICE engine fix for starting after reaching a specified altitude
    - LED thread locking fix to avoid watchdog
    - Logging rotation on disarm disabled if Replay logging active (avoids gaps in logs)
    - RC input on IOMCU bug fix (RC might not be regained if lost)
    - Serial passthrough fixed
5) Custom build server fix to which features are included/excluded
------------------------------------------------------------------
Rover 4.4.0-beta1 19-Apr-2023
Changes from 4.3.0-beta12
1) New autopilots supported
    - ESP32
    - Flywoo Goku F405S AIO
    - Foxeer H743v1
    - MambaF405-2022B
    - PixPilot-V3
    - PixSurveyA2
    - rFCU H743
    - ThePeach K1/R1
2) Autopilot specific changes
    - Bi-Directional DShot support for CubeOrangePlus-bdshot, CUAVNora+, MatekF405TE/VTOL-bdshot, MatekL431, Pixhawk6C-bdshot, QioTekZealotH743-bdshot
    - Bi-Directional DShot up to 8 channels on MatekH743
    - BlueRobotics Navigator supports baro on I2C bus 6
    - BMP280 baro only for BeastF7, KakuteF4, KakuteF7Mini, MambaF405, MatekF405, Omnibusf4 to reduce code size (aka "flash")
    - CSRF and Hott telemetry disabled by default on some low power boards (aka "minimised boards")
    - Foxeer Reaper F745 supports external compasses
    - OmnibusF4 support for BMI270 IMU
    - OmnibusF7V2-bdshot support removed
    - KakuteF7 regains displayport, frees up DMA from unused serial port
    - KakuteH7v2 gets second battery sensor
    - MambaH743v4 supports VTX
    - MatekF405-Wing supports InvensenseV3 IMUs
    - PixPilot-V6 heater enabled
    - Raspberry 64OS startup crash fixed
    - ReaperF745AIO serial protocol defaults fixed
    - SkystarsH7HD (non-bdshot) removed as users should always use -bdshot version
    - Skyviper loses many unnecessary features to save flash
    - UBlox GPS only for AtomRCF405NAVI, BeastF7, MatekF405, Omnibusf4 to reduce code size (aka "flash")
    - VRBrain-v52 and VRCore-v10 features reduced to save flash
3) Driver enhancements
    - ARK RTK GPS support
    - BMI088 IMU filtering and timing improved, ignores bad data
    - CRSF OSD may display disarmed state after flight mode (enabled using RC_OPTIONS)
    - Daiwa winch baud rate obeys SERIALx_BAUD parameter
    - EFI supports fuel pressure and ignition voltage reporting and battery failsafe
    - ICM45686 IMU support
    - ICM20602 uses fast reset instead of full reset on bad temperature sample (avoids occasional very high offset)
    - ICM45686 supports fast sampling
    - MAX31865 temp sensor support
    - MB85RS256TY-32k, PB85RS128C and PB85RS2MC FRAM support
    - MMC3416 compass orientation fix
    - MPPT battery monitor reliability improvements, enable/disable aux function and less spammy
    - Multiple USD-D1-CAN radar support
    - NMEA output rate configurable (see NMEA_RATE_MS) 
    - NMEA output supports PASHR message (see NMEA_MSG_EN)
    - OSD supports average resting cell voltage (see OSD_ACRVOLT_xxx params)
    - Rockblock satellite modem support
    - Serial baud support for 2Mbps (only some hardware supports this speed)
    - SF45b lidar filtering reduced (allows detecting smaller obstacles
    - SmartAudio 2.0 learns all VTX power levels)
    - UAVCAN ESCs report error count using ESC Telemetry
    - Unicore GPS (e.g. UM982) support
    - VectorNav 100 external AHRS support
    - 5 IMUs supported
4) EKF related enhancements
    - Baro compensation using wind estimates works when climbing or descending (see BAROx_WCF_UP/DN)
    - External AHRS support for enabling only some sensors (e.g. IMU, Baro, Compass) see EAHRS_SENSORS
    - Magnetic field tables updated
    - Non-compass initial yaw alignment uses GPS course over GSF (mostly affects Planes and Rover)
5) Control and navigation enhancements
    - DO_SET_ROI_NONE command turns off ROI
    - JUMP_TAG mission item support
    - Manual mode steering expo configurable (see MANUAL_STR_EXPO)
    - Missions can be stored on SD card (see BRD_SD_MISSION)
    - NAV_SCRIPT_TIME command accepts floating point arguments
    - Pause/Resume returns success if mission is already paused or resumed
8) Camera and gimbal enhancements
    - BMMCC support included in Servo driver
    - DJI RS2/RS3-Pro gimbal support
    - Dual camera support (see CAM2_TYPE)
    - Gimbal/Mount2 can be moved to retracted or neutral position
    - Gremsy ZIO support
    - IMAGE_START_CAPTURE, SET_CAMERA_ZOOM/FOCUS, VIDEO_START/STOP_CAPTURE command support
    - Paramters renamed and rescaled
        - CAM_TRIGG_TYPE renamed to CAM1_TYPE and options have changed
        - CAM_DURATION renamed to CAM1_DURATION and scaled in seconds
        - CAM_FEEDBACK_PIN/POL renamed to CAM1_FEEBAK_PIN/POL
        - CAM_MIN_INTERVAL renamed to CAM1_INTRVAL_MIN and scaled in seconds
        - CAM_TRIGG_DIST renamed to CAMx_TRIGG_DIST and accepts fractional values
    - RunCam2 4k support
    - ViewPro camera gimbal support
8) Logging changes
    - BARD msg includes 3-axis dynamic pressure useful for baro compensation of wind estimate
    - MCU log msg includes main CPU temp and voltage (was part of POWR message)
    - RCOut banner message always included in Logs
    - SCR message includes memory usage of all running scripts
    - CANS message includes CAN bus tx/rx statistics
    - Home location not logged to CMD message
    - MOTB message includes throttle output
9) Scripting enhancements
    - EFI Skypower driver gets improved telem messages and bug fixes
    - Generator throttle control example added
    - Heap max increased by allowing heap to be split across multiple underlying OS heaps
    - Hexsoon LEDs applet
    - Logging from scripts supports more formats
    - Parameters can be removed or reordered
    - Parameter description support (scripts must be in AP's applet or driver directory)
    - Rangefinder driver support
    - Runcam_on_arm applet starts recording when vehicle is armed
    - Safety switch, E-Stop and motor interlock support
    - Scripts can restart all scripts
    - Script_Controller applet supports inflight switching of active scripts
10) Custom build server enhancements
    - AIS support for displaying nearby boats can be included
    - Battery, Camera and Compass drivers can be included/excluded
    - EKF3 wind estimation can be included/excluded
    - PCA9685, ToshibaLED, PLAY_TUNE notify drivers can be included/excluded
    - RichenPower generator can be included/excluded
    - RC SRXL protocol can be excluded
    - SIRF GPSs can be included/excluded
11) Safety related enhancements and fixes
    - Arming check for servo outputs skipped when SERVOx_FUNCTION is scripting
    - Arming check fix if both "All" and other bitmasks are selected (previously only ran the other checks)
    - GCS failsafe timeout is configurable (see FS_GCS_TIMEOUT)
    - "EK3 sources require RangeFinder" pre-arm check fix when user only sets up 2nd rangefinder (e.g. 1st is disabled)
    - Pre-arm check that low and critical battery failsafe thresholds are different
    - Pre-arm message fixed if 2nd EKF core unhealthy
    - Pre-arm check if reboot required to enabled IMU batch sampling (used for vibe analysis)
    - RC failsafe timeout configurable (see RC_FS_TIMEOUT)
12) Minor enhancements
    - Boot time reduced by improving parameter conversion efficiency
    - BRD_SAFETYENABLE parameter renamed to BRD_SAFETY_DEFLT
    - Compass calibration auxiliary switch function (set RCx_OPTION=171)
    - Disable IMU3 auxiliary switch function (set RCx_OPTION=110)
    - Rangefinder and FS_OPTIONS param conversion code reduced (affects when upgrading from 3.6 or earlier)
    - MAVFTP supports file renaming
    - MAVLink in-progress reply to some requests for calibration from GCS
13) Bug fixes:
    - ADSB telemetry and callsign fixes
    - Battery pct reported to GCS limited to 0% to 100% range
    - Bi-directional DShot fix on H7 boards after system time wrap (more complete fix than in 4.3.6)
    - DisplayPort OSD screen reliability improvement on heavily loaded OSDs especially F4 boards
    - DisplayPort OSD artificial horizon better matches actual horizon
    - EFI Serial MS bug fix to avoid possible infinite loop
    - EKF3 Replay fix when COMPASS_LEARN=3
    - ESC Telemetry external temp reporting fix
    - Fence upload works even if Auto mode is excluded from firmware
    - FMT messages logged even when Fence is exncluded from firmware (e.g. unselected when using custom build server)
    - Hardfault avoided if user changes INS_LOG_BAT_CNT while batch sampling running
    - ICM20649 temp sensor tolerate increased to avoid unnecessary FIFO reset
    - IMU detection bug fix to avoid duplicates
    - IMU temp cal fix when using auxiliary IMU
    - Message Interval fix for restoring default rate https://github.com/ArduPilot/ardupilot/pull/21947
    - RADIO_STATUS messages slow-down feature never completely stops messages from being sent
    - SERVOx_TRIM value output momentarily if SERVOx_FUNCTION is changed from Disabled to RCPassThru, RCIN1, etc.  Avoids momentary divide-by-zero
    - Scripting file system open fix
    - Scripting PWM source deletion crash fix
    - MAVFTP fix for low baudrates (4800 baud and lower)
    - ModalAI VOXL reset handling fix
    - MPU6500 IMU fast sampling rate to 4k (was 1K)
    - NMEA GPGGA output fixed for GPS quality, num sats and hdop
    - Position control reset avoided even with very uneven main loop rate due to high CPU load
    - Throttle notch FFT tuning param fix
    - VTX protects against pitmode changes when not enabled or vehicle disarmed
14) Developer specific items
    - DroneCAN replaces UAVCAN
    - FlighAxis simulator rangefinder fixed
    - Scripts in applet and drivers directory checked using linter
    - Simulator supports main loop timing jitter (see SIM_TIME_JITTER)
    - Simulink model and init scripts
    - SITL on hardware support (useful to demo servos moving in response to simulated flight)
    - SITL parameter definitions added (some, not all)
    - Webots 2023a simulator support
    - XPlane support for wider range of aircraft
------------------------------------------------------------------
Rover 4.3.0-beta14 12-Aug-2023
Changes from 4.3.0-beta13
1) Bug fixes
    - DroneCAN GPS RTK injection fix
    - INAxxx battery monitors allow for battery reset remaining
    - Notch filter gyro glitch caused by race condition fixed
    - Scripting restart memory corruption bug fixed
------------------------------------------------------------------
Rover 4.3.0-beta13 27-Mar-2023
Changes from 4.3.0-beta12
1) Bug fixes
    a) EKF3 accel bias calculations bug fix
    b) EKF3 accel bias process noise adjusted for greater robustness
    c) GSF yaw numerical stability fix caused by compassmot
    d) INS batch sampler fix to avoid watchdog if INS_LOG_BAT_CNT changed without rebooting
    e) Memory corruption bug in the STM32H757 (very rare)
    f) RC input on IOMCU bug fix (RC might not be regained if lost)
------------------------------------------------------------------
Rover 4.3.0-beta11/beta12 27-Mar-2023
Changes from 4.3.0-beta10
1) Bi-directional DShot fix for possible motor stop approx 72min after startup 
------------------------------------------------------------------
Rover 4.3.0-beta10 01-Mar-2023
Changes from 4.3.0-beta9
1) Bug fixes
    a) GPS unconfigured error fix for non-M10 uBlox GPS
    b) Gremsy gimbal fix when attached to autopilot's serial3 (or higher)
    c) MambaF405 2022 gets VTX power on support
    d) MCU voltage enabled on H757 CPUs (including CubeOrangePlus)
    e) PiccoloCAN fix for ESC voltage and current scaling 
    f) Servo gimbal mount yaw handling fix (only affects 3-axis servo gimbals)
------------------------------------------------------------------
Rover 4.3.0-beta9 14-Feb-2023
Changes from 4.3.0-beta8
1) AutoPilot specific enhancements
    a) CubeOrangePlusBG support
    b) Foxeer ReaperF745 supports external compass
    c) MambaH743v4 supports VTX power
2) Bug fixes
    a) Arming check fix if BARO_FIELD_ELEV set
    b) Compass calibration diagonals set to 1,1,1 if incorrectly set to 0,0,0
    c) Gimbal's yaw feed-forward set to zero when landed (affects Gremsy gimbals)
    d) IOMCU double reset and safety disable fix
    e) Logging fix for duplicate format messages
    f) OpenDroneId sets emergency status on crash or chute deploy
    g) Peripheral firmware updates using MAVCAN fixed
    h) RC protocol cannot be changed once detected on boards with IOMCU
------------------------------------------------------------------
Rover 4.3.0-beta8 20-Jan-2023
Changes from 4.3.0-beta7
1) Bug fixes
    a) MAVFTP fix to terminate session error (could cause FTP failures)
    b) IMU fast fifo reset log message max frequency reduced
------------------------------------------------------------------
Rover 4.3.0-beta7 09-Jan-2023
Changes from 4.3.0-beta6
1) Autopilot related changes
    a) AIRLink LTE module enable pin and HEAT_ params added
    b) CUAV Nora/Nora+ bdshot firmware (allows Bi-directional DShot)
    c) CubeOrange, CubeYellow gets fast reset of ICM20602
    d) MambaH743v2 with dual ICM42688 supported
    e) PixPilot-V6
2) MAVFTP speed improvement including faster param download
3) Bug fixes
    a) Analog rangefinder GPIO pin arming check fixed
    b) Arming check of AHRS/EKF vs GPS location disabled if GPS disabled
    c) CRSF gets RC_OPTIONS for ELRS baudrate to avoid RC failsafes
    d) Null pointer checks avoid watchdog when out of memory
    e) Servo gimbal yaw jump to opposite side fixed
    f) Siyi A8 gimbal driver's record video feature fixed
    g) SToRM32 serial gimbal driver actual angle reporting fixed (pitch and yaw angle signs were reversed)
------------------------------------------------------------------
Rover 4.3.0-beta6 10-Dec-2022
Changes from 4.3.0-be