#!/usr/bin/env python
'''
GUI to calculate telemetry data rate between vehicle and GCS

Amilcar Lucas
Karthik Desai

Copyright IAV GmbH 2017
Released under GNU GPL version 3 or later
'''

from future import standard_library
standard_library.install_aliases()
from builtins import str

## Generate window for calculating the datasize
from tkinter import Tk, Text, TOP, BOTH, X, Y, N, LEFT,RIGHT, CENTER, RIDGE, VERTICAL, END, IntVar, IntVar, Scrollbar
from tkinter.ttk import Frame, Label, Entry, Combobox, Checkbutton

# import MAVLink messages length dictionary
# this file is generated by a script
mavlink_message_lengths_dict = None  # default if following lines fail 
mav_message_size = 'mavlink_messages_size.py'
exec(compile(source=open(mav_message_size).read(), filename=mav_message_size, mode='exec'))

# Please adapt this list to the vehicle you are using
# These were done by looking at the GCS_MAVLINK_Copter::data_stream_send() function
# in the ardupilot/ArduCopter/GCS_Mavlink.cpp file
mavlink_streams_list = [
#      STREAM  DEFAULT DEFAULT                 DEFAULT
#       NAME    RATE   MAVLINK                 CHECKBOX
#               [Hz]   MESSAGE                 STATES
    ("RAW_SENS", 0, [('RAW_IMU'              , True),
                     ('SCALED_IMU2'          , True),
                     ('SCALED_IMU3'          , False),
                     ('SCALED_PRESSURE'      , True),
                     ('SCALED_PRESSURE2'     , True),
                     ('SCALED_PRESSURE3'     , False),
                     ('SENSOR_OFFSETS'       , True),
                     ('NONE'                 , False)]),
    ("EXT_STAT", 1, [('SYS_STATUS'           , True),
                     ('POWER_STATUS'         , True),
                     ('MEMINFO'              , True),
                     ('MISSION_CURRENT'      , True),
                     ('GPS_RAW_INT'          , True),
                     ('GPS_RTK'              , False),
                     ('GPS2_RAW'             , False),
                     ('GPS2_RTK'             , False),
                     ('NAV_CONTROLLER_OUTPUT', True),
                     ('FENCE_STATUS'         , False),
                     ('NONE'                 , False)]),
    ("POSITION", 1, [('GLOBAL_POSITION_INT'  , True),
                     ('LOCAL_POSITION_NED'   , True),
                     ('NONE'                 , False)]),
    ("RAW_CTRL", 0, [('RC_CHANNELS_SCALED'   , True),
                     ('NONE'                 , False)]),
    ("RC_CHAN",  0, [('SERVO_OUTPUT_RAW'     , True),
                     ('RC_CHANNELS_RAW'      , True),
                     ('RC_CHANNELS'          , True),
                     ('NONE'                 , False)]),
    ("EXTRA1",   2, [('ATTITUDE'             , True),
                     ('SIMSTATE'             , False),
                     ('AHRS2'                , True),
                     ('PID_TUNING'           , False),     # TODO: this will be sent up to four times depending on the GCS_PID_MASK bit3~0 parameter
                     ('NONE'                 , False)]),
    ("EXTRA2",   2, [('VFR_HUD'              , True),
                     ('NONE'                 , False)]),
    ("EXTRA3",   1, [('AHRS'                 , True),
                     ('HWSTATUS'             , True),
                     ('SYSTEM_TIME'          , True),
                     ('RANGEFINDER'          , False),
                     ('DISTANCE_SENSOR'      , False),
                     ('TERRAIN_REQUEST'      , False),
                     ('BATTERY2'             , False),
                     ('MOUNT_STATUS'         , False),
                     ('OPTICAL_FLOW'         , False),
                     ('GIMBAL_REPORT'        , False),
                     ('MAG_CAL_REPORT'       , False),
                     ('MAG_CAL_PROGRESS'     , False),
                     ('EKF_STATUS_REPORT'    , True),
                     ('VIBRATION'            , True),
                     ('RPM'                  , True),
                     ('NONE'                 , False)]),
#    ("PARAMS",   8, [('PARAM_VALUE'          , True),
#                     ('NONE'                 ,False)]),
    ("ADSB",     0, [('ADSB_VEHICLE'         , True),
                     ('NONE'                 , False)]),
    ("RTCM_INJ", 1, [('GPS_RTCM_DATA'        , True),
                     ('NONE'                 , False)]),
]


class MainWindow(Frame):
    def __init__(self, parent):

        Frame.__init__(self, parent)
        self.parent = parent
        self.streamrate_name_array = {}
        self.streamrate_cb_array = {}
        self.streamDataRate_array = {}
        self.streamrate_edit_array = {}
        # you can change this one to make the GUI wider
        self.columns = 3
        self.initUI()

        self.parent.bind('<Return>', self.updateCombo)
        self.updateCombo()

    def updateCombo(self, event = None):
        totalBits = 0
        for frame_name in mavlink_streams_list:
            bits = 0
            for frame_boxes in frame_name[2]:
                temp = self.streamrate_name_array[frame_name[0]][frame_boxes[0]].get()
                if (self.streamrate_cb_array[frame_name[0]][frame_boxes[0]].get()):
                    bits = bits + (8*mavlink_message_lengths_dict[temp]) # convert number of bytes to number of bits
            datarate = float(self.streamrate_edit_array[frame_name[0]].get())
            tempDataBits = int(bits * datarate)
            self.streamDataRate_array[frame_name[0]].config(text=str(tempDataBits)+" bits/s")
            totalBits = int(totalBits + tempDataBits)
        self.end_total_data_rate_label.config(text = "Total Data Rate is "+str(totalBits) + " bits/s")


    def initUI(self):
      
        self.parent.title("Calculate Mavlink UAV->GCS telemetry datarate")
        self.pack(fill=BOTH, expand=1)
     
        count = 0
        count_frame = 0
        count_row = 0
        for frame_name in mavlink_streams_list:
            child_frame = Frame(self,borderwidth = 2, relief = RIDGE)
            child_frame.grid(row = count_row, column = count_frame % self.columns)
            if(count_frame % self.columns == self.columns-1):
                count_row = count_row + 1
            count_frame = count_frame + 1

            frame_label = Label(child_frame, text = frame_name[0] + " message stream")
            frame_label.pack(side= TOP)
            
            self.streamrate_name_array[frame_name[0]] = {}
            self.streamrate_cb_array[frame_name[0]] = {}
            
            comboFrame = Frame(child_frame)
            comboFrame.pack(side = LEFT)
            for frame_boxes in frame_name[2] :

                comboframe = Frame(comboFrame)
                comboframe.pack(side = TOP)

                combo = Combobox(comboframe,values = tuple(mavlink_msg_temp for mavlink_msg_temp in mavlink_message_lengths_dict))
                combo.grid(row = count, column = 0)
                index = list(mavlink_message_lengths_dict.keys()).index(frame_boxes[0])
                combo.current(index)
               
                var = IntVar()
                if (frame_boxes[1]):
                    var.set(1)
                else:
                    var.set(0)
                checkbox = Checkbutton(comboframe,variable = var, command = self.updateCombo)
                checkbox.grid(row = count, column = 1)

                self.streamrate_name_array[frame_name[0]][frame_boxes[0]] = combo
                self.streamrate_cb_array[frame_name[0]][frame_boxes[0]] = var

                combo.bind("<<ComboboxSelected>>",self.updateCombo)
                count = count + 1

            streamrate_frame = Frame(child_frame)
            streamrate_frame.pack(side = TOP, anchor = CENTER)
            data_rate_label = Label(streamrate_frame, text="Stream Rate")
            data_rate_label.pack()

            self.data_rate_edit = Entry(streamrate_frame,width = 2)
            self.data_rate_edit.insert(0,frame_name[1])
            self.streamrate_edit_array[frame_name[0]] =  self.data_rate_edit
            self.data_rate_edit.pack(side = LEFT, anchor = CENTER)

            unit_Label = Label(streamrate_frame, text="Hz")
            unit_Label.pack(side=RIGHT,anchor = CENTER)

            datarate_frame = Frame(child_frame)
            datarate_frame.pack(side = TOP, anchor = CENTER)
            total_data_rate_label = Label(datarate_frame, text="Data Rate")
            total_data_rate_label.pack(side=TOP,anchor = CENTER)
            self.total_data_rate_answer = Label(datarate_frame, text="   bits/s")
            self.total_data_rate_answer.pack(side=TOP,anchor = CENTER)
            self.streamDataRate_array[frame_name[0]] = self.total_data_rate_answer

        self.end_total_data_rate_label = Label(self.parent, text="Total Data Rate")
        self.end_total_data_rate_label.pack(side=TOP)


def main():
    root = Tk()
    app = MainWindow(root)
    root.mainloop()  


if __name__ == '__main__':
    main()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #!/usr/bin/env python

'''
example program to extract GPS data from a mavlink log, and create a GPX
file, for loading into google earth
'''
from __future__ import print_function

import time

from argparse import ArgumentParser
parser = ArgumentParser(description=__doc__)
parser.add_argument("--condition", default=None, help="select packets by a condition")
parser.add_argument("--nofixcheck", default=False, action='store_true', help="don't check for GPS fix")
parser.add_argument("logs", metavar="LOG", nargs="+")
args = parser.parse_args()

from pymavlink import mavutil


def mav_to_gpx(infilename, outfilename):
    '''convert a mavlink log file to a GPX file'''

    mlog = mavutil.mavlink_connection(infilename)
    outf = open(outfilename, mode='w')

    def process_packet(timestamp, lat, lon, alt, hdg, v):
        t = time.localtime(timestamp)
        outf.write('''<trkpt lat="%s" lon="%s">
  <ele>%s</ele>
  <time>%s</time>
  <course>%s</course>
  <speed>%s</speed>
  <fix>3d</fix>
</trkpt>
''' % (lat, lon, alt,
       time.strftime("%Y-%m-%dT%H:%M:%SZ", t),
       hdg, v))

    def add_header():
        outf.write('''<?xml version="1.0" encoding="UTF-8"?>
<gpx
  version="1.0"
  creator="pymavlink"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns="http://www.topografix.com/GPX/1/0"
  xsi:schemaLocation="http://www.topografix.com/GPX/1/0 http://www.topografix.com/GPX/1/0/gpx.xsd">
<trk>
<trkseg>
''')

    def add_footer():
        outf.write('''</trkseg>
</trk>
</gpx>
''')

    add_header()

    count=0
    lat=0
    lon=0
    fix=0
    while True:
        m = mlog.recv_match(type=['GPS_RAW', 'GPS_RAW_INT', 'GPS', 'GPS2'], condition=args.condition)
        if m is None:
            break
        if m.get_type() == 'GPS_RAW_INT':
            lat = m.lat/1.0e7
            lon = m.lon/1.0e7
            alt = m.alt/1.0e3
            v = m.vel/100.0
            hdg = m.cog/100.0
            timestamp = m._timestamp
            fix = m.fix_type
        elif m.get_type() == 'GPS_RAW':
            lat = m.lat
            lon = m.lon
            alt = m.alt
            v = m.v
            hdg = m.hdg
            timestamp = m._timestamp
            fix = m.fix_type
        elif m.get_type() == 'GPS' or m.get_type() == 'GPS2':
            lat = m.Lat
            lon = m.Lng
            alt = m.Alt
            v = m.Spd
            hdg = m.GCrs
            timestamp = m._timestamp
            fix = m.Status
        else:
            pass

        if fix < 2 and not args.nofixcheck:
            continue
        if lat == 0.0 or lon == 0.0:
            continue
        process_packet(timestamp, lat, lon, alt, hdg, v)
        count += 1
    add_footer()
    print("Created %s with %u points" % (outfilename, count))


for infilename in args.logs:
    outfilename = infilename + '.gpx'
    mav_to_gpx(infilename, outfilename)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       #!/usr/bin/env python

'''
convert a MAVLink tlog file to a MATLab mfile
'''
from __future__ import print_function
from builtins import range

import os
import re
import sys
from pymavlink import mavutil

def process_tlog(filename):
    '''convert a tlog to a .m file'''

    is_py2 = sys.version_info < (3,0)

    print("Processing %s" % filename)

    mlog = mavutil.mavlink_connection(filename, dialect=args.dialect, zero_time_base=True)

    # first walk the entire file, grabbing all messages into a hash of lists,
    #and the first message of each type into a hash
    msg_types = {}
    msg_lists = {}

    types = args.types
    if types is not None:
        types = types.split(',')

    # note that Octave doesn't like any extra '.', '*', '-', characters in the filename
    (head, tail) = os.path.split(filename)
    basename = '.'.join(tail.split('.')[:-1])
    mfilename = re.sub('[\.\-\+\*]','_', basename) + '.m'
    # Octave also doesn't like files that don't start with a letter
    if re.match('^[a-zA-z]', mfilename) is None:
        mfilename = 'm_' + mfilename

    if head is not None:
        mfilename = os.path.join(head, mfilename)
    print("Creating %s" % mfilename)

    f = open(mfilename, "w")

    type_counters = {}

    while True:
        m = mlog.recv_match(condition=args.condition)
        if m is None:
            break

        if types is not None and m.get_type() not in types:
            continue
        if m.get_type() == 'BAD_DATA':
            continue

        fieldnames = m._fieldnames
        mtype = m.get_type()
        if mtype in ['FMT', 'PARM']:
            continue

        if mtype not in type_counters:
            type_counters[mtype] = 0
            f.write("%s.columns = {'timestamp'" % mtype)
            for field in fieldnames:
                val = getattr(m, field)

                if is_py2:
                    if isinstance(val,unicode): # NOQA
                        val = str(val)

                if not isinstance(val, str):
                    if type(val) is not list:
                        f.write(",'%s'" % field)
                    else:
                        for i in range(0, len(val)):
                            f.write(",'%s%d'" % (field, i + 1))
            f.write("};\n")

        type_counters[mtype] += 1
        f.write("%s.data(%u,:) = [%f" % (mtype, type_counters[mtype], m._timestamp))
        for field in m._fieldnames:
            val = getattr(m, field)

            if is_py2:
                if isinstance(val,unicode): # NOQA
                    val = str(val)

            if not isinstance(val, str):
                if type(val) is not list:
                    f.write(",%.20g" % val)
                else:
                    for i in range(0, len(val)):
                        f.write(",%.20g" % val[i])
        f.write("];\n")
    f.close()

from argparse import ArgumentParser
parser = ArgumentParser(description=__doc__)

parser.add_argument("--condition", default=None, help="select packets by condition")
parser.add_argument("-o", "--output", default=None, help="output filename")
parser.add_argument("--types", default=None, help="types of messages (comma separated)")
parser.add_argument("--dialect", default="ardupilotmega", help="MAVLink dialect")
parser.add_argument("logs", metavar="LOG", nargs="+")
args = parser.parse_args()


for filename in args.logs:
    process_tlog(filename)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           #!/usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import print_function
from pymavlink import mavutil

master = mavutil.mavlink_connection("udp::14555", dialect="array_test")

while True:
    m = master.recv_msg()
    if m is not None:
        print(m)
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      #!/usr/bin/env python
# -*- coding: utf-8 -*-

import time
from pymavlink import mavutil

master = mavutil.mavlink_connection("udp::14555", input=False, dialect="array_test")
while True:
    master.mav.system_time_send(1,2)
    master.mav.array_test_0_send(1, [-3, -2, -1, 0], [1,2,3,4], [5,6,7,8], [9,10,11,12])
    master.mav.array_test_1_send([1,2,3,4])
    master.mav.array_test_3_send(1, [2,3,4,5])
    master.mav.array_test_4_send([1,2,3,4], 5)
    master.mav.array_test_5_send("test1", "test2")
    master.mav.array_test_6_send(1,2,3, [4,5], [6,7], [8,9], [10,11], [12,13], [14,15], "long value", [1.1, 2.2], [3.3, 4.4])
    master.mav.array_test_7_send([1.1, 2.2], [3.3, 4.4],
            [4,5], [6,7], [8,9], [10,11], [12,13], [14,15], "long value")
    master.mav.array_test_8_send(1, [2.2, 3.3], [14,15])
    time.sleep(1)

master.close()

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             #!/usr/bin/python

'''
Copyright Peter Barker 2021
'''

import optparse
import os
import pymavlink
import re
import select
import subprocess
import time
import fcntl

from pymavlink import mavutil

class SerialControlToShell(object):
    '''reads SERIAL_CONTROL packets and passes them to a shell, returning textual  results'''

    def __init__(self, connection_string, system_id=1, component_id=10):
        self.connection_string = connection_string

        self.serial_control_dev = mavutil.mavlink.SERIAL_CONTROL_DEV_SHELL

        self.mav = mavutil.mavlink_connection(
            self.connection_string,
            source_system=system_id,
            source_component=component_id,
        )

        self.mixed_output_from_shell = ""

        self.last_heartbeat_sent = 0

    def send_heartbeats(self):
        now = time.time()
        if now - self.last_heartbeat_sent > 0.5:
            self.last_heartbeat_sent = now
            self.mav.mav.heartbeat_send(mavutil.mavlink.MAV_TYPE_GCS,
                                        mavutil.mavlink.MAV_AUTOPILOT_INVALID,
                                        0,
                                        0,
                                        0)

    def debug(self, msg):
        print("DEBUG: %s" % msg)

    def open_shell(self):
        self.shell = subprocess.Popen(["/bin/bash"],
                                      stdin=subprocess.PIPE,
                                      stdout=subprocess.PIPE,
                                      stderr=subprocess.PIPE,
                                      cwd="/tmp")
        fcntl.fcntl(self.shell.stdout.fileno(), fcntl.F_SETFL, os.O_NONBLOCK)
        fcntl.fcntl(self.shell.stderr.fileno(), fcntl.F_SETFL, os.O_NONBLOCK)

    def run(self):
        self.open_shell()
        os.environ["PYTHONUNBUFFERED"]="1"
        while True:
            m = self.mav.recv_match(type="SERIAL_CONTROL", timeout=1000)
            self.send_heartbeats()
            shell_failure = self.shell.poll()
            if shell_failure is not None:
                self.debug("Shell is dead, restarting (%s)" % shell_failure)
                self.open_shell()
            if select.select([self.shell.stderr, self.shell.stdout],[],[],0)[0] != []:
                try:
                    self.mixed_output_from_shell += self.shell.stderr.read()
                except IOError as e:
                    if e.errno != 11:
                        raise
                try:
                    self.mixed_output_from_shell += self.shell.stdout.read()
                except IOError as e:
                    if e.errno != 11:
                        raise

            while len(self.mixed_output_from_shell):
                data = self.mixed_output_from_shell[:70]
                self.mixed_output_from_shell = self.mixed_output_from_shell[70:]
                data_len = len(data)
                data = [ord(x) for x in list(data)]
                data = data + ([0] * (70-len(data)))

                self.mav.mav.serial_control_send(
                    self.serial_control_dev,
                    mavutil.mavlink.SERIAL_CONTROL_FLAG_REPLY,
                    0,  # timeout
                    0,  # baud
                    data_len,
                    data
                )

            if m is None:
                time.sleep(0.1)
                continue
            if m.device != self.serial_control_dev:
                continue
            if m.count == 0:
                continue

            b = m.data[:m.count]
            text = "".join([chr(a) for a in b])
            text = re.sub("\r\n", "\n", text)  # not quite right, doesn't take into account \r at end of data
            self.shell.stdin.write(text)

if __name__ == '__main__':

    parser = optparse.OptionParser("bisect.py ")

    parser.add_option("", "--system-id",
                      type=int,
                      help="This script's system ID",
                      default=1,
    )

    parser.add_option("", "--component-id",
                      type=int,
                      help="This script's component ID",
                      default=10,
    )

    (opts, args) = parser.parse_args()

    s = SerialControlToShell(
        args[0],
        system_id=opts.system_id,
        component_id=opts.component_id,
    )
    s.run()
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      #! /usr/bin/env python
# encoding: utf-8
# Thomas Nagy, 2006-2016 (ita)
#
# The Waf network cache consists of a client
# (waflib/extras/netcache_client.py) and a simple
# tcp server that provides a way to share build
# files over a a network.
#
# There are no restrictions to the use of the cache
# at this point, so use with a firewall!
#
#
# The Java server can be run in the current folder using:
#    rm -rf /tmp/wafcache/; javac Netcache.java && java Netcache
#
# Then run the example and compare the outputs:
#    waf configure clean build --zones=netcache
#    waf configure clean build --zones=netcache
#

APPNAME='netcache_test'

top = '.'
out = 'build'

def options(opt):
	#opt.load('compiler_c')
	pass

def configure(conf):
	#conf.load('compiler_c')
	conf.load('gcc')
	#conf.load('netcache_client')

def build(bld):
	bld.load('netcache_client')
	bld(
		features = 'c cprogram',
		source = 'main.c',
		target = 'test_c_app',
		uselib_local = 'my_static_lib',
		includes = '. /usr/include')

	bld(
		features = 'c cstlib',
		source = 'test_staticlib.c',
		target='my_static_lib')

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              
int main()
{
   return 0;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   #! /usr/bin/env python

def options(ctx):
    ctx.load('compiler_c')

def configure(ctx):
    ctx.load('compiler_c')
    ctx.load('objcopy')

def build(ctx):
    ctx(features = 'c cprogram objcopy',
        source   = 'main.c',
        target   = 'app',
#       objcopy_bfdname='srec',
#       objcopy_target  = 'alternative-name',
#       objcopy_install_path = '${PREFIX}/some_dir',
#       objcopy_flags = '--strip-all'
        )
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               
open Printf;;

open Somemodule;;

(* coin coin ( ) ( ( (*  ) ) ) ( ) muahha open nono;; *) *)
(* ( *)

let rec fib n =
	if n < 1 then 1
	else if n == 1 then 1
	else fib(n-1) + fib(n-2);;

for i=0 to 10 do
	Somemodule.pprint "next";
	Printf.printf " %d %d\n" i (fib i)
done;;

print_newline();;

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        open Printf;;

let pprint str =
	Printf.printf "* %s" str
;;


                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #! /usr/bin/env python
# encoding: utf-8
# Thomas Nagy, 2005-2010 (ita)

# the following two variables are used by the target "waf dist"
VERSION = '0.0.1'
APPNAME = 'ocaml_test'

# these variables are mandatory,
top = '.'
out = 'build'

def configure(conf):
	conf.load('ocaml')

def build(bld):

	bld(
		features = 'ocaml',
		kind     = 'all',
		includes = '.',
		target   = 'camlprog',
		source   = bld.path.ant_glob('*.ml'))

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #! /usr/bin/env python

"""
Create a tarball of the build results. The package command aggregates
the functionality of build, install and dist in a single command.

$ waf configure package

See also playground/distnet/ for a more enterprisey example
"""

APPNAME = 'ex'
VERSION = '1.0'

top = '.'

def configure(conf):
	pass

def build(bld):
	bld(rule='touch ${TGT}', target='foo.txt')
	bld.install_files('${PREFIX}/bin', 'foo.txt')

# ---------------------------

import shutil, os

from waflib import Build
class package_cls(Build.InstallContext):
	# to skip the installation phase (not recommended!):
	#    use "package_cls(Build.BuildContext)" instead of "package_cls(Build.InstallContext)",
	#    remove the "init_dirs" method
	#    change "self.tmp" to "self.bldnode"
	cmd = 'package'
	fun = 'build'

	def init_dirs(self, *k, **kw):
		super(package_cls, self).init_dirs(*k, **kw)
		self.tmp = self.bldnode.make_node('package_tmp_dir')
		try:
			shutil.rmtree(self.tmp.abspath())
		except:
			pass
		if os.path.exists(self.tmp.abspath()):
			self.fatal('Could not remove the temporary directory %r' % self.tmp)
		self.tmp.mkdir()
		self.options.destdir = self.tmp.abspath()

	def execute(self, *k, **kw):
		back = self.options.destdir
		try:
			super(package_cls, self).execute(*k, **kw)
		finally:
			self.options.destdir = back

		files = self.tmp.ant_glob('**')

		# we could mess with multiple inheritance but this is probably unnecessary
		from waflib import Scripting
		ctx = Scripting.Dist()
		ctx.arch_name = '%s%s-%s.tar.bz2' % (APPNAME, self.variant, VERSION) # if defined
		ctx.files = files
		ctx.tar_prefix = ''
		ctx.base_path = self.tmp
		ctx.archive()

		shutil.rmtree(self.tmp.abspath())

# for variants, add command subclasses "package_release", "package_debug", etc
def init(ctx):
	for x in ('release', 'debug'):
			class tmp(package_cls):
				cmd = 'package_' + x
				variant = x

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              #include <stdio.h>

int main() {
	printf("A=%d\n", A);
	return 0;
}

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           #! /usr/bin/env python
# encoding: utf-8

VERSION='0.0.1'
APPNAME='cc_test'

top = '.'
out = 'build'

"""
Call "waf build_all_at_once"

The commands will be executed in parallel, but the processes
will be limited by a bounded semaphore to avoid excessive usage.
"""

def options(opt):
	opt.load('compiler_c')

def configure(conf):
	conf.setenv('debug')
	conf.load('compiler_c')
	conf.env.DEFINES = ["A=1"]

	conf.setenv('release', env=conf.env.derive())
	conf.env.CFLAGS = ['-O2']
	conf.env.DEFINES = ["A=2"]

def build(bld):
	if not bld.variant:
		bld.fatal('call "waf build_debug" or "waf build_release", and try "waf --help"')
	bld.program(source='main.c', target='app', includes='.')


from waflib.Build import BuildContext, CleanContext, InstallContext, UninstallContext

for x in 'debug release'.split():
	for y in (BuildContext, CleanContext, InstallContext, UninstallContext):
		name = y.__name__.replace('Context','').lower()
		class tmp(y):
			cmd = name + '_' + x
			variant = x

def buildall(ctx):
	import waflib.Options
	waflib.Options.commands.extend(['build_debug', 'build_release'])


# The following defines a command which builds all the variants at once

from waflib import Build, Task, Options, Utils, Scripting

Scripting.default_cmd = "build_all_at_once"

class buildall_ctx(Build.BuildContext):
	cmd = fun = "build_all_at_once"
	variant = ""
	def compile(self): pass

def build_all_at_once(ctx):
	sem = Utils.threading.Semaphore(Options.options.jobs)
	def with_sem(f):
		def f2(self):
			sem.acquire()
			f(self)
			sem.release()
		return f2
	Task.Task.process = with_sem(Task.Task.process)

	threads = []
	for var in ctx.all_envs:
		if var == '': continue
		cls = type(Build.BuildContext)(var, (Build.BuildContext,), {'cmd': var, 'variant': var})
		bld = cls(top_dir=ctx.top_dir, out_dir=ctx.out_dir)
		bld.targets = ctx.targets
		t = Utils.threading.Thread()
		t.run = bld.execute
		threads.append(t)

	for t in threads: t.start()
	for t in threads: t.join()

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               #include "a.h"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #ifndef A_H
#define A_H

#warning "testpch: a.h"

#endif // A_H
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                #include "b.h"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #ifndef B_H
#define B_H

#warning "testpch: b.h"

#ifdef HAS_MY_BOOST
	#include <boost/asio.hpp>
#endif

#endif // B_H
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         #include "c.h"
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 #ifndef C_H
#define C_H

#warning "testpch: c.h"

#endif // C_H
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                int main()
{
  return 0;

}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    #include "a.h"
#include "b.h"
#include "c.h"

int main()
{
	return 0;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        #! /usr/bin/env python
# encoding: utf-8
# Thomas Nagy, 2006 (ita)

"""
Note: the #warning will come once when the .h is compiled, it should not not come when the .cpp is compiled when precompiled headers are enabled

Compare:
   waf configure clean build
and
   waf configure clean build --without-pch
"""

VERSION='0.0.2'
APPNAME='pch_test'

top = '.'
out = 'build'

from waflib import Errors

# to include <boost/asio.hpp> to slow down compilation of precompiled headers
LOAD_BOOST = False

def options(opt):
	opt.load('compiler_cxx')
	opt.load('pch')
	if LOAD_BOOST:
		opt.load('boost', mt=True)

def configure(conf):
	conf.load('compiler_cxx pch')
	if LOAD_BOOST:
		conf.load('boost')
		conf.check_boost('thread system', mt=True)
		#conf.env.append_value('LIB_BOOST', 'pthread') #?
		conf.env.append_value('DEFINES_BOOST', ['HAS_MY_BOOST=1'])

def build(bld):
	# Simple way, when precompiled header is used in a single build task
	bld.program(
		target = 'test',
		features = 'pch',
		source = 'a.cpp b.cpp c.cpp main.cpp',
		headers = 'a.h b.h c.h',
		use = 'BOOST')

	# More complex way, where precompiled header is reused by several build tasks
	bld(features ='cxx pch',
		name = 'base-with-pch',
		target = 'pch-header',
		headers = 'a.h b.h c.h',
		source = 'a.cpp',
		use = 'BOOST')

	bld(features = 'cxx cxxprogram',
		target = 'test1',
		source = 'b.cpp c.cpp main.cpp',
		use    = 'base-with-pch')
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            #!/usr/bin/env python
# encoding: utf-8

from waflib.TaskGen import extension

top = '.'
out = 'build'


@extension('.py', 'wscript')
def check_syntax(self, node):
    self.create_task('Pep8', node)


def options(opt):
    opt.load('pep8')


def configure(conf):
    # warning after this comment
    
    conf.load('pep8')


def build(bld):
    bld(source='wscript')
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       package udp.tc.tests;

import "message_inc.proto";

option java_package ="com.udp.tc.tests";
option java_outer_classname= "MessageProtos";
option cc_generic_services = false;
option java_generic_services = false;
option py_generic_services = false;

message Message {
    required int32 test = 1;
    optional uint32 blah = 2;
    required IncludeMe custom = 3;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    package udp.tc.tests;

option java_package = "com.udp.tc.tests";
option java_outer_classname = "MessageInc";
option cc_generic_services = false;
option java_generic_services = false;
option py_generic_services = false;


message IncludeMe {
    required int32 test = 1;
    optional uint32 blah = 2;
    optional uint32 justinc = 3;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 package udp.tc.tests;

import "message_inc.proto";

option java_package ="com.udp.tc.tests";
option cc_generic_services = false;
option java_generic_services = false;
option py_generic_services = false;

message MessageCaseTest {
    required int32 test = 1;
    optional uint32 blah = 2;
    required IncludeMe custom = 3;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          package udp.tc.tests;

import "messageboth_inc.proto";

option java_package = "com.udp.tc.tests";
option java_outer_classname = "MessageBothProtos";
option cc_generic_services = false;
option java_generic_services = false;
option py_generic_services = false;

message MessageBoth {
    required int32 test = 1;
    optional uint32 blah = 2;
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         