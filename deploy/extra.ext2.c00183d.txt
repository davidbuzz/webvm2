returns deep copy of _tds__GetDot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot1XConfiguration::soap_del() deep deletes _tds__GetDot1XConfiguration data members, use only after _tds__GetDot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot1XConfiguration::soap_type() returns SOAP_TYPE__tds__GetDot1XConfiguration or derived type identifier
class _tds__GetDot1XConfiguration
{ public:
/// Element "Dot1XConfigurationToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Dot1XConfigurationToken        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationResponse is a complexType.
///
/// @note class _tds__GetDot1XConfigurationResponse operations:
/// - _tds__GetDot1XConfigurationResponse* soap_new__tds__GetDot1XConfigurationResponse(soap*) allocate and default initialize
/// - _tds__GetDot1XConfigurationResponse* soap_new__tds__GetDot1XConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot1XConfigurationResponse* soap_new_req__tds__GetDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__GetDot1XConfigurationResponse* soap_new_set__tds__GetDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDot1XConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurationResponse(soap*, _tds__GetDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurationResponse(soap*, _tds__GetDot1XConfigurationResponse*) serialize to a stream
/// - _tds__GetDot1XConfigurationResponse* _tds__GetDot1XConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__GetDot1XConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot1XConfigurationResponse::soap_del() deep deletes _tds__GetDot1XConfigurationResponse data members, use only after _tds__GetDot1XConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot1XConfigurationResponse::soap_type() returns SOAP_TYPE__tds__GetDot1XConfigurationResponse or derived type identifier
class _tds__GetDot1XConfigurationResponse
{ public:
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurations is a complexType.
///
/// @note class _tds__GetDot1XConfigurations operations:
/// - _tds__GetDot1XConfigurations* soap_new__tds__GetDot1XConfigurations(soap*) allocate and default initialize
/// - _tds__GetDot1XConfigurations* soap_new__tds__GetDot1XConfigurations(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot1XConfigurations* soap_new_req__tds__GetDot1XConfigurations(soap*, ...) allocate, set required members
/// - _tds__GetDot1XConfigurations* soap_new_set__tds__GetDot1XConfigurations(soap*, ...) allocate, set all public members
/// - _tds__GetDot1XConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurations(soap*, _tds__GetDot1XConfigurations*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurations(soap*, _tds__GetDot1XConfigurations*) serialize to a stream
/// - _tds__GetDot1XConfigurations* _tds__GetDot1XConfigurations::soap_dup(soap*) returns deep copy of _tds__GetDot1XConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot1XConfigurations::soap_del() deep deletes _tds__GetDot1XConfigurations data members, use only after _tds__GetDot1XConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot1XConfigurations::soap_type() returns SOAP_TYPE__tds__GetDot1XConfigurations or derived type identifier
class _tds__GetDot1XConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfigurationsResponse is a complexType.
///
/// @note class _tds__GetDot1XConfigurationsResponse operations:
/// - _tds__GetDot1XConfigurationsResponse* soap_new__tds__GetDot1XConfigurationsResponse(soap*) allocate and default initialize
/// - _tds__GetDot1XConfigurationsResponse* soap_new__tds__GetDot1XConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot1XConfigurationsResponse* soap_new_req__tds__GetDot1XConfigurationsResponse(soap*, ...) allocate, set required members
/// - _tds__GetDot1XConfigurationsResponse* soap_new_set__tds__GetDot1XConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDot1XConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot1XConfigurationsResponse(soap*, _tds__GetDot1XConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfigurationsResponse(soap*, _tds__GetDot1XConfigurationsResponse*) serialize to a stream
/// - _tds__GetDot1XConfigurationsResponse* _tds__GetDot1XConfigurationsResponse::soap_dup(soap*) returns deep copy of _tds__GetDot1XConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot1XConfigurationsResponse::soap_del() deep deletes _tds__GetDot1XConfigurationsResponse data members, use only after _tds__GetDot1XConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot1XConfigurationsResponse::soap_type() returns SOAP_TYPE__tds__GetDot1XConfigurationsResponse or derived type identifier
class _tds__GetDot1XConfigurationsResponse
{ public:
/// Size of array of tt__Dot1XConfiguration* is 0..unbounded.
  $ int                                  __sizeDot1XConfiguration       0;
/// Pointer to array tt__Dot1XConfiguration* of size 0..unbounded.
    tt__Dot1XConfiguration*             *Dot1XConfiguration             0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfiguration is a complexType.
///
/// @note class _tds__DeleteDot1XConfiguration operations:
/// - _tds__DeleteDot1XConfiguration* soap_new__tds__DeleteDot1XConfiguration(soap*) allocate and default initialize
/// - _tds__DeleteDot1XConfiguration* soap_new__tds__DeleteDot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteDot1XConfiguration* soap_new_req__tds__DeleteDot1XConfiguration(soap*, ...) allocate, set required members
/// - _tds__DeleteDot1XConfiguration* soap_new_set__tds__DeleteDot1XConfiguration(soap*, ...) allocate, set all public members
/// - _tds__DeleteDot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteDot1XConfiguration(soap*, _tds__DeleteDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__DeleteDot1XConfiguration(soap*, _tds__DeleteDot1XConfiguration*) serialize to a stream
/// - _tds__DeleteDot1XConfiguration* _tds__DeleteDot1XConfiguration::soap_dup(soap*) returns deep copy of _tds__DeleteDot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteDot1XConfiguration::soap_del() deep deletes _tds__DeleteDot1XConfiguration data members, use only after _tds__DeleteDot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteDot1XConfiguration::soap_type() returns SOAP_TYPE__tds__DeleteDot1XConfiguration or derived type identifier
class _tds__DeleteDot1XConfiguration
{ public:
/// Size of array of tt__ReferenceToken is 0..unbounded.
  $ int                                  __sizeDot1XConfigurationToken  0;
/// Pointer to array tt__ReferenceToken of size 0..unbounded.
    tt__ReferenceToken                  *Dot1XConfigurationToken        0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteDot1XConfigurationResponse is a complexType.
///
/// @note class _tds__DeleteDot1XConfigurationResponse operations:
/// - _tds__DeleteDot1XConfigurationResponse* soap_new__tds__DeleteDot1XConfigurationResponse(soap*) allocate and default initialize
/// - _tds__DeleteDot1XConfigurationResponse* soap_new__tds__DeleteDot1XConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteDot1XConfigurationResponse* soap_new_req__tds__DeleteDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteDot1XConfigurationResponse* soap_new_set__tds__DeleteDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteDot1XConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteDot1XConfigurationResponse(soap*, _tds__DeleteDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteDot1XConfigurationResponse(soap*, _tds__DeleteDot1XConfigurationResponse*) serialize to a stream
/// - _tds__DeleteDot1XConfigurationResponse* _tds__DeleteDot1XConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__DeleteDot1XConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteDot1XConfigurationResponse::soap_del() deep deletes _tds__DeleteDot1XConfigurationResponse data members, use only after _tds__DeleteDot1XConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteDot1XConfigurationResponse::soap_type() returns SOAP_TYPE__tds__DeleteDot1XConfigurationResponse or derived type identifier
class _tds__DeleteDot1XConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputs is a complexType.
///
/// @note class _tds__GetRelayOutputs operations:
/// - _tds__GetRelayOutputs* soap_new__tds__GetRelayOutputs(soap*) allocate and default initialize
/// - _tds__GetRelayOutputs* soap_new__tds__GetRelayOutputs(soap*, int num) allocate and default initialize an array
/// - _tds__GetRelayOutputs* soap_new_req__tds__GetRelayOutputs(soap*, ...) allocate, set required members
/// - _tds__GetRelayOutputs* soap_new_set__tds__GetRelayOutputs(soap*, ...) allocate, set all public members
/// - _tds__GetRelayOutputs::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRelayOutputs(soap*, _tds__GetRelayOutputs*) deserialize from a stream
/// - int soap_write__tds__GetRelayOutputs(soap*, _tds__GetRelayOutputs*) serialize to a stream
/// - _tds__GetRelayOutputs* _tds__GetRelayOutputs::soap_dup(soap*) returns deep copy of _tds__GetRelayOutputs, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRelayOutputs::soap_del() deep deletes _tds__GetRelayOutputs data members, use only after _tds__GetRelayOutputs::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRelayOutputs::soap_type() returns SOAP_TYPE__tds__GetRelayOutputs or derived type identifier
class _tds__GetRelayOutputs
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRelayOutputsResponse is a complexType.
///
/// @note class _tds__GetRelayOutputsResponse operations:
/// - _tds__GetRelayOutputsResponse* soap_new__tds__GetRelayOutputsResponse(soap*) allocate and default initialize
/// - _tds__GetRelayOutputsResponse* soap_new__tds__GetRelayOutputsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetRelayOutputsResponse* soap_new_req__tds__GetRelayOutputsResponse(soap*, ...) allocate, set required members
/// - _tds__GetRelayOutputsResponse* soap_new_set__tds__GetRelayOutputsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetRelayOutputsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRelayOutputsResponse(soap*, _tds__GetRelayOutputsResponse*) deserialize from a stream
/// - int soap_write__tds__GetRelayOutputsResponse(soap*, _tds__GetRelayOutputsResponse*) serialize to a stream
/// - _tds__GetRelayOutputsResponse* _tds__GetRelayOutputsResponse::soap_dup(soap*) returns deep copy of _tds__GetRelayOutputsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRelayOutputsResponse::soap_del() deep deletes _tds__GetRelayOutputsResponse data members, use only after _tds__GetRelayOutputsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRelayOutputsResponse::soap_type() returns SOAP_TYPE__tds__GetRelayOutputsResponse or derived type identifier
class _tds__GetRelayOutputsResponse
{ public:
/// Size of array of tt__RelayOutput* is 0..unbounded.
  $ int                                  __sizeRelayOutputs             0;
/// Pointer to array tt__RelayOutput* of size 0..unbounded.
    tt__RelayOutput*                    *RelayOutputs                   0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettings is a complexType.
///
/// @note class _tds__SetRelayOutputSettings operations:
/// - _tds__SetRelayOutputSettings* soap_new__tds__SetRelayOutputSettings(soap*) allocate and default initialize
/// - _tds__SetRelayOutputSettings* soap_new__tds__SetRelayOutputSettings(soap*, int num) allocate and default initialize an array
/// - _tds__SetRelayOutputSettings* soap_new_req__tds__SetRelayOutputSettings(soap*, ...) allocate, set required members
/// - _tds__SetRelayOutputSettings* soap_new_set__tds__SetRelayOutputSettings(soap*, ...) allocate, set all public members
/// - _tds__SetRelayOutputSettings::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRelayOutputSettings(soap*, _tds__SetRelayOutputSettings*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputSettings(soap*, _tds__SetRelayOutputSettings*) serialize to a stream
/// - _tds__SetRelayOutputSettings* _tds__SetRelayOutputSettings::soap_dup(soap*) returns deep copy of _tds__SetRelayOutputSettings, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRelayOutputSettings::soap_del() deep deletes _tds__SetRelayOutputSettings data members, use only after _tds__SetRelayOutputSettings::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRelayOutputSettings::soap_type() returns SOAP_TYPE__tds__SetRelayOutputSettings or derived type identifier
class _tds__SetRelayOutputSettings
{ public:
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "Properties" of type "http://www.onvif.org/ver10/schema":RelayOutputSettings.
    tt__RelayOutputSettings*             Properties                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputSettingsResponse is a complexType.
///
/// @note class _tds__SetRelayOutputSettingsResponse operations:
/// - _tds__SetRelayOutputSettingsResponse* soap_new__tds__SetRelayOutputSettingsResponse(soap*) allocate and default initialize
/// - _tds__SetRelayOutputSettingsResponse* soap_new__tds__SetRelayOutputSettingsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetRelayOutputSettingsResponse* soap_new_req__tds__SetRelayOutputSettingsResponse(soap*, ...) allocate, set required members
/// - _tds__SetRelayOutputSettingsResponse* soap_new_set__tds__SetRelayOutputSettingsResponse(soap*, ...) allocate, set all public members
/// - _tds__SetRelayOutputSettingsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRelayOutputSettingsResponse(soap*, _tds__SetRelayOutputSettingsResponse*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputSettingsResponse(soap*, _tds__SetRelayOutputSettingsResponse*) serialize to a stream
/// - _tds__SetRelayOutputSettingsResponse* _tds__SetRelayOutputSettingsResponse::soap_dup(soap*) returns deep copy of _tds__SetRelayOutputSettingsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRelayOutputSettingsResponse::soap_del() deep deletes _tds__SetRelayOutputSettingsResponse data members, use only after _tds__SetRelayOutputSettingsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRelayOutputSettingsResponse::soap_type() returns SOAP_TYPE__tds__SetRelayOutputSettingsResponse or derived type identifier
class _tds__SetRelayOutputSettingsResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputState is a complexType.
///
/// @note class _tds__SetRelayOutputState operations:
/// - _tds__SetRelayOutputState* soap_new__tds__SetRelayOutputState(soap*) allocate and default initialize
/// - _tds__SetRelayOutputState* soap_new__tds__SetRelayOutputState(soap*, int num) allocate and default initialize an array
/// - _tds__SetRelayOutputState* soap_new_req__tds__SetRelayOutputState(soap*, ...) allocate, set required members
/// - _tds__SetRelayOutputState* soap_new_set__tds__SetRelayOutputState(soap*, ...) allocate, set all public members
/// - _tds__SetRelayOutputState::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRelayOutputState(soap*, _tds__SetRelayOutputState*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputState(soap*, _tds__SetRelayOutputState*) serialize to a stream
/// - _tds__SetRelayOutputState* _tds__SetRelayOutputState::soap_dup(soap*) returns deep copy of _tds__SetRelayOutputState, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRelayOutputState::soap_del() deep deletes _tds__SetRelayOutputState data members, use only after _tds__SetRelayOutputState::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRelayOutputState::soap_type() returns SOAP_TYPE__tds__SetRelayOutputState or derived type identifier
class _tds__SetRelayOutputState
{ public:
/// Element "RelayOutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   RelayOutputToken               1;	///< Required element.
/// Element "LogicalState" of type "http://www.onvif.org/ver10/schema":RelayLogicalState.
    enum tt__RelayLogicalState           LogicalState                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRelayOutputStateResponse is a complexType.
///
/// @note class _tds__SetRelayOutputStateResponse operations:
/// - _tds__SetRelayOutputStateResponse* soap_new__tds__SetRelayOutputStateResponse(soap*) allocate and default initialize
/// - _tds__SetRelayOutputStateResponse* soap_new__tds__SetRelayOutputStateResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetRelayOutputStateResponse* soap_new_req__tds__SetRelayOutputStateResponse(soap*, ...) allocate, set required members
/// - _tds__SetRelayOutputStateResponse* soap_new_set__tds__SetRelayOutputStateResponse(soap*, ...) allocate, set all public members
/// - _tds__SetRelayOutputStateResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRelayOutputStateResponse(soap*, _tds__SetRelayOutputStateResponse*) deserialize from a stream
/// - int soap_write__tds__SetRelayOutputStateResponse(soap*, _tds__SetRelayOutputStateResponse*) serialize to a stream
/// - _tds__SetRelayOutputStateResponse* _tds__SetRelayOutputStateResponse::soap_dup(soap*) returns deep copy of _tds__SetRelayOutputStateResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRelayOutputStateResponse::soap_del() deep deletes _tds__SetRelayOutputStateResponse data members, use only after _tds__SetRelayOutputStateResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRelayOutputStateResponse::soap_type() returns SOAP_TYPE__tds__SetRelayOutputStateResponse or derived type identifier
class _tds__SetRelayOutputStateResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommand is a complexType.
///
/// @note class _tds__SendAuxiliaryCommand operations:
/// - _tds__SendAuxiliaryCommand* soap_new__tds__SendAuxiliaryCommand(soap*) allocate and default initialize
/// - _tds__SendAuxiliaryCommand* soap_new__tds__SendAuxiliaryCommand(soap*, int num) allocate and default initialize an array
/// - _tds__SendAuxiliaryCommand* soap_new_req__tds__SendAuxiliaryCommand(soap*, ...) allocate, set required members
/// - _tds__SendAuxiliaryCommand* soap_new_set__tds__SendAuxiliaryCommand(soap*, ...) allocate, set all public members
/// - _tds__SendAuxiliaryCommand::soap_default(soap*) default initialize members
/// - int soap_read__tds__SendAuxiliaryCommand(soap*, _tds__SendAuxiliaryCommand*) deserialize from a stream
/// - int soap_write__tds__SendAuxiliaryCommand(soap*, _tds__SendAuxiliaryCommand*) serialize to a stream
/// - _tds__SendAuxiliaryCommand* _tds__SendAuxiliaryCommand::soap_dup(soap*) returns deep copy of _tds__SendAuxiliaryCommand, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SendAuxiliaryCommand::soap_del() deep deletes _tds__SendAuxiliaryCommand data members, use only after _tds__SendAuxiliaryCommand::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SendAuxiliaryCommand::soap_type() returns SOAP_TYPE__tds__SendAuxiliaryCommand or derived type identifier
class _tds__SendAuxiliaryCommand
{ public:
/// Element "AuxiliaryCommand" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommand               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SendAuxiliaryCommandResponse is a complexType.
///
/// @note class _tds__SendAuxiliaryCommandResponse operations:
/// - _tds__SendAuxiliaryCommandResponse* soap_new__tds__SendAuxiliaryCommandResponse(soap*) allocate and default initialize
/// - _tds__SendAuxiliaryCommandResponse* soap_new__tds__SendAuxiliaryCommandResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SendAuxiliaryCommandResponse* soap_new_req__tds__SendAuxiliaryCommandResponse(soap*, ...) allocate, set required members
/// - _tds__SendAuxiliaryCommandResponse* soap_new_set__tds__SendAuxiliaryCommandResponse(soap*, ...) allocate, set all public members
/// - _tds__SendAuxiliaryCommandResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SendAuxiliaryCommandResponse(soap*, _tds__SendAuxiliaryCommandResponse*) deserialize from a stream
/// - int soap_write__tds__SendAuxiliaryCommandResponse(soap*, _tds__SendAuxiliaryCommandResponse*) serialize to a stream
/// - _tds__SendAuxiliaryCommandResponse* _tds__SendAuxiliaryCommandResponse::soap_dup(soap*) returns deep copy of _tds__SendAuxiliaryCommandResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SendAuxiliaryCommandResponse::soap_del() deep deletes _tds__SendAuxiliaryCommandResponse data members, use only after _tds__SendAuxiliaryCommandResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SendAuxiliaryCommandResponse::soap_type() returns SOAP_TYPE__tds__SendAuxiliaryCommandResponse or derived type identifier
class _tds__SendAuxiliaryCommandResponse
{ public:
/// Element "AuxiliaryCommandResponse" of type "http://www.onvif.org/ver10/schema":AuxiliaryData.
    tt__AuxiliaryData                    AuxiliaryCommandResponse       0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Capabilities is a complexType.
///
/// @note class _tds__GetDot11Capabilities operations:
/// - _tds__GetDot11Capabilities* soap_new__tds__GetDot11Capabilities(soap*) allocate and default initialize
/// - _tds__GetDot11Capabilities* soap_new__tds__GetDot11Capabilities(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot11Capabilities* soap_new_req__tds__GetDot11Capabilities(soap*, ...) allocate, set required members
/// - _tds__GetDot11Capabilities* soap_new_set__tds__GetDot11Capabilities(soap*, ...) allocate, set all public members
/// - _tds__GetDot11Capabilities::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot11Capabilities(soap*, _tds__GetDot11Capabilities*) deserialize from a stream
/// - int soap_write__tds__GetDot11Capabilities(soap*, _tds__GetDot11Capabilities*) serialize to a stream
/// - _tds__GetDot11Capabilities* _tds__GetDot11Capabilities::soap_dup(soap*) returns deep copy of _tds__GetDot11Capabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot11Capabilities::soap_del() deep deletes _tds__GetDot11Capabilities data members, use only after _tds__GetDot11Capabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot11Capabilities::soap_type() returns SOAP_TYPE__tds__GetDot11Capabilities or derived type identifier
class _tds__GetDot11Capabilities
{ public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11CapabilitiesResponse is a complexType.
///
/// @note class _tds__GetDot11CapabilitiesResponse operations:
/// - _tds__GetDot11CapabilitiesResponse* soap_new__tds__GetDot11CapabilitiesResponse(soap*) allocate and default initialize
/// - _tds__GetDot11CapabilitiesResponse* soap_new__tds__GetDot11CapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot11CapabilitiesResponse* soap_new_req__tds__GetDot11CapabilitiesResponse(soap*, ...) allocate, set required members
/// - _tds__GetDot11CapabilitiesResponse* soap_new_set__tds__GetDot11CapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDot11CapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot11CapabilitiesResponse(soap*, _tds__GetDot11CapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot11CapabilitiesResponse(soap*, _tds__GetDot11CapabilitiesResponse*) serialize to a stream
/// - _tds__GetDot11CapabilitiesResponse* _tds__GetDot11CapabilitiesResponse::soap_dup(soap*) returns deep copy of _tds__GetDot11CapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot11CapabilitiesResponse::soap_del() deep deletes _tds__GetDot11CapabilitiesResponse data members, use only after _tds__GetDot11CapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot11CapabilitiesResponse::soap_type() returns SOAP_TYPE__tds__GetDot11CapabilitiesResponse or derived type identifier
class _tds__GetDot11CapabilitiesResponse
{ public:
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Dot11Capabilities.
    tt__Dot11Capabilities*               Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11Status
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11Status is a complexType.
///
/// @note class _tds__GetDot11Status operations:
/// - _tds__GetDot11Status* soap_new__tds__GetDot11Status(soap*) allocate and default initialize
/// - _tds__GetDot11Status* soap_new__tds__GetDot11Status(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot11Status* soap_new_req__tds__GetDot11Status(soap*, ...) allocate, set required members
/// - _tds__GetDot11Status* soap_new_set__tds__GetDot11Status(soap*, ...) allocate, set all public members
/// - _tds__GetDot11Status::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot11Status(soap*, _tds__GetDot11Status*) deserialize from a stream
/// - int soap_write__tds__GetDot11Status(soap*, _tds__GetDot11Status*) serialize to a stream
/// - _tds__GetDot11Status* _tds__GetDot11Status::soap_dup(soap*) returns deep copy of _tds__GetDot11Status, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot11Status::soap_del() deep deletes _tds__GetDot11Status data members, use only after _tds__GetDot11Status::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot11Status::soap_type() returns SOAP_TYPE__tds__GetDot11Status or derived type identifier
class _tds__GetDot11Status
{ public:
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot11StatusResponse is a complexType.
///
/// @note class _tds__GetDot11StatusResponse operations:
/// - _tds__GetDot11StatusResponse* soap_new__tds__GetDot11StatusResponse(soap*) allocate and default initialize
/// - _tds__GetDot11StatusResponse* soap_new__tds__GetDot11StatusResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot11StatusResponse* soap_new_req__tds__GetDot11StatusResponse(soap*, ...) allocate, set required members
/// - _tds__GetDot11StatusResponse* soap_new_set__tds__GetDot11StatusResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDot11StatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot11StatusResponse(soap*, _tds__GetDot11StatusResponse*) deserialize from a stream
/// - int soap_write__tds__GetDot11StatusResponse(soap*, _tds__GetDot11StatusResponse*) serialize to a stream
/// - _tds__GetDot11StatusResponse* _tds__GetDot11StatusResponse::soap_dup(soap*) returns deep copy of _tds__GetDot11StatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDot11StatusResponse::soap_del() deep deletes _tds__GetDot11StatusResponse data members, use only after _tds__GetDot11StatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDot11StatusResponse::soap_type() returns SOAP_TYPE__tds__GetDot11StatusResponse or derived type identifier
class _tds__GetDot11StatusResponse
{ public:
/// Element "Status" of type "http://www.onvif.org/ver10/schema":Dot11Status.
    tt__Dot11Status*                     Status                         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11Networks is a complexType.
///
/// @note class _tds__ScanAvailableDot11Networks operations:
/// - _tds__ScanAvailableDot11Networks* soap_new__tds__ScanAvailableDot11Networks(soap*) allocate and default initialize
/// - _tds__ScanAvailableDot11Networks* soap_new__tds__ScanAvailableDot11Networks(soap*, int num) allocate and default initialize an array
/// - _tds__ScanAvailableDot11Networks* soap_new_req__tds__ScanAvailableDot11Networks(soap*, ...) allocate, set required members
/// - _tds__ScanAvailableDot11Networks* soap_new_set__tds__ScanAvailableDot11Networks(soap*, ...) allocate, set all public members
/// - _tds__ScanAvailableDot11Networks::soap_default(soap*) default initialize members
/// - int soap_read__tds__ScanAvailableDot11Networks(soap*, _tds__ScanAvailableDot11Networks*) deserialize from a stream
/// - int soap_write__tds__ScanAvailableDot11Networks(soap*, _tds__ScanAvailableDot11Networks*) serialize to a stream
/// - _tds__ScanAvailableDot11Networks* _tds__ScanAvailableDot11Networks::soap_dup(soap*) returns deep copy of _tds__ScanAvailableDot11Networks, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__ScanAvailableDot11Networks::soap_del() deep deletes _tds__ScanAvailableDot11Networks data members, use only after _tds__ScanAvailableDot11Networks::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__ScanAvailableDot11Networks::soap_type() returns SOAP_TYPE__tds__ScanAvailableDot11Networks or derived type identifier
class _tds__ScanAvailableDot11Networks
{ public:
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":ScanAvailableDot11NetworksResponse is a complexType.
///
/// @note class _tds__ScanAvailableDot11NetworksResponse operations:
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new__tds__ScanAvailableDot11NetworksResponse(soap*) allocate and default initialize
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new__tds__ScanAvailableDot11NetworksResponse(soap*, int num) allocate and default initialize an array
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new_req__tds__ScanAvailableDot11NetworksResponse(soap*, ...) allocate, set required members
/// - _tds__ScanAvailableDot11NetworksResponse* soap_new_set__tds__ScanAvailableDot11NetworksResponse(soap*, ...) allocate, set all public members
/// - _tds__ScanAvailableDot11NetworksResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__ScanAvailableDot11NetworksResponse(soap*, _tds__ScanAvailableDot11NetworksResponse*) deserialize from a stream
/// - int soap_write__tds__ScanAvailableDot11NetworksResponse(soap*, _tds__ScanAvailableDot11NetworksResponse*) serialize to a stream
/// - _tds__ScanAvailableDot11NetworksResponse* _tds__ScanAvailableDot11NetworksResponse::soap_dup(soap*) returns deep copy of _tds__ScanAvailableDot11NetworksResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__ScanAvailableDot11NetworksResponse::soap_del() deep deletes _tds__ScanAvailableDot11NetworksResponse data members, use only after _tds__ScanAvailableDot11NetworksResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__ScanAvailableDot11NetworksResponse::soap_type() returns SOAP_TYPE__tds__ScanAvailableDot11NetworksResponse or derived type identifier
class _tds__ScanAvailableDot11NetworksResponse
{ public:
/// Size of array of tt__Dot11AvailableNetworks* is 0..unbounded.
  $ int                                  __sizeNetworks                 0;
/// Pointer to array tt__Dot11AvailableNetworks* of size 0..unbounded.
    tt__Dot11AvailableNetworks*         *Networks                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUris
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUris is a complexType.
///
/// @note class _tds__GetSystemUris operations:
/// - _tds__GetSystemUris* soap_new__tds__GetSystemUris(soap*) allocate and default initialize
/// - _tds__GetSystemUris* soap_new__tds__GetSystemUris(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemUris* soap_new_req__tds__GetSystemUris(soap*, ...) allocate, set required members
/// - _tds__GetSystemUris* soap_new_set__tds__GetSystemUris(soap*, ...) allocate, set all public members
/// - _tds__GetSystemUris::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemUris(soap*, _tds__GetSystemUris*) deserialize from a stream
/// - int soap_write__tds__GetSystemUris(soap*, _tds__GetSystemUris*) serialize to a stream
/// - _tds__GetSystemUris* _tds__GetSystemUris::soap_dup(soap*) returns deep copy of _tds__GetSystemUris, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemUris::soap_del() deep deletes _tds__GetSystemUris data members, use only after _tds__GetSystemUris::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemUris::soap_type() returns SOAP_TYPE__tds__GetSystemUris or derived type identifier
class _tds__GetSystemUris
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemUrisResponse is a complexType.
///
/// @note class _tds__GetSystemUrisResponse operations:
/// - _tds__GetSystemUrisResponse* soap_new__tds__GetSystemUrisResponse(soap*) allocate and default initialize
/// - _tds__GetSystemUrisResponse* soap_new__tds__GetSystemUrisResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemUrisResponse* soap_new_req__tds__GetSystemUrisResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemUrisResponse* soap_new_set__tds__GetSystemUrisResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemUrisResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemUrisResponse(soap*, _tds__GetSystemUrisResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemUrisResponse(soap*, _tds__GetSystemUrisResponse*) serialize to a stream
/// - _tds__GetSystemUrisResponse* _tds__GetSystemUrisResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemUrisResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemUrisResponse::soap_del() deep deletes _tds__GetSystemUrisResponse data members, use only after _tds__GetSystemUrisResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemUrisResponse::soap_type() returns SOAP_TYPE__tds__GetSystemUrisResponse or derived type identifier
class _tds__GetSystemUrisResponse
{ public:
/// Element "SystemLogUris" of type "http://www.onvif.org/ver10/schema":SystemLogUriList.
    tt__SystemLogUriList*                SystemLogUris                  0;	///< Optional element.
/// Element "SupportInfoUri" of type xs:anyURI.
    xsd__anyURI                          SupportInfoUri                 0;	///< Optional element.
/// Element "SystemBackupUri" of type xs:anyURI.
    xsd__anyURI                          SystemBackupUri                0;	///< Optional element.
/// @note class _tds__GetSystemUrisResponse_Extension operations:
/// - _tds__GetSystemUrisResponse_Extension* soap_new__tds__GetSystemUrisResponse_Extension(soap*) allocate and default initialize
/// - _tds__GetSystemUrisResponse_Extension* soap_new__tds__GetSystemUrisResponse_Extension(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemUrisResponse_Extension* soap_new_req__tds__GetSystemUrisResponse_Extension(soap*, ...) allocate, set required members
/// - _tds__GetSystemUrisResponse_Extension* soap_new_set__tds__GetSystemUrisResponse_Extension(soap*, ...) allocate, set all public members
/// - _tds__GetSystemUrisResponse_Extension::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemUrisResponse_Extension(soap*, _tds__GetSystemUrisResponse_Extension*) deserialize from a stream
/// - int soap_write__tds__GetSystemUrisResponse_Extension(soap*, _tds__GetSystemUrisResponse_Extension*) serialize to a stream
/// - _tds__GetSystemUrisResponse_Extension* _tds__GetSystemUrisResponse_Extension::soap_dup(soap*) returns deep copy of _tds__GetSystemUrisResponse_Extension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemUrisResponse_Extension::soap_del() deep deletes _tds__GetSystemUrisResponse_Extension data members, use only after _tds__GetSystemUrisResponse_Extension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemUrisResponse_Extension::soap_type() returns SOAP_TYPE__tds__GetSystemUrisResponse_Extension or derived type identifier
    class _tds__GetSystemUrisResponse_Extension
    { public:
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
    }                                   *Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgrade is a complexType.
///
/// @note class _tds__StartFirmwareUpgrade operations:
/// - _tds__StartFirmwareUpgrade* soap_new__tds__StartFirmwareUpgrade(soap*) allocate and default initialize
/// - _tds__StartFirmwareUpgrade* soap_new__tds__StartFirmwareUpgrade(soap*, int num) allocate and default initialize an array
/// - _tds__StartFirmwareUpgrade* soap_new_req__tds__StartFirmwareUpgrade(soap*, ...) allocate, set required members
/// - _tds__StartFirmwareUpgrade* soap_new_set__tds__StartFirmwareUpgrade(soap*, ...) allocate, set all public members
/// - _tds__StartFirmwareUpgrade::soap_default(soap*) default initialize members
/// - int soap_read__tds__StartFirmwareUpgrade(soap*, _tds__StartFirmwareUpgrade*) deserialize from a stream
/// - int soap_write__tds__StartFirmwareUpgrade(soap*, _tds__StartFirmwareUpgrade*) serialize to a stream
/// - _tds__StartFirmwareUpgrade* _tds__StartFirmwareUpgrade::soap_dup(soap*) returns deep copy of _tds__StartFirmwareUpgrade, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StartFirmwareUpgrade::soap_del() deep deletes _tds__StartFirmwareUpgrade data members, use only after _tds__StartFirmwareUpgrade::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StartFirmwareUpgrade::soap_type() returns SOAP_TYPE__tds__StartFirmwareUpgrade or derived type identifier
class _tds__StartFirmwareUpgrade
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartFirmwareUpgradeResponse is a complexType.
///
/// @note class _tds__StartFirmwareUpgradeResponse operations:
/// - _tds__StartFirmwareUpgradeResponse* soap_new__tds__StartFirmwareUpgradeResponse(soap*) allocate and default initialize
/// - _tds__StartFirmwareUpgradeResponse* soap_new__tds__StartFirmwareUpgradeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__StartFirmwareUpgradeResponse* soap_new_req__tds__StartFirmwareUpgradeResponse(soap*, ...) allocate, set required members
/// - _tds__StartFirmwareUpgradeResponse* soap_new_set__tds__StartFirmwareUpgradeResponse(soap*, ...) allocate, set all public members
/// - _tds__StartFirmwareUpgradeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__StartFirmwareUpgradeResponse(soap*, _tds__StartFirmwareUpgradeResponse*) deserialize from a stream
/// - int soap_write__tds__StartFirmwareUpgradeResponse(soap*, _tds__StartFirmwareUpgradeResponse*) serialize to a stream
/// - _tds__StartFirmwareUpgradeResponse* _tds__StartFirmwareUpgradeResponse::soap_dup(soap*) returns deep copy of _tds__StartFirmwareUpgradeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StartFirmwareUpgradeResponse::soap_del() deep deletes _tds__StartFirmwareUpgradeResponse data members, use only after _tds__StartFirmwareUpgradeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StartFirmwareUpgradeResponse::soap_type() returns SOAP_TYPE__tds__StartFirmwareUpgradeResponse or derived type identifier
class _tds__StartFirmwareUpgradeResponse
{ public:
/// Element "UploadUri" of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "UploadDelay" of type xs:duration.
    xsd__duration                        UploadDelay                    1;	///< Required element.
/// Element "ExpectedDownTime" of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestore is a complexType.
///
/// @note class _tds__StartSystemRestore operations:
/// - _tds__StartSystemRestore* soap_new__tds__StartSystemRestore(soap*) allocate and default initialize
/// - _tds__StartSystemRestore* soap_new__tds__StartSystemRestore(soap*, int num) allocate and default initialize an array
/// - _tds__StartSystemRestore* soap_new_req__tds__StartSystemRestore(soap*, ...) allocate, set required members
/// - _tds__StartSystemRestore* soap_new_set__tds__StartSystemRestore(soap*, ...) allocate, set all public members
/// - _tds__StartSystemRestore::soap_default(soap*) default initialize members
/// - int soap_read__tds__StartSystemRestore(soap*, _tds__StartSystemRestore*) deserialize from a stream
/// - int soap_write__tds__StartSystemRestore(soap*, _tds__StartSystemRestore*) serialize to a stream
/// - _tds__StartSystemRestore* _tds__StartSystemRestore::soap_dup(soap*) returns deep copy of _tds__StartSystemRestore, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StartSystemRestore::soap_del() deep deletes _tds__StartSystemRestore data members, use only after _tds__StartSystemRestore::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StartSystemRestore::soap_type() returns SOAP_TYPE__tds__StartSystemRestore or derived type identifier
class _tds__StartSystemRestore
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":StartSystemRestoreResponse is a complexType.
///
/// @note class _tds__StartSystemRestoreResponse operations:
/// - _tds__StartSystemRestoreResponse* soap_new__tds__StartSystemRestoreResponse(soap*) allocate and default initialize
/// - _tds__StartSystemRestoreResponse* soap_new__tds__StartSystemRestoreResponse(soap*, int num) allocate and default initialize an array
/// - _tds__StartSystemRestoreResponse* soap_new_req__tds__StartSystemRestoreResponse(soap*, ...) allocate, set required members
/// - _tds__StartSystemRestoreResponse* soap_new_set__tds__StartSystemRestoreResponse(soap*, ...) allocate, set all public members
/// - _tds__StartSystemRestoreResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__StartSystemRestoreResponse(soap*, _tds__StartSystemRestoreResponse*) deserialize from a stream
/// - int soap_write__tds__StartSystemRestoreResponse(soap*, _tds__StartSystemRestoreResponse*) serialize to a stream
/// - _tds__StartSystemRestoreResponse* _tds__StartSystemRestoreResponse::soap_dup(soap*) returns deep copy of _tds__StartSystemRestoreResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__StartSystemRestoreResponse::soap_del() deep deletes _tds__StartSystemRestoreResponse data members, use only after _tds__StartSystemRestoreResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__StartSystemRestoreResponse::soap_type() returns SOAP_TYPE__tds__StartSystemRestoreResponse or derived type identifier
class _tds__StartSystemRestoreResponse
{ public:
/// Element "UploadUri" of type xs:anyURI.
    xsd__anyURI                          UploadUri                      1;	///< Required element.
/// Element "ExpectedDownTime" of type xs:duration.
    xsd__duration                        ExpectedDownTime               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurations is a complexType.
///
/// @note class _tds__GetStorageConfigurations operations:
/// - _tds__GetStorageConfigurations* soap_new__tds__GetStorageConfigurations(soap*) allocate and default initialize
/// - _tds__GetStorageConfigurations* soap_new__tds__GetStorageConfigurations(soap*, int num) allocate and default initialize an array
/// - _tds__GetStorageConfigurations* soap_new_req__tds__GetStorageConfigurations(soap*, ...) allocate, set required members
/// - _tds__GetStorageConfigurations* soap_new_set__tds__GetStorageConfigurations(soap*, ...) allocate, set all public members
/// - _tds__GetStorageConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetStorageConfigurations(soap*, _tds__GetStorageConfigurations*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfigurations(soap*, _tds__GetStorageConfigurations*) serialize to a stream
/// - _tds__GetStorageConfigurations* _tds__GetStorageConfigurations::soap_dup(soap*) returns deep copy of _tds__GetStorageConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetStorageConfigurations::soap_del() deep deletes _tds__GetStorageConfigurations data members, use only after _tds__GetStorageConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetStorageConfigurations::soap_type() returns SOAP_TYPE__tds__GetStorageConfigurations or derived type identifier
class _tds__GetStorageConfigurations
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationsResponse is a complexType.
///
/// @note class _tds__GetStorageConfigurationsResponse operations:
/// - _tds__GetStorageConfigurationsResponse* soap_new__tds__GetStorageConfigurationsResponse(soap*) allocate and default initialize
/// - _tds__GetStorageConfigurationsResponse* soap_new__tds__GetStorageConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetStorageConfigurationsResponse* soap_new_req__tds__GetStorageConfigurationsResponse(soap*, ...) allocate, set required members
/// - _tds__GetStorageConfigurationsResponse* soap_new_set__tds__GetStorageConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetStorageConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetStorageConfigurationsResponse(soap*, _tds__GetStorageConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfigurationsResponse(soap*, _tds__GetStorageConfigurationsResponse*) serialize to a stream
/// - _tds__GetStorageConfigurationsResponse* _tds__GetStorageConfigurationsResponse::soap_dup(soap*) returns deep copy of _tds__GetStorageConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetStorageConfigurationsResponse::soap_del() deep deletes _tds__GetStorageConfigurationsResponse data members, use only after _tds__GetStorageConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetStorageConfigurationsResponse::soap_type() returns SOAP_TYPE__tds__GetStorageConfigurationsResponse or derived type identifier
class _tds__GetStorageConfigurationsResponse
{ public:
/// Size of array of tds__StorageConfiguration* is 0..unbounded.
  $ int                                  __sizeStorageConfigurations    0;
/// Pointer to array tds__StorageConfiguration* of size 0..unbounded.
    tds__StorageConfiguration*          *StorageConfigurations          0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfiguration is a complexType.
///
/// @note class _tds__CreateStorageConfiguration operations:
/// - _tds__CreateStorageConfiguration* soap_new__tds__CreateStorageConfiguration(soap*) allocate and default initialize
/// - _tds__CreateStorageConfiguration* soap_new__tds__CreateStorageConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__CreateStorageConfiguration* soap_new_req__tds__CreateStorageConfiguration(soap*, ...) allocate, set required members
/// - _tds__CreateStorageConfiguration* soap_new_set__tds__CreateStorageConfiguration(soap*, ...) allocate, set all public members
/// - _tds__CreateStorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateStorageConfiguration(soap*, _tds__CreateStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__CreateStorageConfiguration(soap*, _tds__CreateStorageConfiguration*) serialize to a stream
/// - _tds__CreateStorageConfiguration* _tds__CreateStorageConfiguration::soap_dup(soap*) returns deep copy of _tds__CreateStorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateStorageConfiguration::soap_del() deep deletes _tds__CreateStorageConfiguration data members, use only after _tds__CreateStorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateStorageConfiguration::soap_type() returns SOAP_TYPE__tds__CreateStorageConfiguration or derived type identifier
class _tds__CreateStorageConfiguration
{ public:
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    tds__StorageConfigurationData*       StorageConfiguration           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateStorageConfigurationResponse is a complexType.
///
/// @note class _tds__CreateStorageConfigurationResponse operations:
/// - _tds__CreateStorageConfigurationResponse* soap_new__tds__CreateStorageConfigurationResponse(soap*) allocate and default initialize
/// - _tds__CreateStorageConfigurationResponse* soap_new__tds__CreateStorageConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__CreateStorageConfigurationResponse* soap_new_req__tds__CreateStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__CreateStorageConfigurationResponse* soap_new_set__tds__CreateStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__CreateStorageConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateStorageConfigurationResponse(soap*, _tds__CreateStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__CreateStorageConfigurationResponse(soap*, _tds__CreateStorageConfigurationResponse*) serialize to a stream
/// - _tds__CreateStorageConfigurationResponse* _tds__CreateStorageConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__CreateStorageConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateStorageConfigurationResponse::soap_del() deep deletes _tds__CreateStorageConfigurationResponse data members, use only after _tds__CreateStorageConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateStorageConfigurationResponse::soap_type() returns SOAP_TYPE__tds__CreateStorageConfigurationResponse or derived type identifier
class _tds__CreateStorageConfigurationResponse
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfiguration is a complexType.
///
/// @note class _tds__GetStorageConfiguration operations:
/// - _tds__GetStorageConfiguration* soap_new__tds__GetStorageConfiguration(soap*) allocate and default initialize
/// - _tds__GetStorageConfiguration* soap_new__tds__GetStorageConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__GetStorageConfiguration* soap_new_req__tds__GetStorageConfiguration(soap*, ...) allocate, set required members
/// - _tds__GetStorageConfiguration* soap_new_set__tds__GetStorageConfiguration(soap*, ...) allocate, set all public members
/// - _tds__GetStorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetStorageConfiguration(soap*, _tds__GetStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfiguration(soap*, _tds__GetStorageConfiguration*) serialize to a stream
/// - _tds__GetStorageConfiguration* _tds__GetStorageConfiguration::soap_dup(soap*) returns deep copy of _tds__GetStorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetStorageConfiguration::soap_del() deep deletes _tds__GetStorageConfiguration data members, use only after _tds__GetStorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetStorageConfiguration::soap_type() returns SOAP_TYPE__tds__GetStorageConfiguration or derived type identifier
class _tds__GetStorageConfiguration
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetStorageConfigurationResponse is a complexType.
///
/// @note class _tds__GetStorageConfigurationResponse operations:
/// - _tds__GetStorageConfigurationResponse* soap_new__tds__GetStorageConfigurationResponse(soap*) allocate and default initialize
/// - _tds__GetStorageConfigurationResponse* soap_new__tds__GetStorageConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetStorageConfigurationResponse* soap_new_req__tds__GetStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__GetStorageConfigurationResponse* soap_new_set__tds__GetStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetStorageConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetStorageConfigurationResponse(soap*, _tds__GetStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetStorageConfigurationResponse(soap*, _tds__GetStorageConfigurationResponse*) serialize to a stream
/// - _tds__GetStorageConfigurationResponse* _tds__GetStorageConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__GetStorageConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetStorageConfigurationResponse::soap_del() deep deletes _tds__GetStorageConfigurationResponse data members, use only after _tds__GetStorageConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetStorageConfigurationResponse::soap_type() returns SOAP_TYPE__tds__GetStorageConfigurationResponse or derived type identifier
class _tds__GetStorageConfigurationResponse
{ public:
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    tds__StorageConfiguration*           StorageConfiguration           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfiguration is a complexType.
///
/// @note class _tds__SetStorageConfiguration operations:
/// - _tds__SetStorageConfiguration* soap_new__tds__SetStorageConfiguration(soap*) allocate and default initialize
/// - _tds__SetStorageConfiguration* soap_new__tds__SetStorageConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__SetStorageConfiguration* soap_new_req__tds__SetStorageConfiguration(soap*, ...) allocate, set required members
/// - _tds__SetStorageConfiguration* soap_new_set__tds__SetStorageConfiguration(soap*, ...) allocate, set all public members
/// - _tds__SetStorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetStorageConfiguration(soap*, _tds__SetStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetStorageConfiguration(soap*, _tds__SetStorageConfiguration*) serialize to a stream
/// - _tds__SetStorageConfiguration* _tds__SetStorageConfiguration::soap_dup(soap*) returns deep copy of _tds__SetStorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetStorageConfiguration::soap_del() deep deletes _tds__SetStorageConfiguration data members, use only after _tds__SetStorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetStorageConfiguration::soap_type() returns SOAP_TYPE__tds__SetStorageConfiguration or derived type identifier
class _tds__SetStorageConfiguration
{ public:
/// Element "StorageConfiguration" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration.
    tds__StorageConfiguration*           StorageConfiguration           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetStorageConfigurationResponse is a complexType.
///
/// @note class _tds__SetStorageConfigurationResponse operations:
/// - _tds__SetStorageConfigurationResponse* soap_new__tds__SetStorageConfigurationResponse(soap*) allocate and default initialize
/// - _tds__SetStorageConfigurationResponse* soap_new__tds__SetStorageConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetStorageConfigurationResponse* soap_new_req__tds__SetStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__SetStorageConfigurationResponse* soap_new_set__tds__SetStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetStorageConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetStorageConfigurationResponse(soap*, _tds__SetStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetStorageConfigurationResponse(soap*, _tds__SetStorageConfigurationResponse*) serialize to a stream
/// - _tds__SetStorageConfigurationResponse* _tds__SetStorageConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__SetStorageConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetStorageConfigurationResponse::soap_del() deep deletes _tds__SetStorageConfigurationResponse data members, use only after _tds__SetStorageConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetStorageConfigurationResponse::soap_type() returns SOAP_TYPE__tds__SetStorageConfigurationResponse or derived type identifier
class _tds__SetStorageConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfiguration is a complexType.
///
/// @note class _tds__DeleteStorageConfiguration operations:
/// - _tds__DeleteStorageConfiguration* soap_new__tds__DeleteStorageConfiguration(soap*) allocate and default initialize
/// - _tds__DeleteStorageConfiguration* soap_new__tds__DeleteStorageConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteStorageConfiguration* soap_new_req__tds__DeleteStorageConfiguration(soap*, ...) allocate, set required members
/// - _tds__DeleteStorageConfiguration* soap_new_set__tds__DeleteStorageConfiguration(soap*, ...) allocate, set all public members
/// - _tds__DeleteStorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteStorageConfiguration(soap*, _tds__DeleteStorageConfiguration*) deserialize from a stream
/// - int soap_write__tds__DeleteStorageConfiguration(soap*, _tds__DeleteStorageConfiguration*) serialize to a stream
/// - _tds__DeleteStorageConfiguration* _tds__DeleteStorageConfiguration::soap_dup(soap*) returns deep copy of _tds__DeleteStorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteStorageConfiguration::soap_del() deep deletes _tds__DeleteStorageConfiguration data members, use only after _tds__DeleteStorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteStorageConfiguration::soap_type() returns SOAP_TYPE__tds__DeleteStorageConfiguration or derived type identifier
class _tds__DeleteStorageConfiguration
{ public:
/// Element "Token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   Token                          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteStorageConfigurationResponse is a complexType.
///
/// @note class _tds__DeleteStorageConfigurationResponse operations:
/// - _tds__DeleteStorageConfigurationResponse* soap_new__tds__DeleteStorageConfigurationResponse(soap*) allocate and default initialize
/// - _tds__DeleteStorageConfigurationResponse* soap_new__tds__DeleteStorageConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteStorageConfigurationResponse* soap_new_req__tds__DeleteStorageConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteStorageConfigurationResponse* soap_new_set__tds__DeleteStorageConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteStorageConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteStorageConfigurationResponse(soap*, _tds__DeleteStorageConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteStorageConfigurationResponse(soap*, _tds__DeleteStorageConfigurationResponse*) serialize to a stream
/// - _tds__DeleteStorageConfigurationResponse* _tds__DeleteStorageConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__DeleteStorageConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteStorageConfigurationResponse::soap_del() deep deletes _tds__DeleteStorageConfigurationResponse data members, use only after _tds__DeleteStorageConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteStorageConfigurationResponse::soap_type() returns SOAP_TYPE__tds__DeleteStorageConfigurationResponse or derived type identifier
class _tds__DeleteStorageConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetGeoLocation is a complexType.
///
/// @note class _tds__GetGeoLocation operations:
/// - _tds__GetGeoLocation* soap_new__tds__GetGeoLocation(soap*) allocate and default initialize
/// - _tds__GetGeoLocation* soap_new__tds__GetGeoLocation(soap*, int num) allocate and default initialize an array
/// - _tds__GetGeoLocation* soap_new_req__tds__GetGeoLocation(soap*, ...) allocate, set required members
/// - _tds__GetGeoLocation* soap_new_set__tds__GetGeoLocation(soap*, ...) allocate, set all public members
/// - _tds__GetGeoLocation::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetGeoLocation(soap*, _tds__GetGeoLocation*) deserialize from a stream
/// - int soap_write__tds__GetGeoLocation(soap*, _tds__GetGeoLocation*) serialize to a stream
/// - _tds__GetGeoLocation* _tds__GetGeoLocation::soap_dup(soap*) returns deep copy of _tds__GetGeoLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetGeoLocation::soap_del() deep deletes _tds__GetGeoLocation data members, use only after _tds__GetGeoLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetGeoLocation::soap_type() returns SOAP_TYPE__tds__GetGeoLocation or derived type identifier
class _tds__GetGeoLocation
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetGeoLocationResponse is a complexType.
///
/// @note class _tds__GetGeoLocationResponse operations:
/// - _tds__GetGeoLocationResponse* soap_new__tds__GetGeoLocationResponse(soap*) allocate and default initialize
/// - _tds__GetGeoLocationResponse* soap_new__tds__GetGeoLocationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetGeoLocationResponse* soap_new_req__tds__GetGeoLocationResponse(soap*, ...) allocate, set required members
/// - _tds__GetGeoLocationResponse* soap_new_set__tds__GetGeoLocationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetGeoLocationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetGeoLocationResponse(soap*, _tds__GetGeoLocationResponse*) deserialize from a stream
/// - int soap_write__tds__GetGeoLocationResponse(soap*, _tds__GetGeoLocationResponse*) serialize to a stream
/// - _tds__GetGeoLocationResponse* _tds__GetGeoLocationResponse::soap_dup(soap*) returns deep copy of _tds__GetGeoLocationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetGeoLocationResponse::soap_del() deep deletes _tds__GetGeoLocationResponse data members, use only after _tds__GetGeoLocationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetGeoLocationResponse::soap_type() returns SOAP_TYPE__tds__GetGeoLocationResponse or derived type identifier
class _tds__GetGeoLocationResponse
{ public:
/// Size of array of tt__LocationEntity* is 0..unbounded.
  $ int                                  __sizeLocation                 0;
/// Pointer to array tt__LocationEntity* of size 0..unbounded.
    tt__LocationEntity*                 *Location                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetGeoLocation is a complexType.
///
/// @note class _tds__SetGeoLocation operations:
/// - _tds__SetGeoLocation* soap_new__tds__SetGeoLocation(soap*) allocate and default initialize
/// - _tds__SetGeoLocation* soap_new__tds__SetGeoLocation(soap*, int num) allocate and default initialize an array
/// - _tds__SetGeoLocation* soap_new_req__tds__SetGeoLocation(soap*, ...) allocate, set required members
/// - _tds__SetGeoLocation* soap_new_set__tds__SetGeoLocation(soap*, ...) allocate, set all public members
/// - _tds__SetGeoLocation::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetGeoLocation(soap*, _tds__SetGeoLocation*) deserialize from a stream
/// - int soap_write__tds__SetGeoLocation(soap*, _tds__SetGeoLocation*) serialize to a stream
/// - _tds__SetGeoLocation* _tds__SetGeoLocation::soap_dup(soap*) returns deep copy of _tds__SetGeoLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetGeoLocation::soap_del() deep deletes _tds__SetGeoLocation data members, use only after _tds__SetGeoLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetGeoLocation::soap_type() returns SOAP_TYPE__tds__SetGeoLocation or derived type identifier
class _tds__SetGeoLocation
{ public:
/// Size of array of tt__LocationEntity* is 1..unbounded.
  $ int                                  __sizeLocation                 1;
/// Pointer to array tt__LocationEntity* of size 1..unbounded.
    tt__LocationEntity*                 *Location                       1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetGeoLocationResponse is a complexType.
///
/// @note class _tds__SetGeoLocationResponse operations:
/// - _tds__SetGeoLocationResponse* soap_new__tds__SetGeoLocationResponse(soap*) allocate and default initialize
/// - _tds__SetGeoLocationResponse* soap_new__tds__SetGeoLocationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetGeoLocationResponse* soap_new_req__tds__SetGeoLocationResponse(soap*, ...) allocate, set required members
/// - _tds__SetGeoLocationResponse* soap_new_set__tds__SetGeoLocationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetGeoLocationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetGeoLocationResponse(soap*, _tds__SetGeoLocationResponse*) deserialize from a stream
/// - int soap_write__tds__SetGeoLocationResponse(soap*, _tds__SetGeoLocationResponse*) serialize to a stream
/// - _tds__SetGeoLocationResponse* _tds__SetGeoLocationResponse::soap_dup(soap*) returns deep copy of _tds__SetGeoLocationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetGeoLocationResponse::soap_del() deep deletes _tds__SetGeoLocationResponse data members, use only after _tds__SetGeoLocationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetGeoLocationResponse::soap_type() returns SOAP_TYPE__tds__SetGeoLocationResponse or derived type identifier
class _tds__SetGeoLocationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocation is a complexType.
///
/// @note class _tds__DeleteGeoLocation operations:
/// - _tds__DeleteGeoLocation* soap_new__tds__DeleteGeoLocation(soap*) allocate and default initialize
/// - _tds__DeleteGeoLocation* soap_new__tds__DeleteGeoLocation(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteGeoLocation* soap_new_req__tds__DeleteGeoLocation(soap*, ...) allocate, set required members
/// - _tds__DeleteGeoLocation* soap_new_set__tds__DeleteGeoLocation(soap*, ...) allocate, set all public members
/// - _tds__DeleteGeoLocation::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteGeoLocation(soap*, _tds__DeleteGeoLocation*) deserialize from a stream
/// - int soap_write__tds__DeleteGeoLocation(soap*, _tds__DeleteGeoLocation*) serialize to a stream
/// - _tds__DeleteGeoLocation* _tds__DeleteGeoLocation::soap_dup(soap*) returns deep copy of _tds__DeleteGeoLocation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteGeoLocation::soap_del() deep deletes _tds__DeleteGeoLocation data members, use only after _tds__DeleteGeoLocation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteGeoLocation::soap_type() returns SOAP_TYPE__tds__DeleteGeoLocation or derived type identifier
class _tds__DeleteGeoLocation
{ public:
/// Size of array of tt__LocationEntity* is 1..unbounded.
  $ int                                  __sizeLocation                 1;
/// Pointer to array tt__LocationEntity* of size 1..unbounded.
    tt__LocationEntity*                 *Location                       1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteGeoLocationResponse is a complexType.
///
/// @note class _tds__DeleteGeoLocationResponse operations:
/// - _tds__DeleteGeoLocationResponse* soap_new__tds__DeleteGeoLocationResponse(soap*) allocate and default initialize
/// - _tds__DeleteGeoLocationResponse* soap_new__tds__DeleteGeoLocationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteGeoLocationResponse* soap_new_req__tds__DeleteGeoLocationResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteGeoLocationResponse* soap_new_set__tds__DeleteGeoLocationResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteGeoLocationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteGeoLocationResponse(soap*, _tds__DeleteGeoLocationResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteGeoLocationResponse(soap*, _tds__DeleteGeoLocationResponse*) serialize to a stream
/// - _tds__DeleteGeoLocationResponse* _tds__DeleteGeoLocationResponse::soap_dup(soap*) returns deep copy of _tds__DeleteGeoLocationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteGeoLocationResponse::soap_del() deep deletes _tds__DeleteGeoLocationResponse data members, use only after _tds__DeleteGeoLocationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteGeoLocationResponse::soap_type() returns SOAP_TYPE__tds__DeleteGeoLocationResponse or derived type identifier
class _tds__DeleteGeoLocationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://www.onvif.org/ver10/schema                                        *
 *                                                                            *
\******************************************************************************/

/// @brief "http://www.onvif.org/ver10/schema":DeviceEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base class for physical entities like inputs and outputs.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":VideoSource as tt__VideoSource
/// - "http://www.onvif.org/ver10/schema":AudioSource as tt__AudioSource
/// - "http://www.onvif.org/ver10/schema":VideoOutput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioOutput as tt__AudioOutput
/// - "http://www.onvif.org/ver10/schema":NetworkInterface as tt__NetworkInterface
/// - "http://www.onvif.org/ver10/schema":RelayOutput as tt__RelayOutput
/// - "http://www.onvif.org/ver10/schema":DigitalInput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":PTZNode as tt__PTZNode
/// - "http://www.onvif.org/ver10/schema":OSDConfiguration as tt__OSDConfiguration
/// - "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration as tds__StorageConfiguration
///
/// @note class tt__DeviceEntity operations:
/// - tt__DeviceEntity* soap_new_tt__DeviceEntity(soap*) allocate and default initialize
/// - tt__DeviceEntity* soap_new_tt__DeviceEntity(soap*, int num) allocate and default initialize an array
/// - tt__DeviceEntity* soap_new_req_tt__DeviceEntity(soap*, ...) allocate, set required members
/// - tt__DeviceEntity* soap_new_set_tt__DeviceEntity(soap*, ...) allocate, set all public members
/// - tt__DeviceEntity::soap_default(soap*) default initialize members
/// - int soap_read_tt__DeviceEntity(soap*, tt__DeviceEntity*) deserialize from a stream
/// - int soap_write_tt__DeviceEntity(soap*, tt__DeviceEntity*) serialize to a stream
/// - tt__DeviceEntity* tt__DeviceEntity::soap_dup(soap*) returns deep copy of tt__DeviceEntity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DeviceEntity::soap_del() deep deletes tt__DeviceEntity data members, use only after tt__DeviceEntity::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DeviceEntity::soap_type() returns SOAP_TYPE_tt__DeviceEntity or derived type identifier
class tt__DeviceEntity
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangle is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Rectangle defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__IntRectangle operations:
/// - tt__IntRectangle* soap_new_tt__IntRectangle(soap*) allocate and default initialize
/// - tt__IntRectangle* soap_new_tt__IntRectangle(soap*, int num) allocate and default initialize an array
/// - tt__IntRectangle* soap_new_req_tt__IntRectangle(soap*, ...) allocate, set required members
/// - tt__IntRectangle* soap_new_set_tt__IntRectangle(soap*, ...) allocate, set all public members
/// - tt__IntRectangle::soap_default(soap*) default initialize members
/// - int soap_read_tt__IntRectangle(soap*, tt__IntRectangle*) deserialize from a stream
/// - int soap_write_tt__IntRectangle(soap*, tt__IntRectangle*) serialize to a stream
/// - tt__IntRectangle* tt__IntRectangle::soap_dup(soap*) returns deep copy of tt__IntRectangle, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IntRectangle::soap_del() deep deletes tt__IntRectangle data members, use only after tt__IntRectangle::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IntRectangle::soap_type() returns SOAP_TYPE_tt__IntRectangle or derived type identifier
class tt__IntRectangle
{ public:
/// Attribute "x" of type xs:int.
  @ int                                  x                              1;	///< Required attribute.
/// Attribute "y" of type xs:int.
  @ int                                  y                              1;	///< Required attribute.
/// Attribute "width" of type xs:int.
  @ int                                  width                          1;	///< Required attribute.
/// Attribute "height" of type xs:int.
  @ int                                  height                         1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IntRectangleRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of a rectangle. The rectangle itself is defined by lower left corner position and size. Units are pixel.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__IntRectangleRange operations:
/// - tt__IntRectangleRange* soap_new_tt__IntRectangleRange(soap*) allocate and default initialize
/// - tt__IntRectangleRange* soap_new_tt__IntRectangleRange(soap*, int num) allocate and default initialize an array
/// - tt__IntRectangleRange* soap_new_req_tt__IntRectangleRange(soap*, ...) allocate, set required members
/// - tt__IntRectangleRange* soap_new_set_tt__IntRectangleRange(soap*, ...) allocate, set all public members
/// - tt__IntRectangleRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__IntRectangleRange(soap*, tt__IntRectangleRange*) deserialize from a stream
/// - int soap_write_tt__IntRectangleRange(soap*, tt__IntRectangleRange*) serialize to a stream
/// - tt__IntRectangleRange* tt__IntRectangleRange::soap_dup(soap*) returns deep copy of tt__IntRectangleRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IntRectangleRange::soap_del() deep deletes tt__IntRectangleRange data members, use only after tt__IntRectangleRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IntRectangleRange::soap_type() returns SOAP_TYPE_tt__IntRectangleRange or derived type identifier
class tt__IntRectangleRange
{ public:
/// <PRE><BLOCKQUOTE>
///   Range of X-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "XRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        XRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of Y-axis.
/// </BLOCKQUOTE></PRE>
///
/// Element "YRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        YRange                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of width.
/// </BLOCKQUOTE></PRE>
///
/// Element "WidthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        WidthRange                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Range of height.
/// </BLOCKQUOTE></PRE>
///
/// Element "HeightRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        HeightRange                    1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":FloatRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of values greater equal Min value and less equal Max value.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__FloatRange operations:
/// - tt__FloatRange* soap_new_tt__FloatRange(soap*) allocate and default initialize
/// - tt__FloatRange* soap_new_tt__FloatRange(soap*, int num) allocate and default initialize an array
/// - tt__FloatRange* soap_new_req_tt__FloatRange(soap*, ...) allocate, set required members
/// - tt__FloatRange* soap_new_set_tt__FloatRange(soap*, ...) allocate, set all public members
/// - tt__FloatRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__FloatRange(soap*, tt__FloatRange*) deserialize from a stream
/// - int soap_write_tt__FloatRange(soap*, tt__FloatRange*) serialize to a stream
/// - tt__FloatRange* tt__FloatRange::soap_dup(soap*) returns deep copy of tt__FloatRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__FloatRange::soap_del() deep deletes tt__FloatRange data members, use only after tt__FloatRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__FloatRange::soap_type() returns SOAP_TYPE_tt__FloatRange or derived type identifier
class tt__FloatRange
{ public:
/// Element "Min" of type xs:float.
    float                                Min                            1;	///< Required element.
/// Element "Max" of type xs:float.
    float                                Max                            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":DurationRange is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Range of duration greater equal Min duration and less equal Max duration.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__DurationRange operations:
/// - tt__DurationRange* soap_new_tt__DurationRange(soap*) allocate and default initialize
/// - tt__DurationRange* soap_new_tt__DurationRange(soap*, int num) allocate and default initialize an array
/// - tt__DurationRange* soap_new_req_tt__DurationRange(soap*, ...) allocate, set required members
/// - tt__DurationRange* soap_new_set_tt__DurationRange(soap*, ...) allocate, set all public members
/// - tt__DurationRange::soap_default(soap*) default initialize members
/// - int soap_read_tt__DurationRange(soap*, tt__DurationRange*) deserialize from a stream
/// - int soap_write_tt__DurationRange(soap*, tt__DurationRange*) serialize to a stream
/// - tt__DurationRange* tt__DurationRange::soap_dup(soap*) returns deep copy of tt__DurationRange, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__DurationRange::soap_del() deep deletes tt__DurationRange data members, use only after tt__DurationRange::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__DurationRange::soap_type() returns SOAP_TYPE_tt__DurationRange or derived type identifier
class tt__DurationRange
{ public:
/// Element "Min" of type xs:duration.
    xsd__duration                        Min                            1;	///< Required element.
/// Element "Max" of type xs:duration.
    xsd__duration                        Max                            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":IntItems is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   List of values.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__IntItems operations:
/// - tt__IntItems* soap_new_tt__IntItems(soap*) allocate and default initialize
/// - tt__IntItems* soap_new_tt__IntItems(soap*, int num) allocate and default initialize an array
/// - tt__IntItems* soap_new_req_tt__IntItems(soap*, ...) allocate, set required members
/// - tt__IntItems* soap_new_set_tt__IntItems(soap*, ...) allocate, set all public members
/// - tt__IntItems::soap_default(soap*) default initialize members
/// - int soap_read_tt__IntItems(soap*, tt__IntItems*) deserialize from a stream
/// - int soap_write_tt__IntItems(soap*, tt__IntItems*) serialize to a stream
/// - tt__IntItems* tt__IntItems::soap_dup(soap*) returns deep copy of tt__IntItems, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__IntItems::soap_del() deep deletes tt__IntItems data members, use only after tt__IntItems::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__IntItems::soap_type() returns SOAP_TYPE_tt__IntItems or derived type identifier
class tt__IntItems
{ public:
/// Size of array of int is 0..unbounded.
  $ int                                  __sizeItems                    0;
/// Pointer to array int of size 0..unbounded.
    int                                 *Items                          0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":FloatItems is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":AnyHolder is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension is a complexType.
///
/// @note class tt__VideoSourceExtension operations:
/// - tt__VideoSourceExtension* soap_new_tt__VideoSourceExtension(soap*) allocate and default initialize
/// - tt__VideoSourceExtension* soap_new_tt__VideoSourceExtension(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceExtension* soap_new_req_tt__VideoSourceExtension(soap*, ...) allocate, set required members
/// - tt__VideoSourceExtension* soap_new_set_tt__VideoSourceExtension(soap*, ...) allocate, set all public members
/// - tt__VideoSourceExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceExtension(soap*, tt__VideoSourceExtension*) deserialize from a stream
/// - int soap_write_tt__VideoSourceExtension(soap*, tt__VideoSourceExtension*) serialize to a stream
/// - tt__VideoSourceExtension* tt__VideoSourceExtension::soap_dup(soap*) returns deep copy of tt__VideoSourceExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceExtension::soap_del() deep deletes tt__VideoSourceExtension data members, use only after tt__VideoSourceExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceExtension::soap_type() returns SOAP_TYPE_tt__VideoSourceExtension or derived type identifier
class tt__VideoSourceExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor. To be used if imaging service 2.00 is supported.
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingSettings20.
    tt__ImagingSettings20*               Imaging                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceExtension2.
    tt__VideoSourceExtension2*           Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceExtension2 is a complexType.
///
/// @note class tt__VideoSourceExtension2 operations:
/// - tt__VideoSourceExtension2* soap_new_tt__VideoSourceExtension2(soap*) allocate and default initialize
/// - tt__VideoSourceExtension2* soap_new_tt__VideoSourceExtension2(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceExtension2* soap_new_req_tt__VideoSourceExtension2(soap*, ...) allocate, set required members
/// - tt__VideoSourceExtension2* soap_new_set_tt__VideoSourceExtension2(soap*, ...) allocate, set all public members
/// - tt__VideoSourceExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceExtension2(soap*, tt__VideoSourceExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoSourceExtension2(soap*, tt__VideoSourceExtension2*) serialize to a stream
/// - tt__VideoSourceExtension2* tt__VideoSourceExtension2::soap_dup(soap*) returns deep copy of tt__VideoSourceExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceExtension2::soap_del() deep deletes tt__VideoSourceExtension2 data members, use only after tt__VideoSourceExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceExtension2::soap_type() returns SOAP_TYPE_tt__VideoSourceExtension2 or derived type identifier
class tt__VideoSourceExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Profile is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   A media profile consists of a set of media configurations. Media profiles are used by a client
///   to configure properties of a media stream from an NVT.<br/>
///   An NVT shall provide at least one media profile at boot. An NVT should provide ready to use
///   profiles for the most common media configurations that the device offers.<br/>
///   A profile consists of a set of interconnected configuration entities. Configurations are provided
///   by the NVT and can be either static or created dynamically by the NVT. For example, the
///   dynamic configurations can be created by the NVT depending on current available encoding
///   resources.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__Profile operations:
/// - tt__Profile* soap_new_tt__Profile(soap*) allocate and default initialize
/// - tt__Profile* soap_new_tt__Profile(soap*, int num) allocate and default initialize an array
/// - tt__Profile* soap_new_req_tt__Profile(soap*, ...) allocate, set required members
/// - tt__Profile* soap_new_set_tt__Profile(soap*, ...) allocate, set all public members
/// - tt__Profile::soap_default(soap*) default initialize members
/// - int soap_read_tt__Profile(soap*, tt__Profile*) deserialize from a stream
/// - int soap_write_tt__Profile(soap*, tt__Profile*) serialize to a stream
/// - tt__Profile* tt__Profile::soap_dup(soap*) returns deep copy of tt__Profile, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Profile::soap_del() deep deletes tt__Profile data members, use only after tt__Profile::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Profile::soap_type() returns SOAP_TYPE_tt__Profile or derived type identifier
class tt__Profile
{ public:
/// <PRE><BLOCKQUOTE>
///   User readable name of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video input.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoSourceConfiguration" of type "http://www.onvif.org/ver10/schema":VideoSourceConfiguration.
    tt__VideoSourceConfiguration*        VideoSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio input.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioSourceConfiguration" of type "http://www.onvif.org/ver10/schema":AudioSourceConfiguration.
    tt__AudioSourceConfiguration*        AudioSourceConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Video encoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoEncoderConfiguration" of type "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration.
    tt__VideoEncoderConfiguration*       VideoEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio encoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioEncoderConfiguration" of type "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration.
    tt__AudioEncoderConfiguration*       AudioEncoderConfiguration      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the video analytics module and rule engine.
/// </BLOCKQUOTE></PRE>
///
/// Element "VideoAnalyticsConfiguration" of type "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration.
    tt__VideoAnalyticsConfiguration*     VideoAnalyticsConfiguration    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the pan tilt zoom unit.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZConfiguration" of type "http://www.onvif.org/ver10/schema":PTZConfiguration.
    tt__PTZConfiguration*                PTZConfiguration               0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the metadata stream.
/// </BLOCKQUOTE></PRE>
///
/// Element "MetadataConfiguration" of type "http://www.onvif.org/ver10/schema":MetadataConfiguration.
    tt__MetadataConfiguration*           MetadataConfiguration          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Extensions defined in ONVIF 2.0
/// </BLOCKQUOTE></PRE>
///
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ProfileExtension.
    tt__ProfileExtension*                Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Unique identifier of the profile.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// <PRE><BLOCKQUOTE>
///   A value of true signals that the profile cannot be deleted. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "fixed" of type xs:boolean.
  @ bool*                                fixed                          0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension is a complexType.
///
/// @note class tt__ProfileExtension operations:
/// - tt__ProfileExtension* soap_new_tt__ProfileExtension(soap*) allocate and default initialize
/// - tt__ProfileExtension* soap_new_tt__ProfileExtension(soap*, int num) allocate and default initialize an array
/// - tt__ProfileExtension* soap_new_req_tt__ProfileExtension(soap*, ...) allocate, set required members
/// - tt__ProfileExtension* soap_new_set_tt__ProfileExtension(soap*, ...) allocate, set all public members
/// - tt__ProfileExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__ProfileExtension(soap*, tt__ProfileExtension*) deserialize from a stream
/// - int soap_write_tt__ProfileExtension(soap*, tt__ProfileExtension*) serialize to a stream
/// - tt__ProfileExtension* tt__ProfileExtension::soap_dup(soap*) returns deep copy of tt__ProfileExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ProfileExtension::soap_del() deep deletes tt__ProfileExtension data members, use only after tt__ProfileExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ProfileExtension::soap_type() returns SOAP_TYPE_tt__ProfileExtension or derived type identifier
class tt__ProfileExtension
{ public:
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioOutputConfiguration" of type "http://www.onvif.org/ver10/schema":AudioOutputConfiguration.
    tt__AudioOutputConfiguration*        AudioOutputConfiguration       0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the Audio decoder.
/// </BLOCKQUOTE></PRE>
///
/// Element "AudioDecoderConfiguration" of type "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration.
    tt__AudioDecoderConfiguration*       AudioDecoderConfiguration      0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":ProfileExtension2.
    tt__ProfileExtension2*               Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ProfileExtension2 is a complexType.
///
/// @note class tt__ProfileExtension2 operations:
/// - tt__ProfileExtension2* soap_new_tt__ProfileExtension2(soap*) allocate and default initialize
/// - tt__ProfileExtension2* soap_new_tt__ProfileExtension2(soap*, int num) allocate and default initialize an array
/// - tt__ProfileExtension2* soap_new_req_tt__ProfileExtension2(soap*, ...) allocate, set required members
/// - tt__ProfileExtension2* soap_new_set_tt__ProfileExtension2(soap*, ...) allocate, set all public members
/// - tt__ProfileExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__ProfileExtension2(soap*, tt__ProfileExtension2*) deserialize from a stream
/// - int soap_write_tt__ProfileExtension2(soap*, tt__ProfileExtension2*) serialize to a stream
/// - tt__ProfileExtension2* tt__ProfileExtension2::soap_dup(soap*) returns deep copy of tt__ProfileExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ProfileExtension2::soap_del() deep deletes tt__ProfileExtension2 data members, use only after tt__ProfileExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ProfileExtension2::soap_type() returns SOAP_TYPE_tt__ProfileExtension2 or derived type identifier
class tt__ProfileExtension2
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":ConfigurationEntity is a complexType.
///
/// <PRE><BLOCKQUOTE>
///   Base type defining the common properties of a configuration.
/// </BLOCKQUOTE></PRE>
///
/// This type is extended by:
/// - "http://www.onvif.org/ver10/schema":VideoSourceConfiguration as tt__VideoSourceConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration as tt__VideoEncoderConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioSourceConfiguration as tt__AudioSourceConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration as tt__AudioEncoderConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration as tt__VideoAnalyticsConfiguration
/// - "http://www.onvif.org/ver10/schema":MetadataConfiguration as tt__MetadataConfiguration
/// - "http://www.onvif.org/ver10/schema":VideoOutputConfiguration (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AudioOutputConfiguration as tt__AudioOutputConfiguration
/// - "http://www.onvif.org/ver10/schema":AudioDecoderConfiguration as tt__AudioDecoderConfiguration
/// - "http://www.onvif.org/ver10/schema":PTZConfiguration as tt__PTZConfiguration
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngine (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngineInput (not used and removed, retain with option -Ow4)
/// - "http://www.onvif.org/ver10/schema":AnalyticsEngineControl (not used and removed, retain with option -Ow4)
///
/// @note class tt__ConfigurationEntity operations:
/// - tt__ConfigurationEntity* soap_new_tt__ConfigurationEntity(soap*) allocate and default initialize
/// - tt__ConfigurationEntity* soap_new_tt__ConfigurationEntity(soap*, int num) allocate and default initialize an array
/// - tt__ConfigurationEntity* soap_new_req_tt__ConfigurationEntity(soap*, ...) allocate, set required members
/// - tt__ConfigurationEntity* soap_new_set_tt__ConfigurationEntity(soap*, ...) allocate, set all public members
/// - tt__ConfigurationEntity::soap_default(soap*) default initialize members
/// - int soap_read_tt__ConfigurationEntity(soap*, tt__ConfigurationEntity*) deserialize from a stream
/// - int soap_write_tt__ConfigurationEntity(soap*, tt__ConfigurationEntity*) serialize to a stream
/// - tt__ConfigurationEntity* tt__ConfigurationEntity::soap_dup(soap*) returns deep copy of tt__ConfigurationEntity, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__ConfigurationEntity::soap_del() deep deletes tt__ConfigurationEntity data members, use only after tt__ConfigurationEntity::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__ConfigurationEntity::soap_type() returns SOAP_TYPE_tt__ConfigurationEntity or derived type identifier
class tt__ConfigurationEntity
{ public:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension is a complexType.
///
/// @note class tt__VideoSourceConfigurationExtension operations:
/// - tt__VideoSourceConfigurationExtension* soap_new_tt__VideoSourceConfigurationExtension(soap*) allocate and default initialize
/// - tt__VideoSourceConfigurationExtension* soap_new_tt__VideoSourceConfigurationExtension(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceConfigurationExtension* soap_new_req_tt__VideoSourceConfigurationExtension(soap*, ...) allocate, set required members
/// - tt__VideoSourceConfigurationExtension* soap_new_set_tt__VideoSourceConfigurationExtension(soap*, ...) allocate, set all public members
/// - tt__VideoSourceConfigurationExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceConfigurationExtension(soap*, tt__VideoSourceConfigurationExtension*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationExtension(soap*, tt__VideoSourceConfigurationExtension*) serialize to a stream
/// - tt__VideoSourceConfigurationExtension* tt__VideoSourceConfigurationExtension::soap_dup(soap*) returns deep copy of tt__VideoSourceConfigurationExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceConfigurationExtension::soap_del() deep deletes tt__VideoSourceConfigurationExtension data members, use only after tt__VideoSourceConfigurationExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceConfigurationExtension::soap_type() returns SOAP_TYPE_tt__VideoSourceConfigurationExtension or derived type identifier
class tt__VideoSourceConfigurationExtension
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rotation of captured image.
///   What resolutions a device supports shall be unaffected by the Rotate parameters.<br/>
///   If a device is configured with Rotate=AUTO, the device shall take control over the Degree parameter and automatically update it so that a client can query current rotation.<br/>
///   The device shall automatically apply the same rotation to its pan/tilt control direction depending on the following condition: if Reverse=AUTO in PTControlDirection or if the device doesnt support Reverse in PTControlDirection
/// </BLOCKQUOTE></PRE>
///
/// Element "Rotate" of type "http://www.onvif.org/ver10/schema":Rotate.
    tt__Rotate*                          Rotate                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2.
    tt__VideoSourceConfigurationExtension2*  Extension                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension2 is a complexType.
///
/// @note class tt__VideoSourceConfigurationExtension2 operations:
/// - tt__VideoSourceConfigurationExtension2* soap_new_tt__VideoSourceConfigurationExtension2(soap*) allocate and default initialize
/// - tt__VideoSourceConfigurationExtension2* soap_new_tt__VideoSourceConfigurationExtension2(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceConfigurationExtension2* soap_new_req_tt__VideoSourceConfigurationExtension2(soap*, ...) allocate, set required members
/// - tt__VideoSourceConfigurationExtension2* soap_new_set_tt__VideoSourceConfigurationExtension2(soap*, ...) allocate, set all public members
/// - tt__VideoSourceConfigurationExtension2::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceConfigurationExtension2(soap*, tt__VideoSourceConfigurationExtension2*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfigurationExtension2(soap*, tt__VideoSourceConfigurationExtension2*) serialize to a stream
/// - tt__VideoSourceConfigurationExtension2* tt__VideoSourceConfigurationExtension2::soap_dup(soap*) returns deep copy of tt__VideoSourceConfigurationExtension2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceConfigurationExtension2::soap_del() deep deletes tt__VideoSourceConfigurationExtension2 data members, use only after tt__VideoSourceConfigurationExtension2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceConfigurationExtension2::soap_type() returns SOAP_TYPE_tt__VideoSourceConfigurationExtension2 or derived type identifier
class tt__VideoSourceConfigurationExtension2
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional element describing the geometric lens distortion. Multiple instances for future variable lens support.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__LensDescription* is 0..unbounded.
  $ int                                  __sizeLensDescription          0;
/// Pointer to array tt__LensDescription* of size 0..unbounded.
    tt__LensDescription*                *LensDescription                0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Optional element describing the scene orientation in the cameras field of view.
/// </BLOCKQUOTE></PRE>
///
/// Element "SceneOrientation" of type "http://www.onvif.org/ver10/schema":SceneOrientation.
    tt__SceneOrientation*                SceneOrientation               0;	///< Optional element.
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":Rotate is a complexType.
///
/// @note class tt__Rotate operations:
/// - tt__Rotate* soap_new_tt__Rotate(soap*) allocate and default initialize
/// - tt__Rotate* soap_new_tt__Rotate(soap*, int num) allocate and default initialize an array
/// - tt__Rotate* soap_new_req_tt__Rotate(soap*, ...) allocate, set required members
/// - tt__Rotate* soap_new_set_tt__Rotate(soap*, ...) allocate, set all public members
/// - tt__Rotate::soap_default(soap*) default initialize members
/// - int soap_read_tt__Rotate(soap*, tt__Rotate*) deserialize from a stream
/// - int soap_write_tt__Rotate(soap*, tt__Rotate*) serialize to a stream
/// - tt__Rotate* tt__Rotate::soap_dup(soap*) returns deep copy of tt__Rotate, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Rotate::soap_del() deep deletes tt__Rotate data members, use only after tt__Rotate::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Rotate::soap_type() returns SOAP_TYPE_tt__Rotate or derived type identifier
class tt__Rotate
{ public:
/// <PRE><BLOCKQUOTE>
///   Parameter to enable/disable Rotation feature.
/// </BLOCKQUOTE></PRE>
///
/// Element "Mode" of type "http://www.onvif.org/ver10/schema":RotateMode.
    enum tt__RotateMode                  Mode                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure how much degree of clockwise rotation of image for On mode. Omitting this parameter for On mode means 180 degree rotation.
/// </BLOCKQUOTE></PRE>
///
/// Element "Degree" of type xs:int.
    int*                                 Degree                         0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":RotateExtension.
    tt__RotateExtension*                 Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":RotateExtension is a complexType.
///
/// @note class tt__RotateExtension operations:
/// - tt__RotateExtension* soap_new_tt__RotateExtension(soap*) allocate and default initialize
/// - tt__RotateExtension* soap_new_tt__RotateExtension(soap*, int num) allocate and default initialize an array
/// - tt__RotateExtension* soap_new_req_tt__RotateExtension(soap*, ...) allocate, set required members
/// - tt__RotateExtension* soap_new_set_tt__RotateExtension(soap*, ...) allocate, set all public members
/// - tt__RotateExtension::soap_default(soap*) default initialize members
/// - int soap_read_tt__RotateExtension(soap*, tt__RotateExtension*) deserialize from a stream
/// - int soap_write_tt__RotateExtension(soap*, tt__RotateExtension*) serialize to a stream
/// - tt__RotateExtension* tt__RotateExtension::soap_dup(soap*) returns deep copy of tt__RotateExtension, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__RotateExtension::soap_del() deep deletes tt__RotateExtension data members, use only after tt__RotateExtension::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__RotateExtension::soap_type() returns SOAP_TYPE_tt__RotateExtension or derived type identifier
class tt__RotateExtension
{ public:
/// <any namespace="##targetNamespace" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/schema":LensProjection is a complexType.
///
/// @note class tt__LensProjection operations:
/// - tt__LensProjection* soap_new_tt__LensProjection(soap*) allocate and default initialize
/// - tt__LensProjection* soap_new_tt__LensProjection(soap*, int num) allocate and default initialize an array
/// - tt__LensProjection* soap_new_req_tt__LensProjection(soap*, ...) allocate, set required members
/// - tt__LensProjection* soap_new_set_tt__LensProjection(soap*, ...) allocate, set all public members
/// - tt__LensProjection::soap_default(soap*) default initialize members
/// - int soap