                        </items>
                    </menu>
                </menuItem>
                <menuItem title="File" id="dMs-cI-mzQ">
                    <modifierMask key="keyEquivalentModifierMask"/>
                    <menu key="submenu" title="File" id="bib-Uj-vzu">
                        <items>
                            <menuItem title="New" keyEquivalent="n" id="Was-JA-tGl">
                                <connections>
                                    <action selector="newDocument:" target="-1" id="4Si-XN-c54"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Open…" keyEquivalent="o" id="IAo-SY-fd9">
                                <connections>
                                    <action selector="openDocument:" target="-1" id="bVn-NM-KNZ"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Open Recent" id="tXI-mr-wws">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Open Recent" systemMenu="recentDocuments" id="oas-Oc-fiZ">
                                    <items>
                                        <menuItem title="Clear Menu" id="vNY-rz-j42">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="clearRecentDocuments:" target="-1" id="Daa-9d-B3U"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                            <menuItem isSeparatorItem="YES" id="m54-Is-iLE"/>
                            <menuItem title="Close" keyEquivalent="w" id="DVo-aG-piG">
                                <connections>
                                    <action selector="performClose:" target="-1" id="HmO-Ls-i7Q"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Save…" keyEquivalent="s" id="pxx-59-PXV">
                                <connections>
                                    <action selector="saveDocument:" target="-1" id="teZ-XB-qJY"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Save As…" keyEquivalent="S" id="Bw7-FT-i3A">
                                <connections>
                                    <action selector="saveDocumentAs:" target="-1" id="mDf-zr-I0C"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Revert to Saved" keyEquivalent="r" id="KaW-ft-85H">
                                <connections>
                                    <action selector="revertDocumentToSaved:" target="-1" id="iJ3-Pv-kwq"/>
                                </connections>
                            </menuItem>
                            <menuItem isSeparatorItem="YES" id="aJh-i4-bef"/>
                            <menuItem title="Page Setup…" keyEquivalent="P" id="qIS-W8-SiK">
                                <modifierMask key="keyEquivalentModifierMask" shift="YES" command="YES"/>
                                <connections>
                                    <action selector="runPageLayout:" target="-1" id="Din-rz-gC5"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Print…" keyEquivalent="p" id="aTl-1u-JFS">
                                <connections>
                                    <action selector="print:" target="-1" id="qaZ-4w-aoO"/>
                                </connections>
                            </menuItem>
                        </items>
                    </menu>
                </menuItem>
                <menuItem title="Edit" id="5QF-Oa-p0T">
                    <modifierMask key="keyEquivalentModifierMask"/>
                    <menu key="submenu" title="Edit" id="W48-6f-4Dl">
                        <items>
                            <menuItem title="Undo" keyEquivalent="z" id="dRJ-4n-Yzg">
                                <connections>
                                    <action selector="undo:" target="-1" id="M6e-cu-g7V"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Redo" keyEquivalent="Z" id="6dh-zS-Vam">
                                <connections>
                                    <action selector="redo:" target="-1" id="oIA-Rs-6OD"/>
                                </connections>
                            </menuItem>
                            <menuItem isSeparatorItem="YES" id="WRV-NI-Exz"/>
                            <menuItem title="Cut" keyEquivalent="x" id="uRl-iY-unG">
                                <connections>
                                    <action selector="cut:" target="-1" id="YJe-68-I9s"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Copy" keyEquivalent="c" id="x3v-GG-iWU">
                                <connections>
                                    <action selector="copy:" target="-1" id="G1f-GL-Joy"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Paste" keyEquivalent="v" id="gVA-U4-sdL">
                                <connections>
                                    <action selector="paste:" target="-1" id="UvS-8e-Qdg"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Paste and Match Style" keyEquivalent="V" id="WeT-3V-zwk">
                                <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
                                <connections>
                                    <action selector="pasteAsPlainText:" target="-1" id="cEh-KX-wJQ"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Delete" id="pa3-QI-u2k">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <connections>
                                    <action selector="delete:" target="-1" id="0Mk-Ml-PaM"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Select All" keyEquivalent="a" id="Ruw-6m-B2m">
                                <connections>
                                    <action selector="selectAll:" target="-1" id="VNm-Mi-diN"/>
                                </connections>
                            </menuItem>
                            <menuItem isSeparatorItem="YES" id="uyl-h8-XO2"/>
                            <menuItem title="Find" id="4EN-yA-p0u">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Find" id="1b7-l0-nxx">
                                    <items>
                                        <menuItem title="Find…" tag="1" keyEquivalent="f" id="Xz5-n4-O0W">
                                            <connections>
                                                <action selector="performFindPanelAction:" target="-1" id="cD7-Qs-BN4"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Find and Replace…" tag="12" keyEquivalent="f" id="YEy-JH-Tfz">
                                            <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
                                            <connections>
                                                <action selector="performFindPanelAction:" target="-1" id="WD3-Gg-5AJ"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Find Next" tag="2" keyEquivalent="g" id="q09-fT-Sye">
                                            <connections>
                                                <action selector="performFindPanelAction:" target="-1" id="NDo-RZ-v9R"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Find Previous" tag="3" keyEquivalent="G" id="OwM-mh-QMV">
                                            <connections>
                                                <action selector="performFindPanelAction:" target="-1" id="HOh-sY-3ay"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Use Selection for Find" tag="7" keyEquivalent="e" id="buJ-ug-pKt">
                                            <connections>
                                                <action selector="performFindPanelAction:" target="-1" id="U76-nv-p5D"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Jump to Selection" keyEquivalent="j" id="S0p-oC-mLd">
                                            <connections>
                                                <action selector="centerSelectionInVisibleArea:" target="-1" id="IOG-6D-g5B"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                            <menuItem title="Spelling and Grammar" id="Dv1-io-Yv7">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Spelling" id="3IN-sU-3Bg">
                                    <items>
                                        <menuItem title="Show Spelling and Grammar" keyEquivalent=":" id="HFo-cy-zxI">
                                            <connections>
                                                <action selector="showGuessPanel:" target="-1" id="vFj-Ks-hy3"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Check Document Now" keyEquivalent=";" id="hz2-CU-CR7">
                                            <connections>
                                                <action selector="checkSpelling:" target="-1" id="fz7-VC-reM"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem isSeparatorItem="YES" id="bNw-od-mp5"/>
                                        <menuItem title="Check Spelling While Typing" id="rbD-Rh-wIN">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleContinuousSpellChecking:" target="-1" id="7w6-Qz-0kB"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Check Grammar With Spelling" id="mK6-2p-4JG">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleGrammarChecking:" target="-1" id="muD-Qn-j4w"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Correct Spelling Automatically" id="78Y-hA-62v">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleAutomaticSpellingCorrection:" target="-1" id="2lM-Qi-WAP"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                            <menuItem title="Substitutions" id="9ic-FL-obx">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Substitutions" id="FeM-D8-WVr">
                                    <items>
                                        <menuItem title="Show Substitutions" id="z6F-FW-3nz">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="orderFrontSubstitutionsPanel:" target="-1" id="oku-mr-iSq"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem isSeparatorItem="YES" id="gPx-C9-uUO"/>
                                        <menuItem title="Smart Copy/Paste" id="9yt-4B-nSM">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleSmartInsertDelete:" target="-1" id="3IJ-Se-DZD"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Smart Quotes" id="hQb-2v-fYv">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleAutomaticQuoteSubstitution:" target="-1" id="ptq-xd-QOA"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Smart Dashes" id="rgM-f4-ycn">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleAutomaticDashSubstitution:" target="-1" id="oCt-pO-9gS"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Smart Links" id="cwL-P1-jid">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleAutomaticLinkDetection:" target="-1" id="Gip-E3-Fov"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Data Detectors" id="tRr-pd-1PS">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleAutomaticDataDetection:" target="-1" id="R1I-Nq-Kbl"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Text Replacement" id="HFQ-gK-NFA">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleAutomaticTextReplacement:" target="-1" id="DvP-Fe-Py6"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                            <menuItem title="Transformations" id="2oI-Rn-ZJC">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Transformations" id="c8a-y6-VQd">
                                    <items>
                                        <menuItem title="Make Upper Case" id="vmV-6d-7jI">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="uppercaseWord:" target="-1" id="sPh-Tk-edu"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Make Lower Case" id="d9M-CD-aMd">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="lowercaseWord:" target="-1" id="iUZ-b5-hil"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Capitalize" id="UEZ-Bs-lqG">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="capitalizeWord:" target="-1" id="26H-TL-nsh"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                            <menuItem title="Speech" id="xrE-MZ-jX0">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Speech" id="3rS-ZA-NoH">
                                    <items>
                                        <menuItem title="Start Speaking" id="Ynk-f8-cLZ">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="startSpeaking:" target="-1" id="654-Ng-kyl"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Stop Speaking" id="Oyz-dy-DGm">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="stopSpeaking:" target="-1" id="dX8-6p-jy9"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                        </items>
                    </menu>
                </menuItem>
                <menuItem title="Format" id="jxT-CU-nIS">
                    <modifierMask key="keyEquivalentModifierMask"/>
                    <menu key="submenu" title="Format" id="GEO-Iw-cKr">
                        <items>
                            <menuItem title="Font" id="Gi5-1S-RQB">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Font" systemMenu="font" id="aXa-aM-Jaq">
                                    <items>
                                        <menuItem title="Show Fonts" keyEquivalent="t" id="Q5e-8K-NDq">
                                            <connections>
                                                <action selector="orderFrontFontPanel:" target="YLy-65-1bz" id="WHr-nq-2xA"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Bold" tag="2" keyEquivalent="b" id="GB9-OM-e27">
                                            <connections>
                                                <action selector="addFontTrait:" target="YLy-65-1bz" id="hqk-hr-sYV"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Italic" tag="1" keyEquivalent="i" id="Vjx-xi-njq">
                                            <connections>
                                                <action selector="addFontTrait:" target="YLy-65-1bz" id="IHV-OB-c03"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Underline" keyEquivalent="u" id="WRG-CD-K1S">
                                            <connections>
                                                <action selector="underline:" target="-1" id="FYS-2b-JAY"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem isSeparatorItem="YES" id="5gT-KC-WSO"/>
                                        <menuItem title="Bigger" tag="3" keyEquivalent="+" id="Ptp-SP-VEL">
                                            <connections>
                                                <action selector="modifyFont:" target="YLy-65-1bz" id="Uc7-di-UnL"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Smaller" tag="4" keyEquivalent="-" id="i1d-Er-qST">
                                            <connections>
                                                <action selector="modifyFont:" target="YLy-65-1bz" id="HcX-Lf-eNd"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem isSeparatorItem="YES" id="kx3-Dk-x3B"/>
                                        <menuItem title="Kern" id="jBQ-r6-VK2">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <menu key="submenu" title="Kern" id="tlD-Oa-oAM">
                                                <items>
                                                    <menuItem title="Use Default" id="GUa-eO-cwY">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="useStandardKerning:" target="-1" id="6dk-9l-Ckg"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem title="Use None" id="cDB-IK-hbR">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="turnOffKerning:" target="-1" id="U8a-gz-Maa"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem title="Tighten" id="46P-cB-AYj">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="tightenKerning:" target="-1" id="hr7-Nz-8ro"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem title="Loosen" id="ogc-rX-tC1">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="loosenKerning:" target="-1" id="8i4-f9-FKE"/>
                                                        </connections>
                                                    </menuItem>
                                                </items>
                                            </menu>
                                        </menuItem>
                                        <menuItem title="Ligatures" id="o6e-r0-MWq">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <menu key="submenu" title="Ligatures" id="w0m-vy-SC9">
                                                <items>
                                                    <menuItem title="Use Default" id="agt-UL-0e3">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="useStandardLigatures:" target="-1" id="7uR-wd-Dx6"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem title="Use None" id="J7y-lM-qPV">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="turnOffLigatures:" target="-1" id="iX2-gA-Ilz"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem title="Use All" id="xQD-1f-W4t">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="useAllLigatures:" target="-1" id="KcB-kA-TuK"/>
                                                        </connections>
                                                    </menuItem>
                                                </items>
                                            </menu>
                                        </menuItem>
                                        <menuItem title="Baseline" id="OaQ-X3-Vso">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <menu key="submenu" title="Baseline" id="ijk-EB-dga">
                                                <items>
                                                    <menuItem title="Use Default" id="3Om-Ey-2VK">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="unscript:" target="-1" id="0vZ-95-Ywn"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem title="Superscript" id="Rqc-34-cIF">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="superscript:" target="-1" id="3qV-fo-wpU"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem title="Subscript" id="I0S-gh-46l">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="subscript:" target="-1" id="Q6W-4W-IGz"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem title="Raise" id="2h7-ER-AoG">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="raiseBaseline:" target="-1" id="4sk-31-7Q9"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem title="Lower" id="1tx-W0-xDw">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="lowerBaseline:" target="-1" id="OF1-bc-KW4"/>
                                                        </connections>
                                                    </menuItem>
                                                </items>
                                            </menu>
                                        </menuItem>
                                        <menuItem isSeparatorItem="YES" id="Ndw-q3-faq"/>
                                        <menuItem title="Show Colors" keyEquivalent="C" id="bgn-CT-cEk">
                                            <connections>
                                                <action selector="orderFrontColorPanel:" target="-1" id="mSX-Xz-DV3"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem isSeparatorItem="YES" id="iMs-zA-UFJ"/>
                                        <menuItem title="Copy Style" keyEquivalent="c" id="5Vv-lz-BsD">
                                            <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
                                            <connections>
                                                <action selector="copyFont:" target="-1" id="GJO-xA-L4q"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Paste Style" keyEquivalent="v" id="vKC-jM-MkH">
                                            <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
                                            <connections>
                                                <action selector="pasteFont:" target="-1" id="JfD-CL-leO"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                            <menuItem title="Text" id="Fal-I4-PZk">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Text" id="d9c-me-L2H">
                                    <items>
                                        <menuItem title="Align Left" keyEquivalent="{" id="ZM1-6Q-yy1">
                                            <connections>
                                                <action selector="alignLeft:" target="-1" id="zUv-R1-uAa"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Center" keyEquivalent="|" id="VIY-Ag-zcb">
                                            <connections>
                                                <action selector="alignCenter:" target="-1" id="spX-mk-kcS"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Justify" id="J5U-5w-g23">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="alignJustified:" target="-1" id="ljL-7U-jND"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Align Right" keyEquivalent="}" id="wb2-vD-lq4">
                                            <connections>
                                                <action selector="alignRight:" target="-1" id="r48-bG-YeY"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem isSeparatorItem="YES" id="4s2-GY-VfK"/>
                                        <menuItem title="Writing Direction" id="H1b-Si-o9J">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <menu key="submenu" title="Writing Direction" id="8mr-sm-Yjd">
                                                <items>
                                                    <menuItem title="Paragraph" enabled="NO" id="ZvO-Gk-QUH">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                    </menuItem>
                                                    <menuItem id="YGs-j5-SAR">
                                                        <string key="title">	Default</string>
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="makeBaseWritingDirectionNatural:" target="-1" id="qtV-5e-UBP"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem id="Lbh-J2-qVU">
                                                        <string key="title">	Left to Right</string>
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="makeBaseWritingDirectionLeftToRight:" target="-1" id="S0X-9S-QSf"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem id="jFq-tB-4Kx">
                                                        <string key="title">	Right to Left</string>
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="makeBaseWritingDirectionRightToLeft:" target="-1" id="5fk-qB-AqJ"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem isSeparatorItem="YES" id="swp-gr-a21"/>
                                                    <menuItem title="Selection" enabled="NO" id="cqv-fj-IhA">
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                    </menuItem>
                                                    <menuItem id="Nop-cj-93Q">
                                                        <string key="title">	Default</string>
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="makeTextWritingDirectionNatural:" target="-1" id="lPI-Se-ZHp"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem id="BgM-ve-c93">
                                                        <string key="title">	Left to Right</string>
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="makeTextWritingDirectionLeftToRight:" target="-1" id="caW-Bv-w94"/>
                                                        </connections>
                                                    </menuItem>
                                                    <menuItem id="RB4-Sm-HuC">
                                                        <string key="title">	Right to Left</string>
                                                        <modifierMask key="keyEquivalentModifierMask"/>
                                                        <connections>
                                                            <action selector="makeTextWritingDirectionRightToLeft:" target="-1" id="EXD-6r-ZUu"/>
                                                        </connections>
                                                    </menuItem>
                                                </items>
                                            </menu>
                                        </menuItem>
                                        <menuItem isSeparatorItem="YES" id="fKy-g9-1gm"/>
                                        <menuItem title="Show Ruler" id="vLm-3I-IUL">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleRuler:" target="-1" id="FOx-HJ-KwY"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Copy Ruler" keyEquivalent="c" id="MkV-Pr-PK5">
                                            <modifierMask key="keyEquivalentModifierMask" control="YES" command="YES"/>
                                            <connections>
                                                <action selector="copyRuler:" target="-1" id="71i-fW-3W2"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Paste Ruler" keyEquivalent="v" id="LVM-kO-fVI">
                                            <modifierMask key="keyEquivalentModifierMask" control="YES" command="YES"/>
                                            <connections>
                                                <action selector="pasteRuler:" target="-1" id="cSh-wd-qM2"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                        </items>
                    </menu>
                </menuItem>
                <menuItem title="View" id="H8h-7b-M4v">
                    <modifierMask key="keyEquivalentModifierMask"/>
                    <menu key="submenu" title="View" id="HyV-fh-RgO">
                        <items>
                            <menuItem title="Show Toolbar" keyEquivalent="t" id="snW-S8-Cw5">
                                <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
                                <connections>
                                    <action selector="toggleToolbarShown:" target="-1" id="BXY-wc-z0C"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Customize Toolbar…" id="1UK-8n-QPP">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <connections>
                                    <action selector="runToolbarCustomizationPalette:" target="-1" id="pQI-g3-MTW"/>
                                </connections>
                            </menuItem>
                            <menuItem isSeparatorItem="YES" id="hB3-LF-h0Y"/>
                            <menuItem title="Show Sidebar" keyEquivalent="s" id="kIP-vf-haE">
                                <modifierMask key="keyEquivalentModifierMask" control="YES" command="YES"/>
                                <connections>
                                    <action selector="toggleSourceList:" target="-1" id="iwa-gc-5KM"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Enter Full Screen" keyEquivalent="f" id="4J7-dP-txa">
                                <modifierMask key="keyEquivalentModifierMask" control="YES" command="YES"/>
                                <connections>
                                    <action selector="toggleFullScreen:" target="-1" id="dU3-MA-1Rq"/>
                                </connections>
                            </menuItem>
                        </items>
                    </menu>
                </menuItem>
                <menuItem title="Window" id="aUF-d1-5bR">
                    <modifierMask key="keyEquivalentModifierMask"/>
                    <menu key="submenu" title="Window" systemMenu="window" id="Td7-aD-5lo">
                        <items>
                            <menuItem title="Minimize" keyEquivalent="m" id="OY7-WF-poV">
                                <connections>
                                    <action selector="performMiniaturize:" target="-1" id="VwT-WD-YPe"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Zoom" id="R4o-n2-Eq4">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <connections>
                                    <action selector="performZoom:" target="-1" id="DIl-cC-cCs"/>
                                </connections>
                            </menuItem>
                            <menuItem isSeparatorItem="YES" id="eu3-7i-yIM"/>
                            <menuItem title="Bring All to Front" id="LE2-aR-0XJ">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <connections>
                                    <action selector="arrangeInFront:" target="-1" id="DRN-fu-gQh"/>
                                </connections>
                            </menuItem>
                        </items>
                    </menu>
                </menuItem>
                <menuItem title="Help" id="wpr-3q-Mcd">
                    <modifierMask key="keyEquivalentModifierMask"/>
                    <menu key="submenu" title="Help" systemMenu="help" id="F2S-fz-NVQ">
                        <items>
                            <menuItem title="MAVLink Help" keyEquivalent="?" id="FKE-Sm-Kum">
                                <connections>
                                    <action selector="showHelp:" target="-1" id="y7X-2Q-9no"/>
                                </connections>
                            </menuItem>
                        </items>
                    </menu>
                </menuItem>
            </items>
        </menu>
        <window title="MAVLink" allowsToolTipsWhenApplicationIsInactive="NO" autorecalculatesKeyViewLoop="NO" releasedWhenClosed="NO" animationBehavior="default" id="QvC-M9-y7g">
            <windowStyleMask key="styleMask" titled="YES" closable="YES" miniaturizable="YES" resizable="YES"/>
            <windowPositionMask key="initialPositionMask" leftStrut="YES" rightStrut="YES" topStrut="YES" bottomStrut="YES"/>
            <rect key="contentRect" x="335" y="390" width="480" height="360"/>
            <rect key="screenRect" x="0.0" y="0.0" width="1680" height="1027"/>
            <view key="contentView" wantsLayer="YES" id="EiT-Mj-1SZ">
                <rect key="frame" x="0.0" y="0.0" width="480" height="360"/>
                <autoresizingMask key="autoresizingMask"/>
            </view>
        </window>
    </objects>
</document>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            <?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleDevelopmentRegion</key>
	<string>en</string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>CFBundleIconFile</key>
	<string></string>
	<key>CFBundleIdentifier</key>
	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>$(PRODUCT_NAME)</string>
	<key>CFBundlePackageType</key>
	<string>APPL</string>
	<key>CFBundleShortVersionString</key>
	<string>1.0</string>
	<key>CFBundleVersion</key>
	<string>1</string>
	<key>LSMinimumSystemVersion</key>
	<string>$(MACOSX_DEPLOYMENT_TARGET)</string>
	<key>NSHumanReadableCopyright</key>
	<string>Copyright © 2016 Build Apps. All rights reserved.</string>
	<key>NSMainNibFile</key>
	<string>MainMenu</string>
	<key>NSPrincipalClass</key>
	<string>NSApplication</string>
</dict>
</plist>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           # Ignore MAVLink generated files
*
# Except this file
!.gitignore                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               //
//  CompareWithCImpTest.swift
//  MAVLink
//
//  Created by Max Odnovolyk on 10/29/16.
//  Copyright © 2016 Build Apps. All rights reserved.
//

import Foundation
import XCTest
import MAVLink_C
@testable import MAVLink

class CompareWithCImplementationResultsTest: XCTestCase {
    
    func testSwiftParserImplementationDidReturnSameFloatValuesAsCImplementation() {
        let data = testAttitudeData
        
        let mavLink = MAVLink()
        var attitudeMessageSwift: Attitude!
        mavLink.parse(data: data, channel: 0) { message, _ in
            attitudeMessageSwift = message as! Attitude
        }
        
        XCTAssert(attitudeMessageSwift != nil, "Expects to receive valid Attitude message from provided data")
        
        var messageC = mavlink_message_t()
        var statusC = mavlink_status_t()
        var attitudeMessageC = mavlink_attitude_t()

        data.forEach { mavlink_parse_char(0, $0, &messageC, &statusC) }
        
        mavlink_msg_attitude_decode(&messageC, &attitudeMessageC)
        
        XCTAssert(attitudeMessageSwift.timeBootMs == attitudeMessageC.time_boot_ms)
        XCTAssert(attitudeMessageSwift.roll == attitudeMessageC.roll)
        XCTAssert(attitudeMessageSwift.pitch == attitudeMessageC.pitch)
        XCTAssert(attitudeMessageSwift.yaw == attitudeMessageC.yaw)
        XCTAssert(attitudeMessageSwift.rollspeed == attitudeMessageC.rollspeed)
        XCTAssert(attitudeMessageSwift.pitchspeed == attitudeMessageC.pitchspeed)
        XCTAssert(attitudeMessageSwift.yawspeed == attitudeMessageC.yawspeed)
    }
    
    /// Test MAVLink parser on the real world data and compare results with C code results
    /// on the same data set. This test could take significant amount of time (tlog
    /// contains about 163000 messages).
    /// You can disable this test in test scheme configuration to save time.
    /// Tlog file was downloaded from https://github.com/dronekit/dronekit-la-testdata.
    /// APM:Copter V3.4-dev (bdddfae5)
    func testSwiftParserImplementationDidReturnSameNumberOfMessagesAsCImplementation() {
        
        // Load data from test tlog file
        let data = testTlogData
        
        // Message and error counters
        var messageCountSwift = 0
        var messageCountC = 0
        var errors: [String: Int] = [:]
        
        // Delegated messages handler
        let delegate = Delegate(didParse: { _, _, _, _ in
            messageCountSwift += 1
        }, didFailToParseMessage: { _, error, _, _ in
            
            // Сonsidering ParseError.valueSizeOutOfBounds, ParseError.invalidStringEncoding,
            // ParseEnumError.unknownValue which are not handled in C implementation.
            if let count = errors[error.description] {
                errors[error.description] = count + 1
            } else {
                errors[error.description] = 1
            }
        })
        
        // Parse data with MAVLink class instance (pure Swift implementation)
        let mavLink = MAVLink()
        mavLink.delegate = delegate
        mavLink.parse(data: data, channel: 0)
        
        let typesErrorCountSwift = errors.reduce(0) { result, item in result + item.1 }
        
        // Process data with C mavlink_parse_char function
        var message = mavlink_message_t()
        var status = mavlink_status_t()
        
        data.forEach { byte in
            if mavlink_parse_char(0, byte, &message, &status) == UInt8(MAVLINK_FRAMING_OK.rawValue) {
                messageCountC += 1
            }
        }
        
        // Compare results
        XCTAssert(messageCountSwift == messageCountC - typesErrorCountSwift, "Number of messages parsed in MAVLink instance should match messageCountC minus number of errors which is not handled in C code")
    }
    
    /// Test that generated by MAVLink data can be parsed in C implementation.
    /// Tlog file was downloaded from https://github.com/dronekit/dronekit-la-testdata.
    /// APM:Copter V3.4-dev (bdddfae5)
    func testCImplementationDidParseSwiftMAVLinkOutput() {
        continueAfterFailure = false
        
        // Load data from test tlog file
        let data = testTlogData
        
        var messagesCount = 0
        
        // Delegated messages handler
        let delegate = Delegate(didParse: { message, packet, _, link in
            let data = try! packet.finalize(sequence: 0)
            var message = mavlink_message_t()
            var status = mavlink_status_t()
            var result = UInt8(MAVLINK_FRAMING_INCOMPLETE.rawValue)
            
            data.forEach { byte in
                result = mavlink_parse_char(0, byte, &message, &status)
            }
            
            XCTAssert(result == UInt8(MAVLINK_FRAMING_OK.rawValue), "C Implementation should be able to parse finalized by MAVLink message if they both use the same definitions and settings")
            
            messagesCount += 1
        })
        
        // Parse data with MAVLink class instance (pure Swift implementation)
        let mavLink = MAVLink()
        mavLink.delegate = delegate
        mavLink.parse(data: data, channel: 0)
        
        XCTAssert(messagesCount > 0, "Unable to parse any method from test data")
    }
    
    func testCImplementationDidParseMessageThatStartsRightAfterCorruptedMessageIdByte() {
        let unknownMessageId = UInt8(0xC7)
        
        var data = Data(testHeartbeatData.prefix(upTo: 5))
        data.append(unknownMessageId)
        data.append(testStatustextData)
        
        var message = mavlink_message_t()
        var status = mavlink_status_t()
        var result = UInt8(MAVLINK_FRAMING_INCOMPLETE.rawValue)
        
        data.forEach { byte in
            result = mavlink_parse_char(0, byte, &message, &status)
        }
        
        XCTAssert(result == UInt8(MAVLINK_FRAMING_OK.rawValue))
    }

    
    func testCImplementationDidParseMessageThatStartsRightAfterCorruptedCRCByte() {
        let corruptedByte = UInt8(0x00)
        
        var data = testHeartbeatData
        data.removeLast(2)
        data.append(corruptedByte)
        data.append(testStatustextData)
        
        var message = mavlink_message_t()
        var status = mavlink_status_t()
        var result = UInt8(MAVLINK_FRAMING_INCOMPLETE.rawValue)
        
        data.forEach { byte in
            result = mavlink_parse_char(0, byte, &message, &status)
        }
        
        XCTAssert(result == UInt8(MAVLINK_FRAMING_OK.rawValue))
    }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      //
//  MAVLinkTests.swift
//  MAVLinkTests
//
//  Created by Max Odnovolyk on 9/28/16.
//  Copyright © 2016 Build Apps. All rights reserved.
//

import Foundation
import XCTest
@testable import MAVLink

class DataExtensionsTests: XCTestCase {
    
    // MARK: - Test number<T: MAVLinkNumber>(at offset: Data.Index, byteOrder: CFByteOrder) throws -> T
    
    func testGetNumberCannotGetTooLargeNumber() {
        let data = Data(count: 4)
        
        let test: () throws -> Void = {
            let _: Int32 = try data.number(at: 1)
        }
        
        XCTAssertThrowsError(try test()) { error in
            switch error {
            case let ParseError.valueSizeOutOfBounds(offset, size, upperBound) where offset + size > upperBound:
                break
            default:
                XCTFail("Unexpected error thrown")
            }
        }
    }
    
    func testGetNumberDidGetNumberAtOffset() {
        let data = Data(bytes: [0x00, 0x00, 0x01, 0x02, 0x03, 0x04])
        let expectedNumber: UInt32 = 0x01_02_03_04
        let receivedNumber: UInt32 = try! data.number(at: 2, byteOrder: .bigEndian)
        
        XCTAssert(receivedNumber == expectedNumber, "Method should return number value available at specified offset in data")
    }
    
    func testGetNumberByteOrderIsSwappedOnLittleEndianSystem() {
        let memoryBytes: [UInt8] = [0x04, 0x03, 0x02, 0x01]
        let expectedNumber: UInt32 = 0x01_02_03_04
        
        let data = Data(bytes: memoryBytes)
        let receivedNumber: UInt32 = try! data.number(at: 0, byteOrder: .littleEndian)
        
        XCTAssert(receivedNumber == expectedNumber, "Method expects swapped bytes in memory on little-endian system (most significant digit byte at the end)")
    }
    
    func testGetNumberByteOrderRemainsSameOnBigEndianSystem() {
        let memoryBytes: [UInt8] = [0x01, 0x02, 0x03, 0x04]
        let expectedNumber: UInt32 = 0x01_02_03_04
        
        let data = Data(bytes: memoryBytes)
        let receivedNumber: UInt32 = try! data.number(at: 0, byteOrder: .bigEndian)
        
        XCTAssert(receivedNumber == expectedNumber, "Method expects less significant digit byte at the end of value's memory chunk")
    }
    
    // MARK: Test array<T: MAVLinkNumber>(at offset: Data.Index, capacity: Int) throws -> [T]
    
    func testGetArrayCannotAccessBytesOutOfDataUpperBound() {
        let data = Data(count: 4)
        
        let test: () throws -> Void = {
            let _: [UInt8] = try data.array(at: 1, capacity: 4)
        }
        
        XCTAssertThrowsError(try test()) { error in
            switch error {
            case let ParseError.valueSizeOutOfBounds(offset, size, upperBound) where offset + size > upperBound:
                break
            default:
                XCTFail("Unexpected error thrown")
            }
        }
    }
    
    func testGetArrayDidGetArrayAtOffset() {
        let data = Data(bytes: [0x00, 0x00, 0x01, 0x02, 0x03, 0x00])
        let expectedArray: [UInt8] = [0x01, 0x02, 0x03]
        let receivedArray: [UInt8] = try! data.array(at: 2, capacity: 3)
        
        XCTAssert(receivedArray == expectedArray, "Expect array values at specified offset in data")
    }
    
    func testGetArrayDidGetRequestedNumberOfItems() {
        let data = Data(count: 4)
        let itemsCountToGet = 3
        
        let receivedArray: [UInt8] = try! data.array(at: 1, capacity: itemsCountToGet)
        XCTAssert(receivedArray.count == itemsCountToGet, "Expect requested capacity of array to be equal to received array's count")
    }
    
    // MARK: Test string(at offset: Data.Index, length: Int) throws -> String
    
    func testGetStringCannotAccessBytesOutOfDataUpperBound() {
        let data = Data(count: 4)
        
        XCTAssertThrowsError(try data.string(at: 1, length: 4)) { error in
            switch error {
            case let ParseError.valueSizeOutOfBounds(offset, size, upperBound) where offset + size > upperBound:
                break
            default:
                XCTFail("Unexpected error thrown")
            }
        }
    }

    func testGetStringCannotReadNonASCIISEncodedString() {
        // Check that invalidStringEncoding is thrown in case of non ASCII compatible strings.
        // It looks like all strings are ASCII compatible for String(bytes: encoding:) method.
    }
    
    func testGetStringDidReadASCIIEncodedStringAtSpecifiedOffset() {
        let data = Data(bytes: [0x60, 0x61, 0x62, 0x63, 0x64, 0x65]) // "`abcde"
        let string = try! data.string(at: 3, length: 3)
        
        XCTAssert(string == "cde", "Expect string at offset 3 (cde)")
    }
    
    func testGetStringDidReadEmptyNullTerminatedASCIIEncodedString() {
        let data = Data(bytes: [0x00, 0x00, 0x00, 0x00, 0x00, 0x00]) // "\0\0\0\0\0\0"
        let string = try! data.string(at: 1, length: 4)
        
        XCTAssert(string == "", "Expect to get empty string from zeroed data bytes")
    }
    
    func testGetStringDidReadNullTerminatedASCIIEncodedString() {
        let data = Data(bytes: [0x60, 0x61, 0x62, 0x0, 0x64, 0x65]) // "`ab\0de"
        let string = try! data.string(at: 1, length: 4)
        
        XCTAssert(string == "ab", "Expect cut off by null-termination string")
    }
    
    func testGetStringDidReadExactlyLengthSizedASCIIEncodedStringWithoutNullTermination() {
        let data = Data(bytes: [0x60, 0x61, 0x62, 0x63, 0x64, 0x65]) // "`abcde"
        let string = try! data.string(at: 1, length: 3)
        
        XCTAssert(string == "abc", "Expect cut off by length limit string")
    }
    
    // MARK: Test enumeration<T: Enumeration>(at offset: Data.Index) throws -> T where T.RawValue: MAVLinkNumber
    
    func testGetEnumerationCannotInitWithUnknownValue() {
        let data = Data(bytes: [UInt8(ADSBAltitudeType.enumEnd)])
        
        let test: () throws -> Void = {
            let _: ADSBAltitudeType = try data.enumeration(at: 0)
        }
        
        XCTAssertThrowsError(try test()) { error in
            switch error {
            case ParseEnumError<ADSBAltitudeType>.unknownValue:
                break
            default:
                XCTFail("Unexpected error thrown")
            }
        }
    }
    
    func testGetEnumerationDidGetProperCaseAtOffset() {
        let data = Data(bytes: [0x00, 0x00, ADSBAltitudeType.geometric.rawValue])
        let adsbAltitudeType: ADSBAltitudeType = try! data.enumeration(at: 2)
        
        XCTAssert(adsbAltitudeType == .geometric, "Expected adsbAltitudeType is .geometric")
    }
    
    // MARK: - Test set<T: MAVLinkNumber>(_ number: T, at offset: Data.Index, byteOrder: CFByteOrder) throws -> Void
    
    func testSetNumberCannotSetTooLargeNumber() {
        var data = Data(count: 4)
        
        XCTAssertThrowsError(try data.set(Int32(1), at: 1)) { error in
            switch error {
            case let PackError.valueSizeOutOfBounds(offset, size, upperBound) where offset + size > upperBound:
                break
            default:
                XCTFail("Unexpected error thrown")
            }
        }
    }
    
    func testSetNumberDidSetNumberAtOffset() {
        var data = Data(count: 6)
        let number: UInt32 = 0x01_02_03_04
        let expectedData = Data(bytes: [0x00, 0x00, 0x01, 0x02, 0x03, 0x04])

        try! data.set(number, at: 2, byteOrder: .bigEndian)
        
        XCTAssert(data == expectedData, "Method should set number at specified offset in data memory")
    }
    
    func testSetNumberByteOrderIsSwappedOnLittleEndianSystem() {
        var data = Data(count: 4)
        let number: UInt32 = 0x01_02_03_04
        let expectedData = Data(bytes: [0x04, 0x03, 0x02, 0x01])
        
        try! data.set(number, at: 0, byteOrder: .littleEndian)
        
        XCTAssert(data == expectedData, "Method should write swapped bytes in memory on little-endian system (most significant digit byte at the end)")
    }
    
    func testSetNumberByteOrderRemainsSameOnBigEndianSystem() {
        var data = Data(count: 4)
        let number: UInt32 = 0x01_02_03_04
        let expectedData = Data(bytes: [0x01, 0x02, 0x03, 0x04])
        
        try! data.set(number, at: 0, byteOrder: .bigEndian)
        
        XCTAssert(data == expectedData, "Method should write less significant digit byte at the end of data's memory chunk")
    }
    
    // MARK: Test set<T: MAVLinkNumber>(_ array: [T], at offset: Data.Index, capacity: Int) throws
    
    func testSetArrayCannotSetArrayWithLessCapacityThanArrayCount() {
        var data = Data(count: 6)
        let array = Array<UInt8>(repeating: 0, count: 4)
        
        XCTAssertThrowsError(try data.set(array, at: 0, capacity: 3)) { error in
            switch error {
            case let PackError.invalidValueLength(offset, providedValueLength, allowedLength) where offset == 0 && providedValueLength > allowedLength:
                break
            default:
                XCTFail("Unexpected error thrown")
            }
        }
    }
    
    func testSetArrayCannotSetValuesOutOfDataUpperBound() {
        var data = Data(count: 10)
        let array = Array<UInt64>(repeating: 0, count: 2)
        
        XCTAssertThrowsError(try data.set(array, at: 0, capacity: 16)) { error in
            switch error {
            case let PackError.valueSizeOutOfBounds(offset, size, upperBound) where offset == 0 && offset + size > upperBound:
                break
            default:
                XCTFail("Unexpected error thrown")
            }
        }
    }
    
    func testSetArrayDidSetValuesAtOffset() {
        var data = Data(count: 6)
        let array: [UInt8] = [0x01, 0x02, 0x03, 0x04]
        let expectedData = Data(bytes: [0x00, 0x01, 0x02, 0x03, 0x04, 0x00])
        
        try! data.set(array, at: 1, capacity: 4)
        
        XCTAssert(data == expectedData, "Method should write array values at specified offset")
    }
    
    // MARK: Test set(_ string: String, at offset: Data.Index, length: Int) throws
    
    func testSetStringCannotSetNonASCIIString() {
        var data = Data(count: 10)
        
        XCTAssertThrowsError(try data.set("💩", at: 0, length: 4)) { error in
            switch error {
            case let PackError.invalidStringEncoding(offset, string) where offset == 0 && string == "💩":
                break
            default:
                XCTFail("Unexpected error thrown")
            }
        }
    }
    
    func testSetStringCanntSetTooLongString() {
        var data = Data(count: 5)
        
        XCTAssertThrowsError(try data.set("abcdef", at: 0, length: 6)) { error in
            switch error {
            case let PackError.valueSizeOutOfBounds(offset, size, upperBound) where offset == 0 && offset + size > upperBound:
                break
            default:
                XCTFail("Unexpected error thrown")
            }
        }
    }
    
    func testSetStringDidSetNullTerminatedStringAtOffset() {
        var data = Data(bytes: Array<UInt8>(repeating: 0xFF, count: 5))
        let expectedData = Data(bytes: [0xFF, 0x61, 0x62, 0x63, 0x00])
        
        try! data.set("abc", at: 1, length: 4)
        
        XCTAssert(data == expectedData, "Method should write ASCII string bytes at specified offset with null byte at the end")
    }
    
    func testSetStringDidSetEmptyString() {
        var data = Data(bytes: Array<UInt8>(repeating: 0xFF, count: 5))
        let expectedData = Data(bytes: [0xFF, 0xFF, 0x00, 0xFF, 0xFF])
        
        try! data.set("", at: 2, length: 3)
        
        XCTAssert(data == expectedData, "Method should accept empty string as valid ASCII encoded string and add null termination")
    }
    
    // MARK: Test set<T: Enumeration>(_ enumeration: T, at offset: Data.Index) throws
    
    func testSetEnumerationDidSetProperRawValueAtOffset() {
        var data = Data(bytes: Array<UInt8>(repeating: 0x00, count: 4))
        let expectedData = Data(bytes: [0x00, 0x00, 0x00, MAVVTOLState.fw.rawValue])
        
        try! data.set(MAVVTOLState.fw, at: 3)
        
        XCTAssert(data == expectedData, "Method should set appropriate case raw value at specified offset")
    }
    
    // MARK: - Test write-read methods calls return consistent values
    
    func testGetNumberDidGetSameValuePreviouslySetWithSetNumberCall() {
        var data = Data(count: 10)
        let offset = 1
        let number = UInt64(0x01_02_03_04_05_06_07_08)
        
        try! data.set(number, at: offset)
        let receivedNumber: UInt64 = try! data.number(at: offset)
        
        XCTAssert(receivedNumber == number)
    }
    
    func testGetArrayDidGetSameValuePreviouslySetWithSetArrayCall() {
        var data = Data(count: 10)
        let offset = 1
        let array: [UInt8] = [0x00, 0x01, 0x02, 0x03, 0x04]
        
        try! data.set(array, at: offset, capacity: 5)
        let receivedArray: [UInt8] = try! data.array(at: offset, capacity: 5)
        
        XCTAssert(receivedArray == array)
    }
    
    func testGetStringDidGetSameValuePreviouslySetWithSetStringCall() {
        var data = Data(count: 10)
        let offset = 1
        let string = "test"
        
        try! data.set(string, at: offset, length: 9)
        let receivedString = try! data.string(at: offset, length: 9)
        
        XCTAssert(receivedString == string)
    }
    
    func testGetEnumerationDidGetSameValuePreviouslySetWithSetEnumerationCall() {
        var data = Data(count: 10)
        let offset = 1
        let mavvtolState = MAVVTOLState.fw
        
        try! data.set(mavvtolState, at: offset)
        let receivedMavvtolState: MAVVTOLState = try! data.enumeration(at: offset)
        
        XCTAssert(receivedMavvtolState == mavvtolState)
    }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             //
//  Delegate.swift
//  MAVLink
//
//  Created by Max Odnovolyk on 10/28/16.
//  Copyright © 2016 Build Apps. All rights reserved.
//

import Foundation
import MAVLink

class Delegate {
    typealias DidReceiveHandler = (Packet, Channel, MAVLink) -> Void
    typealias DidFailToReceiveHandler = (Packet?, MAVLinkError, Channel, MAVLink) -> Void
    typealias DidParseHandler = (Message, Packet, Channel, MAVLink) -> Void
    typealias DidFailToParseMessageHandler = (Packet, MAVLinkError, Channel, MAVLink) -> Void
    typealias DidFinalizeHandler = (Message, Packet, Data, Channel, MAVLink) -> Void
    
    var didReceive: DidReceiveHandler?
    var didFailToReceive: DidFailToReceiveHandler?
    var didParse: DidParseHandler?
    var didFailToParseMessage: DidFailToParseMessageHandler?
    var didFinalize: DidFinalizeHandler?
    
    init(didReceive: DidReceiveHandler? = nil, didFailToReceive: DidFailToReceiveHandler? = nil, didParse: DidParseHandler? = nil, didFailToParseMessage: DidFailToParseMessageHandler? = nil, didFinalize: DidFinalizeHandler? = nil) {
        self.didReceive = didReceive
        self.didFailToReceive = didFailToReceive
        self.didParse = didParse
        self.didFailToParseMessage = didFailToParseMessage
        self.didFinalize = didFinalize
    }
}

extension Delegate: MAVLinkDelegate {
    func didReceive(packet: Packet, on channel: Channel, via link: MAVLink) {
        didReceive?(packet, channel, link)
    }
    
    func didFailToReceive(packet: Packet?, with error: MAVLinkError, on channel: Channel, via link: MAVLink) {
        didFailToReceive?(packet, error, channel, link)
    }
    
    func didParse(message: Message, from packet: Packet, on channel: Channel, via link: MAVLink) {
        didParse?(message, packet, channel, link)
    }
    
    func didFailToParseMessage(from packet: Packet, with error: MAVLinkError, on channel: Channel, via link: MAVLink) {
        didFailToParseMessage?(packet, error, channel, link)
    }
    
    func didFinalize(message: Message, from packet: Packet, to data: Data, on channel: Channel, in link: MAVLink) {
        didFinalize?(message, packet, data, channel, link)
    }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          <?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleDevelopmentRegion</key>
	<string>en</string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>CFBundleIdentifier</key>
	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>$(PRODUCT_NAME)</string>
	<key>CFBundlePackageType</key>
	<string>BNDL</string>
	<key>CFBundleShortVersionString</key>
	<string>1.0</string>
	<key>CFBundleVersion</key>
	<string>1</string>
</dict>
</plist>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        # Ignore MAVLink generated files
*
# Except this file
!.gitignore                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               //
//  MAVLinkTests.swift
//  MAVLinkTests
//
//  Created by Max Odnovolyk on 10/6/16.
//  Copyright © 2016 Build Apps. All rights reserved.
//

import Foundation
import XCTest
@testable import MAVLink

class MAVLinkTests: XCTestCase {
    override func setUp() {
        super.setUp()
        
        continueAfterFailure = false
    }
    
    // MARK: - Parsing tests
    
    func testParseDidParseMessageThatStartsRightAfterCorruptedMessageIdByte() {
        let corruptedByte = UInt8(0xC7)
        
        var data = Data(testHeartbeatData.prefix(upTo: 5))
        data.append(corruptedByte)
        data.append(testStatustextData)

        var callsCount = 0
        
        let delegate = Delegate(didParse: { message, _, _, _ in
            XCTAssert(message is Statustext, "Expects to get instance of Statustext from provided data")
            
            callsCount += 1
        })
        
        let mavLink = MAVLink()
        mavLink.delegate = delegate
        mavLink.parse(data: data, channel: 0)
        
        XCTAssert(callsCount == 1, "MAVLink instance should parse exactly one message from provided data")
    }
    
    func testParseDidParseMessageThatStartsRightAfterCorruptedCRCByte() {
        let corruptedByte = UInt8(0x00)
        
        var data = testHeartbeatData
        data.removeLast(2)
        data.append(corruptedByte)
        data.append(testStatustextData)
        
        var callsCount = 0
        
        let delegate = Delegate(didParse: { message, _, _, _ in
            XCTAssert(message is Statustext, "Expects to get instance of Statustext from provided data")
            
            callsCount += 1
        })
        
        let mavLink = MAVLink()
        mavLink.delegate = delegate
        mavLink.parse(data: data, channel: 0)
        
        XCTAssert(callsCount == 1, "MAVLink instance should parse exactly one message from provided data")
    }
    
    // MARK: - Dispatching tests
    
    func testDispatchDidPutProperMessageId() {
        var callsCount = 0
        
        let delegate = Delegate(didFinalize: { _, _, data, _, _ in
            XCTAssert(data[5] == Heartbeat.id, "Sixth byte of MAVLink packet should be message id (in this specific case \(Heartbeat.id))")
            
            callsCount += 1
        })
        
        let mavLink = MAVLink()
        mavLink.delegate = delegate
        try! mavLink.dispatch(message: testHeartbeatMessage, systemId: 0, componentId: 0, channel: 0)
        
        XCTAssert(callsCount == 1, "MAVLink instance should return exactly one finalized packet from provided message")
    }
    
    func testDispatchDidPutProperSystemId() {
        var callsCount = 0
        let systemId = UInt8(0xFF)
        
        let delegate = Delegate(didFinalize: { _, _, data, _, _ in
            XCTAssert(data[3] == systemId, "Fourth byte of MAVLink packet should be system id (\(systemId))")
            
            callsCount += 1
        })
        
        let mavLink = MAVLink()
        mavLink.delegate = delegate
        try! mavLink.dispatch(message: testHeartbeatMessage, systemId: systemId, componentId: 0, channel: 0)
        
        XCTAssert(callsCount == 1, "MAVLink instance should return exactly one finalized packet from provided message")
    }
    
    func testDispatchDidPutProperComponentId() {
        var callsCount = 0
        let componentId = UInt8(0xFF)
        
        let delegate = Delegate(didFinalize: { _, _, data, _, _ in
            XCTAssert(data[4] == componentId, "Fifth byte of generated MAVLink packet should contain component id (\(componentId))")
            
            callsCount += 1
        })
        
        let mavLink = MAVLink()
        mavLink.delegate = delegate
        try! mavLink.dispatch(message: testHeartbeatMessage, systemId: 0, componentId: componentId, channel: 0)
        
        XCTAssert(callsCount == 1, "MAVLink instance should return exactly one finalized packet from provided message")
    }
    
    func testDispatchDidPutProperCRC() {
        var callsCount = 0
        
        let delegate = Delegate(didFinalize: { [unowned self] _, _, data, _, _ in
            let expectedData = self.testHeartbeatData
            XCTAssert(data == expectedData, "Test message`s bytes should match expected constant test data (including CRC)")
            
            callsCount += 1
        })
        
        let mavLink = MAVLink()
        mavLink.delegate = delegate
        try! mavLink.dispatch(message: testHeartbeatMessage, systemId: 0xFF, componentId: 0, channel: 0)
        
        XCTAssert(callsCount == 1, "MAVLink instance should return exactly one finalized packet from provided message")
    }
    
    func testDispatchRethrowsDataExtensionsErrors() {
        let mavLink = MAVLink()
        let message = Statustext(severity: MAVSeverity.notice, text:"💩")
        
        XCTAssertThrowsError(try mavLink.dispatch(message: message, systemId: 0, componentId: 0, channel: 0)) { error in
            switch error {
            case let PackError.invalidStringEncoding(offset, string) where offset == 1 && string == "💩":
                break
            default:
                XCTFail("Unexpected error thrown")
            }
        }
    }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             module MAVLink_C [system] {
    header "../MAVLink/C/ardupilotmega/mavlink.h"
    export *
}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    //
//  Testdata.swift
//  MAVLink
//
//  Created by Max Odnovolyk on 10/31/16.
//  Copyright © 2016 Build Apps. All rights reserved.
//

import Foundation
import XCTest
@testable import MAVLink

extension XCTestCase {
    
    /// Loads data from test tlog file
    var testTlogData: Data {
        func bundledPath() -> URL? {
            let bundle = Bundle(for: MAVLinkTests.self)
            return bundle.url(forResource: "flight", withExtension: "tlog")
        }
        
        func relativePath() -> URL {
            let packagePath = URL(fileURLWithPath: FileManager.default.currentDirectoryPath, isDirectory: true).deletingLastPathComponent().deletingLastPathComponent().deletingLastPathComponent()
            return packagePath.appendingPathComponent("Tests/MAVLinkTests/Testdata/flight.tlog")
        }
        
        let logPath: URL!
        
        #if os(macOS) || os(iOS) || os(watchOS) || os(tvOS)
            if let path = bundledPath() {
                logPath = path
            } else {
                logPath = relativePath()
            }
        #elseif os(Linux)
            logPath = relativePath()
        #else
            XCTFail("Unsupported target OS")
        #endif
        
        return try! Data(contentsOf: logPath)
    }
    
    /**
     ATTITUDE: The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right).
     Fields:
         timeBootMs = 72062 : Timestamp (milliseconds since system boot)
         roll = -0.0695389 : Roll angle (rad, -pi..+pi)
         pitch = 0.0272282 : Pitch angle (rad, -pi..+pi)
         yaw = 1.11595 : Yaw angle (rad, -pi..+pi)
         rollspeed = -0.0208449 : Roll angular speed (rad/s)
         pitchspeed = 0.00913008 : Pitch angular speed (rad/s)
         yawspeed = 0.00166465 : Yaw angular speed (rad/s)
    */
    var testAttitudeData: Data {
        return Data(bytes: [0xFE, 0x1C, 0x00, 0x01, 0x01, 0x1E, 0x7E, 0x19, 0x01, 0x00, 0x64, 0x6A, 0x8E, 0xBD, 0xB2, 0x0D, 0xDF, 0x3C, 0x5B, 0xD7, 0x8E, 0x3F, 0xEA, 0xC2, 0xAA, 0xBC, 0x56, 0x96, 0x15, 0x3C, 0x51, 0x30, 0xDA, 0x3A, 0x12, 0xAB])
    }
    
    var testHeartbeatMessage: Heartbeat {
        return Heartbeat(type: 6, autopilot: 8, baseMode: 0, customMode: 0, systemStatus: 0, mavlinkVersion: 3)
    }
    
    var testHeartbeatData: Data {
        return Data(bytes: [0xFE,0x09,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x06,0x08,0x00,0x00,0x03,0xA1,0xDF])
    }
    
    var testStatustextData: Data {
        return Data(bytes: [0xFE,0x33,0x00,0x01,0x01,0xFD,0x01,0x41,0x50,0x4D,0x3A,0x43,0x6F,0x70,0x74,0x65,0x72,0x20,0x56,0x33,0x2E,0x34,0x2D,0x64,0x65,0x76,0x20,0x28,0x62,0x64,0x64,0x64,0x66,0x61,0x65,0x35,0x29,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x90,0x07])
    }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              <?xml version="1.0"?>
<mavlink>
  <include>common.xml</include>
  <!-- vendors -->
  <include>uAvionix.xml</include>
  <dialect>2</dialect>
  <!-- note that APM specific messages should use the command id range from 150 to 250, to leave plenty of room for growth of common.xml If you prototype a message here, then you should consider if it is general enough to move into common.xml later -->
  <enums>
    <!-- ardupilot specific MAV_CMD_* commands -->
    <enum name="MAV_CMD">
      <entry name="MAV_CMD_DO_GRIPPER" value="211">
        <description>Mission command to operate EPM gripper</description>
        <param index="1">gripper number (a number from 1 to max number of grippers on the vehicle)</param>
        <param index="2">gripper action (0=release, 1=grab. See GRIPPER_ACTIONS enum)</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_AUTOTUNE_ENABLE" value="212">
        <description>Enable/disable autotune</description>
        <param index="1">enable (1: enable, 0:disable)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_NAV_ALTITUDE_WAIT" value="83">
        <description>Mission command to wait for an altitude or downwards vertical speed. This is meant for high altitude balloon launches, allowing the aircraft to be idle until either an altitude is reached or a negative vertical speed is reached (indicating early balloon burst). The wiggle time is how often to wiggle the control surfaces to prevent them seizing up.</description>
        <param index="1">altitude (m)</param>
        <param index="2">descent speed (m/s)</param>
        <param index="3">Wiggle Time (s)</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_POWER_OFF_INITIATED" value="42000">
        <description>A system wide power-off event has been initiated.</description>
        <param index="1">Empty</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <!-- MAV_CMD_SOLO_BTN_* are here to provide vendor-specific support for 3DR Solo until a better solution is found to atomically make multiple commands with control flow -->
      <entry name="MAV_CMD_SOLO_BTN_FLY_CLICK" value="42001">
        <description>FLY button has been clicked.</description>
        <param index="1">Empty</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_SOLO_BTN_FLY_HOLD" value="42002">
        <description>FLY button has been held for 1.5 seconds.</description>
        <param index="1">Takeoff altitude</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_SOLO_BTN_PAUSE_CLICK" value="42003">
        <description>PAUSE button has been clicked.</description>
        <param index="1">1 if Solo is in a shot mode, 0 otherwise</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_START_MAG_CAL" value="42424">
        <description>Initiate a magnetometer calibration</description>
        <param index="1">uint8_t bitmask of magnetometers (0 means all)</param>
        <param index="2">Automatically retry on failure (0=no retry, 1=retry).</param>
        <param index="3">Save without user input (0=require input, 1=autosave).</param>
        <param index="4">Delay (seconds)</param>
        <param index="5">Autoreboot (0=user reboot, 1=autoreboot)</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_ACCEPT_MAG_CAL" value="42425">
        <description>Initiate a magnetometer calibration</description>
        <param index="1">uint8_t bitmask of magnetometers (0 means all)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_CANCEL_MAG_CAL" value="42426">
        <description>Cancel a running magnetometer calibration</description>
        <param index="1">uint8_t bitmask of magnetometers (0 means all)</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_DO_SEND_BANNER" value="42428">
        <description>Reply with the version banner</description>
        <param index="1">Empty</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_GIMBAL_RESET" value="42501">
        <description>Causes the gimbal to reset and boot as if it was just powered on</description>
        <param index="1">Empty</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_SET_FACTORY_TEST_MODE" value="42427">
        <description>Command autopilot to get into factory test/diagnostic mode</description>
        <param index="1">0 means get out of test mode, 1 means get into test mode</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_GIMBAL_AXIS_CALIBRATION_STATUS" value="42502">
        <description>Reports progress and success or failure of gimbal axis calibration procedure</description>
        <param index="1">Gimbal axis we're reporting calibration progress for</param>
        <param index="2">Current calibration progress for this axis, 0x64=100%</param>
        <param index="3">Status of the calibration</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_GIMBAL_REQUEST_AXIS_CALIBRATION" value="42503">
        <description>Starts commutation calibration on the gimbal</description>
        <param index="1">Empty</param>
        <param index="2">Empty</param>
        <param index="3">Empty</param>
        <param index="4">Empty</param>
        <param index="5">Empty</param>
        <param index="6">Empty</param>
        <param index="7">Empty</param>
      </entry>
      <entry name="MAV_CMD_GIMBAL_FULL_RESET" value="42505">
        <description>Erases gimbal application and parameters</description>
        <param index="1">Magic number</param>
        <param index="2">Magic number</param>
        <param index="3">Magic number</param>
        <param index="4">Magic number</param>
        <param index="5">Magic number</param>
        <param index="6">Magic number</param>
        <param index="7">Magic number</param>
      </entry>
    </enum>
    <!-- AP_Limits Enums -->
    <enum name="LIMITS_STATE">
      <entry name="LIMITS_INIT" value="0">
        <description>pre-initialization</description>
      </entry>
      <entry name="LIMITS_DISABLED" value="1">
        <description>disabled</description>
      </entry>
      <entry name="LIMITS_ENABLED" value="2">
        <description>checking limits</description>
      </entry>
      <entry name="LIMITS_TRIGGERED" value="3">
        <description>a limit has been breached</description>
      </entry>
      <entry name="LIMITS_RECOVERING" value="4">
        <description>taking action eg. RTL</description>
      </entry>
      <entry name="LIMITS_RECOVERED" value="5">
        <description>we're no longer in breach of a limit</description>
      </entry>
    </enum>
    <!-- AP_Limits Modules - power of 2 (1,2,4,8,16,32 etc) so we can send as bitfield -->
    <enum name="LIMIT_MODULE">
      <entry name="LIMIT_GPSLOCK" value="1">
        <description>pre-initialization</description>
      </entry>
      <entry name="LIMIT_GEOFENCE" value="2">
        <description>disabled</description>
      </entry>
      <entry name="LIMIT_ALTITUDE" value="4">
        <description>checking limits</description>
      </entry>
    </enum>
    <!-- RALLY flags - power of 2 (1,2,4,8,16,32,64,128) so we can send as a bitfield -->
    <enum name="RALLY_FLAGS">
      <description>Flags in RALLY_POINT message</description>
      <entry name="FAVORABLE_WIND" value="1">
        <description>Flag set when requiring favorable winds for landing.</description>
      </entry>
      <entry name="LAND_IMMEDIATELY" value="2">
        <description>Flag set when plane is to immediately descend to break altitude and land without GCS intervention. Flag not set when plane is to loiter at Rally point until commanded to land.</description>
      </entry>
    </enum>
    <!-- parachute action enum -->
    <enum name="PARACHUTE_ACTION">
      <entry name="PARACHUTE_DISABLE" value="0">
        <description>Disable parachute release</description>
      </entry>
      <entry name="PARACHUTE_ENABLE" value="1">
        <description>Enable parachute release</description>
      </entry>
      <entry name="PARACHUTE_RELEASE" value="2">
        <description>Release parachute</description>
      </entry>
    </enum>
    <!-- gripper action enum -->
    <enum name="GRIPPER_ACTIONS">
      <description>Gripper actions.</description>
      <entry name="GRIPPER_ACTION_RELEASE" value="0">
        <description>gripper release of cargo</description>
      </entry>
      <entry name="GRIPPER_ACTION_GRAB" value="1">
        <description>gripper grabs onto cargo</description>
      </entry>
    </enum>
    <!-- Camera event types -->
    <enum name="CAMERA_STATUS_TYPES">
      <entry name="CAMERA_STATUS_TYPE_HEARTBEAT" value="0">
        <description>Camera heartbeat, announce camera component ID at 1hz</description>
      </entry>
      <entry name="CAMERA_STATUS_TYPE_TRIGGER" value="1">
        <description>Camera image triggered</description>
      </entry>
      <entry name="CAMERA_STATUS_TYPE_DISCONNECT" value="2">
        <description>Camera connection lost</description>
      </entry>
      <entry name="CAMERA_STATUS_TYPE_ERROR" value="3">
        <description>Camera unknown error</description>
      </entry>
      <entry name="CAMERA_STATUS_TYPE_LOWBATT" value="4">
        <description>Camera battery low. Parameter p1 shows reported voltage</description>
      </entry>
      <entry name="CAMERA_STATUS_TYPE_LOWSTORE" value="5">
        <description>Camera storage low. Parameter p1 shows reported shots remaining</description>
      </entry>
      <entry name="CAMERA_STATUS_TYPE_LOWSTOREV" value="6">
        <description>Camera storage low. Parameter p1 shows reported video minutes remaining</description>
      </entry>
    </enum>
    <!-- camera feedback flags, a little bit of future-proofing -->
    <enum name="CAMERA_FEEDBACK_FLAGS">
      <entry name="CAMERA_FEEDBACK_PHOTO" value="0">
        <description>Shooting photos, not video</description>
      </entry>
      <entry name="CAMERA_FEEDBACK_VIDEO" value="1">
        <description>Shooting video, not stills</description>
      </entry>
      <entry name="CAMERA_FEEDBACK_BADEXPOSURE" value="2">
        <description>Unable to achieve requested exposure (e.g. shutter speed too low)</description>
      </entry>
      <entry name="CAMERA_FEEDBACK_CLOSEDLOOP" value="3">
        <description>Closed loop feedback from camera, we know for sure it has successfully taken a picture</description>
      </entry>
      <entry name="CAMERA_FEEDBACK_OPENLOOP" value="4">
        <description>Open loop camera, an image trigger has been requested but we can't know for sure it has successfully taken a picture</description>
      </entry>
    </enum>
    <!-- Gimbal payload enumerations -->
    <enum name="MAV_MODE_GIMBAL">
      <entry name="MAV_MODE_GIMBAL_UNINITIALIZED" value="0">
        <description>Gimbal is powered on but has not started initializing yet</description>
      </entry>
      <entry name="MAV_MODE_GIMBAL_CALIBRATING_PITCH" value="1">
        <description>Gimbal is currently running calibration on the pitch axis</description>
      </entry>
      <entry name="MAV_MODE_GIMBAL_CALIBRATING_ROLL" value="2">
        <description>Gimbal is currently running calibration on the roll axis</description>
      </entry>
      <entry name="MAV_MODE_GIMBAL_CALIBRATING_YAW" value="3">
        <description>Gimbal is currently running calibration on the yaw axis</description>
      </entry>
      <entry name="MAV_MODE_GIMBAL_INITIALIZED" value="4">
        <description>Gimbal has finished calibrating and initializing, but is relaxed pending reception of first rate command from copter</description>
      </entry>
      <entry name="MAV_MODE_GIMBAL_ACTIVE" value="5">
        <description>Gimbal is actively stabilizing</description>
      </entry>
      <entry name="MAV_MODE_GIMBAL_RATE_CMD_TIMEOUT" value="6">
        <description>Gimbal is relaxed because it missed more than 10 expected rate command messages in a row. Gimbal will move back to active mode when it receives a new rate command</description>
      </entry>
    </enum>
    <enum name="GIMBAL_AXIS">
      <entry name="GIMBAL_AXIS_YAW" value="0">
        <description>Gimbal yaw axis</description>
      </entry>
      <entry name="GIMBAL_AXIS_PITCH" value="1">
        <description>Gimbal pitch axis</description>
      </entry>
      <entry name="GIMBAL_AXIS_ROLL" value="2">
        <description>Gimbal roll axis</description>
      </entry>
    </enum>
    <enum name="GIMBAL_AXIS_CALIBRATION_STATUS">
      <entry name="GIMBAL_AXIS_CALIBRATION_STATUS_IN_PROGRESS" value="0">
        <description>Axis calibration is in progress</description>
      </entry>
      <entry name="GIMBAL_AXIS_CALIBRATION_STATUS_SUCCEEDED" value="1">
        <description>Axis calibration succeeded</description>
      </entry>
      <entry name="GIMBAL_AXIS_CALIBRATION_STATUS_FAILED" value="2">
        <description>Axis calibration failed</description>
      </entry>
    </enum>
    <enum name="GIMBAL_AXIS_CALIBRATION_REQUIRED">
      <entry name="GIMBAL_AXIS_CALIBRATION_REQUIRED_UNKNOWN" value="0">
        <description>Whether or not this axis requires calibration is unknown at this time</description>
      </entry>
      <entry name="GIMBAL_AXIS_CALIBRATION_REQUIRED_TRUE" value="1">
        <description>This axis requires calibration</description>
      </entry>
      <entry name="GIMBAL_AXIS_CALIBRATION_REQUIRED_FALSE" value="2">
        <description>This axis does not require calibration</description>
      </entry>
    </enum>
    <!-- GoPro System Enumerations -->
    <enum name="GOPRO_HEARTBEAT_STATUS">
      <entry name="GOPRO_HEARTBEAT_STATUS_DISCONNECTED" value="0">
        <description>No GoPro connected</description>
      </entry>
      <entry name="GOPRO_HEARTBEAT_STATUS_INCOMPATIBLE" value="1">
        <description>The detected GoPro is not HeroBus compatible</description>
      </entry>
      <entry name="GOPRO_HEARTBEAT_STATUS_CONNECTED" value="2">
        <description>A HeroBus compatible GoPro is connected</description>
      </entry>
      <entry name="GOPRO_HEARTBEAT_STATUS_ERROR" value="3">
        <description>An unrecoverable error was encountered with the connected GoPro, it may require a power cycle</description>
      </entry>
    </enum>
    <enum name="GOPRO_HEARTBEAT_FLAGS">
      <!-- each entry is a mask to test a bit in GOPRO_HEARTBEAT_STATUS.flags -->
      <entry name="GOPRO_FLAG_RECORDING" value="1">
        <description>GoPro is currently recording</description>
      </entry>
    </enum>
    <enum name="GOPRO_REQUEST_STATUS">
      <entry name="GOPRO_REQUEST_SUCCESS" value="0">
        <description>The write message with ID indicated succeeded</description>
      </entry>
      <entry name="GOPRO_REQUEST_FAILED" value="1">
        <description>The write message with ID indicated failed</description>
      </entry>
    </enum>
    <enum name="GOPRO_COMMAND">
      <entry name="GOPRO_COMMAND_POWER" value="0">
        <description>(Get/Set)</description>
      </entry>
      <entry name="GOPRO_COMMAND_CAPTURE_MODE" value="1">
        <description>(Get/Set)</description>
      </entry>
      <entry name="GOPRO_COMMAND_SHUTTER" value="2">
        <description>(___/Set)</description>
      </entry>
      <entry name="GOPRO_COMMAND_BATTERY" value="3">
        <description>(Get/___)</description>
      </entry>
      <entry name="GOPRO_COMMAND_MODEL" value="4">
        <description>(Get/___)</description>
      </entry>
      <entry name="GOPRO_COMMAND_VIDEO_SETTINGS" value="5">
        <description>(Get/Set)</description>
        <!-- Packet structure for the four values is as follows byte 0: GOPRO_RESOLUTION byte 1: GOPRO_FRAME_RATE byte 2: GOPRO_FIELD_OF_VIEW byte 3: GOPRO_VIDEO_SETTINGS_FLAGS -->
      </entry>
      <entry name="GOPRO_COMMAND_LOW_LIGHT" value="6">
        <description>(Get/Set)</description>
      </entry>
      <entry name="GOPRO_COMMAND_PHOTO_RESOLUTION" value="7">
        <description>(Get/Set)</description>
      </entry>
      <entry name="GOPRO_COMMAND_PHOTO_BURST_RATE" value="8">
        <description>(Get/Set)</description>
      </entry>
      <entry name="GOPRO_COMMAND_PROTUNE" value="9">
        <description>(Get/Set)</description>
      </entry>
      <entry name="GOPRO_COMMAND_PROTUNE_WHITE_BALANCE" value="10">
        <description>(Get/Set) Hero 3+ Only</description>
      </entry>
      <entry name="GOPRO_COMMAND_PROTUNE_COLOUR" value="11">
        <description>(Get/Set) Hero 3+ Only</description>
      </entry>
      <entry name="GOPRO_COMMAND_PROTUNE_GAIN" value="12">
        <description>(Get/Set) Hero 3+ Only</description>
      </entry>
      <entry name="GOPRO_COMMAND_PROTUNE_SHARPNESS" value="13">
        <description>(Get/Set) Hero 3+ Only</description>
      </entry>
      <entry name="GOPRO_COMMAND_PROTUNE_EXPOSURE" value="14">
        <description>(Get/Set) Hero 3+ Only</description>
      </entry>
      <entry name="GOPRO_COMMAND_TIME" value="15">
        <description>(Get/Set)</description>
        <!-- Packet structure for the four values is as follows byte 0...3: uint32_t unix timestamp (byte 0 is MSB) -->
      </entry>
      <entry name="GOPRO_COMMAND_CHARGING" value="16">
        <description>(Get/Set)</description>
      </entry>
    </enum>
    <enum name="GOPRO_CAPTURE_MODE">
      <entry name="GOPRO_CAPTURE_MODE_VIDEO" value="0">
        <description>Video mode</description>
      </entry>
      <entry name="GOPRO_CAPTURE_MODE_PHOTO" value="1">
        <description>Photo mode</description>
      </entry>
      <entry name="GOPRO_CAPTURE_MODE_BURST" value="2">
        <description>Burst mode, hero 3+ only</description>
      </entry>
      <entry name="GOPRO_CAPTURE_MODE_TIME_LAPSE" value="3">
        <description>Time la