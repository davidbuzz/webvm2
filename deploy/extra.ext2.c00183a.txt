 0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemDateAndTimeResponse is a complexType.
///
/// @note class _tds__SetSystemDateAndTimeResponse operations:
/// - _tds__SetSystemDateAndTimeResponse* soap_new__tds__SetSystemDateAndTimeResponse(soap*) allocate and default initialize
/// - _tds__SetSystemDateAndTimeResponse* soap_new__tds__SetSystemDateAndTimeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetSystemDateAndTimeResponse* soap_new_req__tds__SetSystemDateAndTimeResponse(soap*, ...) allocate, set required members
/// - _tds__SetSystemDateAndTimeResponse* soap_new_set__tds__SetSystemDateAndTimeResponse(soap*, ...) allocate, set all public members
/// - _tds__SetSystemDateAndTimeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetSystemDateAndTimeResponse(soap*, _tds__SetSystemDateAndTimeResponse*) deserialize from a stream
/// - int soap_write__tds__SetSystemDateAndTimeResponse(soap*, _tds__SetSystemDateAndTimeResponse*) serialize to a stream
/// - _tds__SetSystemDateAndTimeResponse* _tds__SetSystemDateAndTimeResponse::soap_dup(soap*) returns deep copy of _tds__SetSystemDateAndTimeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetSystemDateAndTimeResponse::soap_del() deep deletes _tds__SetSystemDateAndTimeResponse data members, use only after _tds__SetSystemDateAndTimeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetSystemDateAndTimeResponse::soap_type() returns SOAP_TYPE__tds__SetSystemDateAndTimeResponse or derived type identifier
class _tds__SetSystemDateAndTimeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTime is a complexType.
///
/// @note class _tds__GetSystemDateAndTime operations:
/// - _tds__GetSystemDateAndTime* soap_new__tds__GetSystemDateAndTime(soap*) allocate and default initialize
/// - _tds__GetSystemDateAndTime* soap_new__tds__GetSystemDateAndTime(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemDateAndTime* soap_new_req__tds__GetSystemDateAndTime(soap*, ...) allocate, set required members
/// - _tds__GetSystemDateAndTime* soap_new_set__tds__GetSystemDateAndTime(soap*, ...) allocate, set all public members
/// - _tds__GetSystemDateAndTime::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemDateAndTime(soap*, _tds__GetSystemDateAndTime*) deserialize from a stream
/// - int soap_write__tds__GetSystemDateAndTime(soap*, _tds__GetSystemDateAndTime*) serialize to a stream
/// - _tds__GetSystemDateAndTime* _tds__GetSystemDateAndTime::soap_dup(soap*) returns deep copy of _tds__GetSystemDateAndTime, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemDateAndTime::soap_del() deep deletes _tds__GetSystemDateAndTime data members, use only after _tds__GetSystemDateAndTime::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemDateAndTime::soap_type() returns SOAP_TYPE__tds__GetSystemDateAndTime or derived type identifier
class _tds__GetSystemDateAndTime
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemDateAndTimeResponse is a complexType.
///
/// @note class _tds__GetSystemDateAndTimeResponse operations:
/// - _tds__GetSystemDateAndTimeResponse* soap_new__tds__GetSystemDateAndTimeResponse(soap*) allocate and default initialize
/// - _tds__GetSystemDateAndTimeResponse* soap_new__tds__GetSystemDateAndTimeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemDateAndTimeResponse* soap_new_req__tds__GetSystemDateAndTimeResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemDateAndTimeResponse* soap_new_set__tds__GetSystemDateAndTimeResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemDateAndTimeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemDateAndTimeResponse(soap*, _tds__GetSystemDateAndTimeResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemDateAndTimeResponse(soap*, _tds__GetSystemDateAndTimeResponse*) serialize to a stream
/// - _tds__GetSystemDateAndTimeResponse* _tds__GetSystemDateAndTimeResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemDateAndTimeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemDateAndTimeResponse::soap_del() deep deletes _tds__GetSystemDateAndTimeResponse data members, use only after _tds__GetSystemDateAndTimeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemDateAndTimeResponse::soap_type() returns SOAP_TYPE__tds__GetSystemDateAndTimeResponse or derived type identifier
class _tds__GetSystemDateAndTimeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains information whether system date and time are set manually or by NTP, daylight savings is on or off, time zone in POSIX 1003.1 format and system date and time in UTC and also local system date and time.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemDateAndTime" of type "http://www.onvif.org/ver10/schema":SystemDateTime.
    tt__SystemDateTime*                  SystemDateAndTime              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefault is a complexType.
///
/// @note class _tds__SetSystemFactoryDefault operations:
/// - _tds__SetSystemFactoryDefault* soap_new__tds__SetSystemFactoryDefault(soap*) allocate and default initialize
/// - _tds__SetSystemFactoryDefault* soap_new__tds__SetSystemFactoryDefault(soap*, int num) allocate and default initialize an array
/// - _tds__SetSystemFactoryDefault* soap_new_req__tds__SetSystemFactoryDefault(soap*, ...) allocate, set required members
/// - _tds__SetSystemFactoryDefault* soap_new_set__tds__SetSystemFactoryDefault(soap*, ...) allocate, set all public members
/// - _tds__SetSystemFactoryDefault::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetSystemFactoryDefault(soap*, _tds__SetSystemFactoryDefault*) deserialize from a stream
/// - int soap_write__tds__SetSystemFactoryDefault(soap*, _tds__SetSystemFactoryDefault*) serialize to a stream
/// - _tds__SetSystemFactoryDefault* _tds__SetSystemFactoryDefault::soap_dup(soap*) returns deep copy of _tds__SetSystemFactoryDefault, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetSystemFactoryDefault::soap_del() deep deletes _tds__SetSystemFactoryDefault data members, use only after _tds__SetSystemFactoryDefault::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetSystemFactoryDefault::soap_type() returns SOAP_TYPE__tds__SetSystemFactoryDefault or derived type identifier
class _tds__SetSystemFactoryDefault
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the factory default action type.
/// </BLOCKQUOTE></PRE>
///
/// Element "FactoryDefault" of type "http://www.onvif.org/ver10/schema":FactoryDefaultType.
    enum tt__FactoryDefaultType          FactoryDefault                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetSystemFactoryDefaultResponse is a complexType.
///
/// @note class _tds__SetSystemFactoryDefaultResponse operations:
/// - _tds__SetSystemFactoryDefaultResponse* soap_new__tds__SetSystemFactoryDefaultResponse(soap*) allocate and default initialize
/// - _tds__SetSystemFactoryDefaultResponse* soap_new__tds__SetSystemFactoryDefaultResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetSystemFactoryDefaultResponse* soap_new_req__tds__SetSystemFactoryDefaultResponse(soap*, ...) allocate, set required members
/// - _tds__SetSystemFactoryDefaultResponse* soap_new_set__tds__SetSystemFactoryDefaultResponse(soap*, ...) allocate, set all public members
/// - _tds__SetSystemFactoryDefaultResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetSystemFactoryDefaultResponse(soap*, _tds__SetSystemFactoryDefaultResponse*) deserialize from a stream
/// - int soap_write__tds__SetSystemFactoryDefaultResponse(soap*, _tds__SetSystemFactoryDefaultResponse*) serialize to a stream
/// - _tds__SetSystemFactoryDefaultResponse* _tds__SetSystemFactoryDefaultResponse::soap_dup(soap*) returns deep copy of _tds__SetSystemFactoryDefaultResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetSystemFactoryDefaultResponse::soap_del() deep deletes _tds__SetSystemFactoryDefaultResponse data members, use only after _tds__SetSystemFactoryDefaultResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetSystemFactoryDefaultResponse::soap_type() returns SOAP_TYPE__tds__SetSystemFactoryDefaultResponse or derived type identifier
class _tds__SetSystemFactoryDefaultResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmware is a complexType.
///
/// @note class _tds__UpgradeSystemFirmware operations:
/// - _tds__UpgradeSystemFirmware* soap_new__tds__UpgradeSystemFirmware(soap*) allocate and default initialize
/// - _tds__UpgradeSystemFirmware* soap_new__tds__UpgradeSystemFirmware(soap*, int num) allocate and default initialize an array
/// - _tds__UpgradeSystemFirmware* soap_new_req__tds__UpgradeSystemFirmware(soap*, ...) allocate, set required members
/// - _tds__UpgradeSystemFirmware* soap_new_set__tds__UpgradeSystemFirmware(soap*, ...) allocate, set all public members
/// - _tds__UpgradeSystemFirmware::soap_default(soap*) default initialize members
/// - int soap_read__tds__UpgradeSystemFirmware(soap*, _tds__UpgradeSystemFirmware*) deserialize from a stream
/// - int soap_write__tds__UpgradeSystemFirmware(soap*, _tds__UpgradeSystemFirmware*) serialize to a stream
/// - _tds__UpgradeSystemFirmware* _tds__UpgradeSystemFirmware::soap_dup(soap*) returns deep copy of _tds__UpgradeSystemFirmware, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__UpgradeSystemFirmware::soap_del() deep deletes _tds__UpgradeSystemFirmware data members, use only after _tds__UpgradeSystemFirmware::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__UpgradeSystemFirmware::soap_type() returns SOAP_TYPE__tds__UpgradeSystemFirmware or derived type identifier
class _tds__UpgradeSystemFirmware
{ public:
/// Element "Firmware" of type "http://www.onvif.org/ver10/schema":AttachmentData.
    tt__AttachmentData*                  Firmware                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":UpgradeSystemFirmwareResponse is a complexType.
///
/// @note class _tds__UpgradeSystemFirmwareResponse operations:
/// - _tds__UpgradeSystemFirmwareResponse* soap_new__tds__UpgradeSystemFirmwareResponse(soap*) allocate and default initialize
/// - _tds__UpgradeSystemFirmwareResponse* soap_new__tds__UpgradeSystemFirmwareResponse(soap*, int num) allocate and default initialize an array
/// - _tds__UpgradeSystemFirmwareResponse* soap_new_req__tds__UpgradeSystemFirmwareResponse(soap*, ...) allocate, set required members
/// - _tds__UpgradeSystemFirmwareResponse* soap_new_set__tds__UpgradeSystemFirmwareResponse(soap*, ...) allocate, set all public members
/// - _tds__UpgradeSystemFirmwareResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__UpgradeSystemFirmwareResponse(soap*, _tds__UpgradeSystemFirmwareResponse*) deserialize from a stream
/// - int soap_write__tds__UpgradeSystemFirmwareResponse(soap*, _tds__UpgradeSystemFirmwareResponse*) serialize to a stream
/// - _tds__UpgradeSystemFirmwareResponse* _tds__UpgradeSystemFirmwareResponse::soap_dup(soap*) returns deep copy of _tds__UpgradeSystemFirmwareResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__UpgradeSystemFirmwareResponse::soap_del() deep deletes _tds__UpgradeSystemFirmwareResponse data members, use only after _tds__UpgradeSystemFirmwareResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__UpgradeSystemFirmwareResponse::soap_type() returns SOAP_TYPE__tds__UpgradeSystemFirmwareResponse or derived type identifier
class _tds__UpgradeSystemFirmwareResponse
{ public:
/// Element "Message" of type xs:string.
    char*                                Message                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemReboot
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemReboot is a complexType.
///
/// @note class _tds__SystemReboot operations:
/// - _tds__SystemReboot* soap_new__tds__SystemReboot(soap*) allocate and default initialize
/// - _tds__SystemReboot* soap_new__tds__SystemReboot(soap*, int num) allocate and default initialize an array
/// - _tds__SystemReboot* soap_new_req__tds__SystemReboot(soap*, ...) allocate, set required members
/// - _tds__SystemReboot* soap_new_set__tds__SystemReboot(soap*, ...) allocate, set all public members
/// - _tds__SystemReboot::soap_default(soap*) default initialize members
/// - int soap_read__tds__SystemReboot(soap*, _tds__SystemReboot*) deserialize from a stream
/// - int soap_write__tds__SystemReboot(soap*, _tds__SystemReboot*) serialize to a stream
/// - _tds__SystemReboot* _tds__SystemReboot::soap_dup(soap*) returns deep copy of _tds__SystemReboot, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SystemReboot::soap_del() deep deletes _tds__SystemReboot data members, use only after _tds__SystemReboot::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SystemReboot::soap_type() returns SOAP_TYPE__tds__SystemReboot or derived type identifier
class _tds__SystemReboot
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SystemRebootResponse is a complexType.
///
/// @note class _tds__SystemRebootResponse operations:
/// - _tds__SystemRebootResponse* soap_new__tds__SystemRebootResponse(soap*) allocate and default initialize
/// - _tds__SystemRebootResponse* soap_new__tds__SystemRebootResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SystemRebootResponse* soap_new_req__tds__SystemRebootResponse(soap*, ...) allocate, set required members
/// - _tds__SystemRebootResponse* soap_new_set__tds__SystemRebootResponse(soap*, ...) allocate, set all public members
/// - _tds__SystemRebootResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SystemRebootResponse(soap*, _tds__SystemRebootResponse*) deserialize from a stream
/// - int soap_write__tds__SystemRebootResponse(soap*, _tds__SystemRebootResponse*) serialize to a stream
/// - _tds__SystemRebootResponse* _tds__SystemRebootResponse::soap_dup(soap*) returns deep copy of _tds__SystemRebootResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SystemRebootResponse::soap_del() deep deletes _tds__SystemRebootResponse data members, use only after _tds__SystemRebootResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SystemRebootResponse::soap_type() returns SOAP_TYPE__tds__SystemRebootResponse or derived type identifier
class _tds__SystemRebootResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the reboot message sent by the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Message" of type xs:string.
    char*                                Message                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystem
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystem is a complexType.
///
/// @note class _tds__RestoreSystem operations:
/// - _tds__RestoreSystem* soap_new__tds__RestoreSystem(soap*) allocate and default initialize
/// - _tds__RestoreSystem* soap_new__tds__RestoreSystem(soap*, int num) allocate and default initialize an array
/// - _tds__RestoreSystem* soap_new_req__tds__RestoreSystem(soap*, ...) allocate, set required members
/// - _tds__RestoreSystem* soap_new_set__tds__RestoreSystem(soap*, ...) allocate, set all public members
/// - _tds__RestoreSystem::soap_default(soap*) default initialize members
/// - int soap_read__tds__RestoreSystem(soap*, _tds__RestoreSystem*) deserialize from a stream
/// - int soap_write__tds__RestoreSystem(soap*, _tds__RestoreSystem*) serialize to a stream
/// - _tds__RestoreSystem* _tds__RestoreSystem::soap_dup(soap*) returns deep copy of _tds__RestoreSystem, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RestoreSystem::soap_del() deep deletes _tds__RestoreSystem data members, use only after _tds__RestoreSystem::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RestoreSystem::soap_type() returns SOAP_TYPE__tds__RestoreSystem or derived type identifier
class _tds__RestoreSystem
{ public:
/// Size of array of tt__BackupFile* is 1..unbounded.
  $ int                                  __sizeBackupFiles              1;
/// Pointer to array tt__BackupFile* of size 1..unbounded.
    tt__BackupFile*                     *BackupFiles                    1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RestoreSystemResponse is a complexType.
///
/// @note class _tds__RestoreSystemResponse operations:
/// - _tds__RestoreSystemResponse* soap_new__tds__RestoreSystemResponse(soap*) allocate and default initialize
/// - _tds__RestoreSystemResponse* soap_new__tds__RestoreSystemResponse(soap*, int num) allocate and default initialize an array
/// - _tds__RestoreSystemResponse* soap_new_req__tds__RestoreSystemResponse(soap*, ...) allocate, set required members
/// - _tds__RestoreSystemResponse* soap_new_set__tds__RestoreSystemResponse(soap*, ...) allocate, set all public members
/// - _tds__RestoreSystemResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__RestoreSystemResponse(soap*, _tds__RestoreSystemResponse*) deserialize from a stream
/// - int soap_write__tds__RestoreSystemResponse(soap*, _tds__RestoreSystemResponse*) serialize to a stream
/// - _tds__RestoreSystemResponse* _tds__RestoreSystemResponse::soap_dup(soap*) returns deep copy of _tds__RestoreSystemResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RestoreSystemResponse::soap_del() deep deletes _tds__RestoreSystemResponse data members, use only after _tds__RestoreSystemResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RestoreSystemResponse::soap_type() returns SOAP_TYPE__tds__RestoreSystemResponse or derived type identifier
class _tds__RestoreSystemResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackup is a complexType.
///
/// @note class _tds__GetSystemBackup operations:
/// - _tds__GetSystemBackup* soap_new__tds__GetSystemBackup(soap*) allocate and default initialize
/// - _tds__GetSystemBackup* soap_new__tds__GetSystemBackup(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemBackup* soap_new_req__tds__GetSystemBackup(soap*, ...) allocate, set required members
/// - _tds__GetSystemBackup* soap_new_set__tds__GetSystemBackup(soap*, ...) allocate, set all public members
/// - _tds__GetSystemBackup::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemBackup(soap*, _tds__GetSystemBackup*) deserialize from a stream
/// - int soap_write__tds__GetSystemBackup(soap*, _tds__GetSystemBackup*) serialize to a stream
/// - _tds__GetSystemBackup* _tds__GetSystemBackup::soap_dup(soap*) returns deep copy of _tds__GetSystemBackup, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemBackup::soap_del() deep deletes _tds__GetSystemBackup data members, use only after _tds__GetSystemBackup::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemBackup::soap_type() returns SOAP_TYPE__tds__GetSystemBackup or derived type identifier
class _tds__GetSystemBackup
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemBackupResponse is a complexType.
///
/// @note class _tds__GetSystemBackupResponse operations:
/// - _tds__GetSystemBackupResponse* soap_new__tds__GetSystemBackupResponse(soap*) allocate and default initialize
/// - _tds__GetSystemBackupResponse* soap_new__tds__GetSystemBackupResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemBackupResponse* soap_new_req__tds__GetSystemBackupResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemBackupResponse* soap_new_set__tds__GetSystemBackupResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemBackupResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemBackupResponse(soap*, _tds__GetSystemBackupResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemBackupResponse(soap*, _tds__GetSystemBackupResponse*) serialize to a stream
/// - _tds__GetSystemBackupResponse* _tds__GetSystemBackupResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemBackupResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemBackupResponse::soap_del() deep deletes _tds__GetSystemBackupResponse data members, use only after _tds__GetSystemBackupResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemBackupResponse::soap_type() returns SOAP_TYPE__tds__GetSystemBackupResponse or derived type identifier
class _tds__GetSystemBackupResponse
{ public:
/// Size of array of tt__BackupFile* is 1..unbounded.
  $ int                                  __sizeBackupFiles              1;
/// Pointer to array tt__BackupFile* of size 1..unbounded.
    tt__BackupFile*                     *BackupFiles                    1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformation is a complexType.
///
/// @note class _tds__GetSystemSupportInformation operations:
/// - _tds__GetSystemSupportInformation* soap_new__tds__GetSystemSupportInformation(soap*) allocate and default initialize
/// - _tds__GetSystemSupportInformation* soap_new__tds__GetSystemSupportInformation(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemSupportInformation* soap_new_req__tds__GetSystemSupportInformation(soap*, ...) allocate, set required members
/// - _tds__GetSystemSupportInformation* soap_new_set__tds__GetSystemSupportInformation(soap*, ...) allocate, set all public members
/// - _tds__GetSystemSupportInformation::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemSupportInformation(soap*, _tds__GetSystemSupportInformation*) deserialize from a stream
/// - int soap_write__tds__GetSystemSupportInformation(soap*, _tds__GetSystemSupportInformation*) serialize to a stream
/// - _tds__GetSystemSupportInformation* _tds__GetSystemSupportInformation::soap_dup(soap*) returns deep copy of _tds__GetSystemSupportInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemSupportInformation::soap_del() deep deletes _tds__GetSystemSupportInformation data members, use only after _tds__GetSystemSupportInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemSupportInformation::soap_type() returns SOAP_TYPE__tds__GetSystemSupportInformation or derived type identifier
class _tds__GetSystemSupportInformation
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemSupportInformationResponse is a complexType.
///
/// @note class _tds__GetSystemSupportInformationResponse operations:
/// - _tds__GetSystemSupportInformationResponse* soap_new__tds__GetSystemSupportInformationResponse(soap*) allocate and default initialize
/// - _tds__GetSystemSupportInformationResponse* soap_new__tds__GetSystemSupportInformationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemSupportInformationResponse* soap_new_req__tds__GetSystemSupportInformationResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemSupportInformationResponse* soap_new_set__tds__GetSystemSupportInformationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemSupportInformationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemSupportInformationResponse(soap*, _tds__GetSystemSupportInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemSupportInformationResponse(soap*, _tds__GetSystemSupportInformationResponse*) serialize to a stream
/// - _tds__GetSystemSupportInformationResponse* _tds__GetSystemSupportInformationResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemSupportInformationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemSupportInformationResponse::soap_del() deep deletes _tds__GetSystemSupportInformationResponse data members, use only after _tds__GetSystemSupportInformationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemSupportInformationResponse::soap_type() returns SOAP_TYPE__tds__GetSystemSupportInformationResponse or derived type identifier
class _tds__GetSystemSupportInformationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the arbitary device diagnostics information.
/// </BLOCKQUOTE></PRE>
///
/// Element "SupportInformation" of type "http://www.onvif.org/ver10/schema":SupportInformation.
    tt__SupportInformation*              SupportInformation             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLog
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLog is a complexType.
///
/// @note class _tds__GetSystemLog operations:
/// - _tds__GetSystemLog* soap_new__tds__GetSystemLog(soap*) allocate and default initialize
/// - _tds__GetSystemLog* soap_new__tds__GetSystemLog(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemLog* soap_new_req__tds__GetSystemLog(soap*, ...) allocate, set required members
/// - _tds__GetSystemLog* soap_new_set__tds__GetSystemLog(soap*, ...) allocate, set all public members
/// - _tds__GetSystemLog::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemLog(soap*, _tds__GetSystemLog*) deserialize from a stream
/// - int soap_write__tds__GetSystemLog(soap*, _tds__GetSystemLog*) serialize to a stream
/// - _tds__GetSystemLog* _tds__GetSystemLog::soap_dup(soap*) returns deep copy of _tds__GetSystemLog, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemLog::soap_del() deep deletes _tds__GetSystemLog data members, use only after _tds__GetSystemLog::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemLog::soap_type() returns SOAP_TYPE__tds__GetSystemLog or derived type identifier
class _tds__GetSystemLog
{ public:
/// <PRE><BLOCKQUOTE>
///   Specifies the type of system log to get.
/// </BLOCKQUOTE></PRE>
///
/// Element "LogType" of type "http://www.onvif.org/ver10/schema":SystemLogType.
    enum tt__SystemLogType               LogType                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetSystemLogResponse is a complexType.
///
/// @note class _tds__GetSystemLogResponse operations:
/// - _tds__GetSystemLogResponse* soap_new__tds__GetSystemLogResponse(soap*) allocate and default initialize
/// - _tds__GetSystemLogResponse* soap_new__tds__GetSystemLogResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetSystemLogResponse* soap_new_req__tds__GetSystemLogResponse(soap*, ...) allocate, set required members
/// - _tds__GetSystemLogResponse* soap_new_set__tds__GetSystemLogResponse(soap*, ...) allocate, set all public members
/// - _tds__GetSystemLogResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetSystemLogResponse(soap*, _tds__GetSystemLogResponse*) deserialize from a stream
/// - int soap_write__tds__GetSystemLogResponse(soap*, _tds__GetSystemLogResponse*) serialize to a stream
/// - _tds__GetSystemLogResponse* _tds__GetSystemLogResponse::soap_dup(soap*) returns deep copy of _tds__GetSystemLogResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetSystemLogResponse::soap_del() deep deletes _tds__GetSystemLogResponse data members, use only after _tds__GetSystemLogResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetSystemLogResponse::soap_type() returns SOAP_TYPE__tds__GetSystemLogResponse or derived type identifier
class _tds__GetSystemLogResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the system log information.
/// </BLOCKQUOTE></PRE>
///
/// Element "SystemLog" of type "http://www.onvif.org/ver10/schema":SystemLog.
    tt__SystemLog*                       SystemLog                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopes is a complexType.
///
/// @note class _tds__GetScopes operations:
/// - _tds__GetScopes* soap_new__tds__GetScopes(soap*) allocate and default initialize
/// - _tds__GetScopes* soap_new__tds__GetScopes(soap*, int num) allocate and default initialize an array
/// - _tds__GetScopes* soap_new_req__tds__GetScopes(soap*, ...) allocate, set required members
/// - _tds__GetScopes* soap_new_set__tds__GetScopes(soap*, ...) allocate, set all public members
/// - _tds__GetScopes::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetScopes(soap*, _tds__GetScopes*) deserialize from a stream
/// - int soap_write__tds__GetScopes(soap*, _tds__GetScopes*) serialize to a stream
/// - _tds__GetScopes* _tds__GetScopes::soap_dup(soap*) returns deep copy of _tds__GetScopes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetScopes::soap_del() deep deletes _tds__GetScopes data members, use only after _tds__GetScopes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetScopes::soap_type() returns SOAP_TYPE__tds__GetScopes or derived type identifier
class _tds__GetScopes
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetScopesResponse is a complexType.
///
/// @note class _tds__GetScopesResponse operations:
/// - _tds__GetScopesResponse* soap_new__tds__GetScopesResponse(soap*) allocate and default initialize
/// - _tds__GetScopesResponse* soap_new__tds__GetScopesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetScopesResponse* soap_new_req__tds__GetScopesResponse(soap*, ...) allocate, set required members
/// - _tds__GetScopesResponse* soap_new_set__tds__GetScopesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetScopesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetScopesResponse(soap*, _tds__GetScopesResponse*) deserialize from a stream
/// - int soap_write__tds__GetScopesResponse(soap*, _tds__GetScopesResponse*) serialize to a stream
/// - _tds__GetScopesResponse* _tds__GetScopesResponse::soap_dup(soap*) returns deep copy of _tds__GetScopesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetScopesResponse::soap_del() deep deletes _tds__GetScopesResponse data members, use only after _tds__GetScopesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetScopesResponse::soap_type() returns SOAP_TYPE__tds__GetScopesResponse or derived type identifier
class _tds__GetScopesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URI definining the device scopes. Scope parameters can be of two types: fixed and configurable. Fixed parameters can not be altered.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Scope* is 1..unbounded.
  $ int                                  __sizeScopes                   1;
/// Pointer to array tt__Scope* of size 1..unbounded.
    tt__Scope*                          *Scopes                         1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopes is a complexType.
///
/// @note class _tds__SetScopes operations:
/// - _tds__SetScopes* soap_new__tds__SetScopes(soap*) allocate and default initialize
/// - _tds__SetScopes* soap_new__tds__SetScopes(soap*, int num) allocate and default initialize an array
/// - _tds__SetScopes* soap_new_req__tds__SetScopes(soap*, ...) allocate, set required members
/// - _tds__SetScopes* soap_new_set__tds__SetScopes(soap*, ...) allocate, set all public members
/// - _tds__SetScopes::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetScopes(soap*, _tds__SetScopes*) deserialize from a stream
/// - int soap_write__tds__SetScopes(soap*, _tds__SetScopes*) serialize to a stream
/// - _tds__SetScopes* _tds__SetScopes::soap_dup(soap*) returns deep copy of _tds__SetScopes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetScopes::soap_del() deep deletes _tds__SetScopes data members, use only after _tds__SetScopes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetScopes::soap_type() returns SOAP_TYPE__tds__SetScopes or derived type identifier
class _tds__SetScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of scope parameters that will replace all existing configurable scope parameters.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI is 1..unbounded.
  $ int                                  __sizeScopes                   1;
/// Pointer to array xsd__anyURI of size 1..unbounded.
    xsd__anyURI                         *Scopes                         1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetScopesResponse is a complexType.
///
/// @note class _tds__SetScopesResponse operations:
/// - _tds__SetScopesResponse* soap_new__tds__SetScopesResponse(soap*) allocate and default initialize
/// - _tds__SetScopesResponse* soap_new__tds__SetScopesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetScopesResponse* soap_new_req__tds__SetScopesResponse(soap*, ...) allocate, set required members
/// - _tds__SetScopesResponse* soap_new_set__tds__SetScopesResponse(soap*, ...) allocate, set all public members
/// - _tds__SetScopesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetScopesResponse(soap*, _tds__SetScopesResponse*) deserialize from a stream
/// - int soap_write__tds__SetScopesResponse(soap*, _tds__SetScopesResponse*) serialize to a stream
/// - _tds__SetScopesResponse* _tds__SetScopesResponse::soap_dup(soap*) returns deep copy of _tds__SetScopesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetScopesResponse::soap_del() deep deletes _tds__SetScopesResponse data members, use only after _tds__SetScopesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetScopesResponse::soap_type() returns SOAP_TYPE__tds__SetScopesResponse or derived type identifier
class _tds__SetScopesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopes is a complexType.
///
/// @note class _tds__AddScopes operations:
/// - _tds__AddScopes* soap_new__tds__AddScopes(soap*) allocate and default initialize
/// - _tds__AddScopes* soap_new__tds__AddScopes(soap*, int num) allocate and default initialize an array
/// - _tds__AddScopes* soap_new_req__tds__AddScopes(soap*, ...) allocate, set required members
/// - _tds__AddScopes* soap_new_set__tds__AddScopes(soap*, ...) allocate, set all public members
/// - _tds__AddScopes::soap_default(soap*) default initialize members
/// - int soap_read__tds__AddScopes(soap*, _tds__AddScopes*) deserialize from a stream
/// - int soap_write__tds__AddScopes(soap*, _tds__AddScopes*) serialize to a stream
/// - _tds__AddScopes* _tds__AddScopes::soap_dup(soap*) returns deep copy of _tds__AddScopes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__AddScopes::soap_del() deep deletes _tds__AddScopes data members, use only after _tds__AddScopes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__AddScopes::soap_type() returns SOAP_TYPE__tds__AddScopes or derived type identifier
class _tds__AddScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of new configurable scope parameters that will be added to the existing configurable scope.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI is 1..unbounded.
  $ int                                  __sizeScopeItem                1;
/// Pointer to array xsd__anyURI of size 1..unbounded.
    xsd__anyURI                         *ScopeItem                      1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddScopesResponse is a complexType.
///
/// @note class _tds__AddScopesResponse operations:
/// - _tds__AddScopesResponse* soap_new__tds__AddScopesResponse(soap*) allocate and default initialize
/// - _tds__AddScopesResponse* soap_new__tds__AddScopesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__AddScopesResponse* soap_new_req__tds__AddScopesResponse(soap*, ...) allocate, set required members
/// - _tds__AddScopesResponse* soap_new_set__tds__AddScopesResponse(soap*, ...) allocate, set all public members
/// - _tds__AddScopesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__AddScopesResponse(soap*, _tds__AddScopesResponse*) deserialize from a stream
/// - int soap_write__tds__AddScopesResponse(soap*, _tds__AddScopesResponse*) serialize to a stream
/// - _tds__AddScopesResponse* _tds__AddScopesResponse::soap_dup(soap*) returns deep copy of _tds__AddScopesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__AddScopesResponse::soap_del() deep deletes _tds__AddScopesResponse data members, use only after _tds__AddScopesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__AddScopesResponse::soap_type() returns SOAP_TYPE__tds__AddScopesResponse or derived type identifier
class _tds__AddScopesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopes
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopes is a complexType.
///
/// @note class _tds__RemoveScopes operations:
/// - _tds__RemoveScopes* soap_new__tds__RemoveScopes(soap*) allocate and default initialize
/// - _tds__RemoveScopes* soap_new__tds__RemoveScopes(soap*, int num) allocate and default initialize an array
/// - _tds__RemoveScopes* soap_new_req__tds__RemoveScopes(soap*, ...) allocate, set required members
/// - _tds__RemoveScopes* soap_new_set__tds__RemoveScopes(soap*, ...) allocate, set all public members
/// - _tds__RemoveScopes::soap_default(soap*) default initialize members
/// - int soap_read__tds__RemoveScopes(soap*, _tds__RemoveScopes*) deserialize from a stream
/// - int soap_write__tds__RemoveScopes(soap*, _tds__RemoveScopes*) serialize to a stream
/// - _tds__RemoveScopes* _tds__RemoveScopes::soap_dup(soap*) returns deep copy of _tds__RemoveScopes, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RemoveScopes::soap_del() deep deletes _tds__RemoveScopes data members, use only after _tds__RemoveScopes::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RemoveScopes::soap_type() returns SOAP_TYPE__tds__RemoveScopes or derived type identifier
class _tds__RemoveScopes
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that should be removed from the device scope.<br/>
///   Note that the response message always will match the request or an error will be returned. The use of the response is for that reason deprecated.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI is 1..unbounded.
  $ int                                  __sizeScopeItem                1;
/// Pointer to array xsd__anyURI of size 1..unbounded.
    xsd__anyURI                         *ScopeItem                      1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveScopesResponse is a complexType.
///
/// @note class _tds__RemoveScopesResponse operations:
/// - _tds__RemoveScopesResponse* soap_new__tds__RemoveScopesResponse(soap*) allocate and default initialize
/// - _tds__RemoveScopesResponse* soap_new__tds__RemoveScopesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__RemoveScopesResponse* soap_new_req__tds__RemoveScopesResponse(soap*, ...) allocate, set required members
/// - _tds__RemoveScopesResponse* soap_new_set__tds__RemoveScopesResponse(soap*, ...) allocate, set all public members
/// - _tds__RemoveScopesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__RemoveScopesResponse(soap*, _tds__RemoveScopesResponse*) deserialize from a stream
/// - int soap_write__tds__RemoveScopesResponse(soap*, _tds__RemoveScopesResponse*) serialize to a stream
/// - _tds__RemoveScopesResponse* _tds__RemoveScopesResponse::soap_dup(soap*) returns deep copy of _tds__RemoveScopesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RemoveScopesResponse::soap_del() deep deletes _tds__RemoveScopesResponse data members, use only after _tds__RemoveScopesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RemoveScopesResponse::soap_type() returns SOAP_TYPE__tds__RemoveScopesResponse or derived type identifier
class _tds__RemoveScopesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of URIs that has been removed from the device scope
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__anyURI is 0..unbounded.
  $ int                                  __sizeScopeItem                0;
/// Pointer to array xsd__anyURI of size 0..unbounded.
    xsd__anyURI                         *ScopeItem                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryMode is a complexType.
///
/// @note class _tds__GetDiscoveryMode operations:
/// - _tds__GetDiscoveryMode* soap_new__tds__GetDiscoveryMode(soap*) allocate and default initialize
/// - _tds__GetDiscoveryMode* soap_new__tds__GetDiscoveryMode(soap*, int num) allocate and default initialize an array
/// - _tds__GetDiscoveryMode* soap_new_req__tds__GetDiscoveryMode(soap*, ...) allocate, set required members
/// - _tds__GetDiscoveryMode* soap_new_set__tds__GetDiscoveryMode(soap*, ...) allocate, set all public members
/// - _tds__GetDiscoveryMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDiscoveryMode(soap*, _tds__GetDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__GetDiscoveryMode(soap*, _tds__GetDiscoveryMode*) serialize to a stream
/// - _tds__GetDiscoveryMode* _tds__GetDiscoveryMode::soap_dup(soap*) returns deep copy of _tds__GetDiscoveryMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDiscoveryMode::soap_del() deep deletes _tds__GetDiscoveryMode data members, use only after _tds__GetDiscoveryMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDiscoveryMode::soap_type() returns SOAP_TYPE__tds__GetDiscoveryMode or derived type identifier
class _tds__GetDiscoveryMode
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDiscoveryModeResponse is a complexType.
///
/// @note class _tds__GetDiscoveryModeResponse operations:
/// - _tds__GetDiscoveryModeResponse* soap_new__tds__GetDiscoveryModeResponse(soap*) allocate and default initialize
/// - _tds__GetDiscoveryModeResponse* soap_new__tds__GetDiscoveryModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDiscoveryModeResponse* soap_new_req__tds__GetDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - _tds__GetDiscoveryModeResponse* soap_new_set__tds__GetDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDiscoveryModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDiscoveryModeResponse(soap*, _tds__GetDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetDiscoveryModeResponse(soap*, _tds__GetDiscoveryModeResponse*) serialize to a stream
/// - _tds__GetDiscoveryModeResponse* _tds__GetDiscoveryModeResponse::soap_dup(soap*) returns deep copy of _tds__GetDiscoveryModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDiscoveryModeResponse::soap_del() deep deletes _tds__GetDiscoveryModeResponse data members, use only after _tds__GetDiscoveryModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDiscoveryModeResponse::soap_type() returns SOAP_TYPE__tds__GetDiscoveryModeResponse or derived type identifier
class _tds__GetDiscoveryModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryMode is a complexType.
///
/// @note class _tds__SetDiscoveryMode operations:
/// - _tds__SetDiscoveryMode* soap_new__tds__SetDiscoveryMode(soap*) allocate and default initialize
/// - _tds__SetDiscoveryMode* soap_new__tds__SetDiscoveryMode(soap*, int num) allocate and default initialize an array
/// - _tds__SetDiscoveryMode* soap_new_req__tds__SetDiscoveryMode(soap*, ...) allocate, set required members
/// - _tds__SetDiscoveryMode* soap_new_set__tds__SetDiscoveryMode(soap*, ...) allocate, set all public members
/// - _tds__SetDiscoveryMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDiscoveryMode(soap*, _tds__SetDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__SetDiscoveryMode(soap*, _tds__SetDiscoveryMode*) serialize to a stream
/// - _tds__SetDiscoveryMode* _tds__SetDiscoveryMode::soap_dup(soap*) returns deep copy of _tds__SetDiscoveryMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDiscoveryMode::soap_del() deep deletes _tds__SetDiscoveryMode data members, use only after _tds__SetDiscoveryMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDiscoveryMode::soap_type() returns SOAP_TYPE__tds__SetDiscoveryMode or derived type identifier
class _tds__SetDiscoveryMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "DiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               DiscoveryMode                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDiscoveryModeResponse is a complexType.
///
/// @note class _tds__SetDiscoveryModeResponse operations:
/// - _tds__SetDiscoveryModeResponse* soap_new__tds__SetDiscoveryModeResponse(soap*) allocate and default initialize
/// - _tds__SetDiscoveryModeResponse* soap_new__tds__SetDiscoveryModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDiscoveryModeResponse* soap_new_req__tds__SetDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - _tds__SetDiscoveryModeResponse* soap_new_set__tds__SetDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDiscoveryModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDiscoveryModeResponse(soap*, _tds__SetDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetDiscoveryModeResponse(soap*, _tds__SetDiscoveryModeResponse*) serialize to a stream
/// - _tds__SetDiscoveryModeResponse* _tds__SetDiscoveryModeResponse::soap_dup(soap*) returns deep copy of _tds__SetDiscoveryModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDiscoveryModeResponse::soap_del() deep deletes _tds__SetDiscoveryModeResponse data members, use only after _tds__SetDiscoveryModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDiscoveryModeResponse::soap_type() returns SOAP_TYPE__tds__SetDiscoveryModeResponse or derived type identifier
class _tds__SetDiscoveryModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryMode is a complexType.
///
/// @note class _tds__GetRemoteDiscoveryMode operations:
/// - _tds__GetRemoteDiscoveryMode* soap_new__tds__GetRemoteDiscoveryMode(soap*) allocate and default initialize
/// - _tds__GetRemoteDiscoveryMode* soap_new__tds__GetRemoteDiscoveryMode(soap*, int num) allocate and default initialize an array
/// - _tds__GetRemoteDiscoveryMode* soap_new_req__tds__GetRemoteDiscoveryMode(soap*, ...) allocate, set required members
/// - _tds__GetRemoteDiscoveryMode* soap_new_set__tds__GetRemoteDiscoveryMode(soap*, ...) allocate, set all public members
/// - _tds__GetRemoteDiscoveryMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRemoteDiscoveryMode(soap*, _tds__GetRemoteDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__GetRemoteDiscoveryMode(soap*, _tds__GetRemoteDiscoveryMode*) serialize to a stream
/// - _tds__GetRemoteDiscoveryMode* _tds__GetRemoteDiscoveryMode::soap_dup(soap*) returns deep copy of _tds__GetRemoteDiscoveryMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRemoteDiscoveryMode::soap_del() deep deletes _tds__GetRemoteDiscoveryMode data members, use only after _tds__GetRemoteDiscoveryMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRemoteDiscoveryMode::soap_type() returns SOAP_TYPE__tds__GetRemoteDiscoveryMode or derived type identifier
class _tds__GetRemoteDiscoveryMode
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteDiscoveryModeResponse is a complexType.
///
/// @note class _tds__GetRemoteDiscoveryModeResponse operations:
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new__tds__GetRemoteDiscoveryModeResponse(soap*) allocate and default initialize
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new__tds__GetRemoteDiscoveryModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new_req__tds__GetRemoteDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - _tds__GetRemoteDiscoveryModeResponse* soap_new_set__tds__GetRemoteDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - _tds__GetRemoteDiscoveryModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRemoteDiscoveryModeResponse(soap*, _tds__GetRemoteDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetRemoteDiscoveryModeResponse(soap*, _tds__GetRemoteDiscoveryModeResponse*) serialize to a stream
/// - _tds__GetRemoteDiscoveryModeResponse* _tds__GetRemoteDiscoveryModeResponse::soap_dup(soap*) returns deep copy of _tds__GetRemoteDiscoveryModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRemoteDiscoveryModeResponse::soap_del() deep deletes _tds__GetRemoteDiscoveryModeResponse data members, use only after _tds__GetRemoteDiscoveryModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRemoteDiscoveryModeResponse::soap_type() returns SOAP_TYPE__tds__GetRemoteDiscoveryModeResponse or derived type identifier
class _tds__GetRemoteDiscoveryModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryMode is a complexType.
///
/// @note class _tds__SetRemoteDiscoveryMode operations:
/// - _tds__SetRemoteDiscoveryMode* soap_new__tds__SetRemoteDiscoveryMode(soap*) allocate and default initialize
/// - _tds__SetRemoteDiscoveryMode* soap_new__tds__SetRemoteDiscoveryMode(soap*, int num) allocate and default initialize an array
/// - _tds__SetRemoteDiscoveryMode* soap_new_req__tds__SetRemoteDiscoveryMode(soap*, ...) allocate, set required members
/// - _tds__SetRemoteDiscoveryMode* soap_new_set__tds__SetRemoteDiscoveryMode(soap*, ...) allocate, set all public members
/// - _tds__SetRemoteDiscoveryMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRemoteDiscoveryMode(soap*, _tds__SetRemoteDiscoveryMode*) deserialize from a stream
/// - int soap_write__tds__SetRemoteDiscoveryMode(soap*, _tds__SetRemoteDiscoveryMode*) serialize to a stream
/// - _tds__SetRemoteDiscoveryMode* _tds__SetRemoteDiscoveryMode::soap_dup(soap*) returns deep copy of _tds__SetRemoteDiscoveryMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRemoteDiscoveryMode::soap_del() deep deletes _tds__SetRemoteDiscoveryMode data members, use only after _tds__SetRemoteDiscoveryMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRemoteDiscoveryMode::soap_type() returns SOAP_TYPE__tds__SetRemoteDiscoveryMode or derived type identifier
class _tds__SetRemoteDiscoveryMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicator of discovery mode: Discoverable, NonDiscoverable.
/// </BLOCKQUOTE></PRE>
///
/// Element "RemoteDiscoveryMode" of type "http://www.onvif.org/ver10/schema":DiscoveryMode.
    enum tt__DiscoveryMode               RemoteDiscoveryMode            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteDiscoveryModeResponse is a complexType.
///
/// @note class _tds__SetRemoteDiscoveryModeResponse operations:
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new__tds__SetRemoteDiscoveryModeResponse(soap*) allocate and default initialize
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new__tds__SetRemoteDiscoveryModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new_req__tds__SetRemoteDiscoveryModeResponse(soap*, ...) allocate, set required members
/// - _tds__SetRemoteDiscoveryModeResponse* soap_new_set__tds__SetRemoteDiscoveryModeResponse(soap*, ...) allocate, set all public members
/// - _tds__SetRemoteDiscoveryModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRemoteDiscoveryModeResponse(soap*, _tds__SetRemoteDiscoveryModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetRemoteDiscoveryModeResponse(soap*, _tds__SetRemoteDiscoveryModeResponse*) serialize to a stream
/// - _tds__SetRemoteDiscoveryModeResponse* _tds__SetRemoteDiscoveryModeResponse::soap_dup(soap*) returns deep copy of _tds__SetRemoteDiscoveryModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRemoteDiscoveryModeResponse::soap_del() deep deletes _tds__SetRemoteDiscoveryModeResponse data members, use only after _tds__SetRemoteDiscoveryModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRemoteDiscoveryModeResponse::soap_type() returns SOAP_TYPE__tds__SetRemoteDiscoveryModeResponse or derived type identifier
class _tds__SetRemoteDiscoveryModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddresses is a complexType.
///
/// @note class _tds__GetDPAddresses operations:
/// - _tds__GetDPAddresses* soap_new__tds__GetDPAddresses(soap*) allocate and default initialize
/// - _tds__GetDPAddresses* soap_new__tds__GetDPAddresses(soap*, int num) allocate and default initialize an array
/// - _tds__GetDPAddresses* soap_new_req__tds__GetDPAddresses(soap*, ...) allocate, set required members
/// - _tds__GetDPAddresses* soap_new_set__tds__GetDPAddresses(soap*, ...) allocate, set all public members
/// - _tds__GetDPAddresses::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDPAddresses(soap*, _tds__GetDPAddresses*) deserialize from a stream
/// - int soap_write__tds__GetDPAddresses(soap*, _tds__GetDPAddresses*) serialize to a stream
/// - _tds__GetDPAddresses* _tds__GetDPAddresses::soap_dup(soap*) returns deep copy of _tds__GetDPAddresses, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDPAddresses::soap_del() deep deletes _tds__GetDPAddresses data members, use only after _tds__GetDPAddresses::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDPAddresses::soap_type() returns SOAP_TYPE__tds__GetDPAddresses or derived type identifier
class _tds__GetDPAddresses
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDPAddressesResponse is a complexType.
///
/// @note class _tds__GetDPAddressesResponse operations:
/// - _tds__GetDPAddressesResponse* soap_new__tds__GetDPAddressesResponse(soap*) allocate and default initialize
/// - _tds__GetDPAddressesResponse* soap_new__tds__GetDPAddressesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDPAddressesResponse* soap_new_req__tds__GetDPAddressesResponse(soap*, ...) allocate, set required members
/// - _tds__GetDPAddressesResponse* soap_new_set__tds__GetDPAddressesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDPAddressesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDPAddressesResponse(soap*, _tds__GetDPAddressesResponse*) deserialize from a stream
/// - int soap_write__tds__GetDPAddressesResponse(soap*, _tds__GetDPAddressesResponse*) serialize to a stream
/// - _tds__GetDPAddressesResponse* _tds__GetDPAddressesResponse::soap_dup(soap*) returns deep copy of _tds__GetDPAddressesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDPAddressesResponse::soap_del() deep deletes _tds__GetDPAddressesResponse data members, use only after _tds__GetDPAddressesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDPAddressesResponse::soap_type() returns SOAP_TYPE__tds__GetDPAddressesResponse or derived type identifier
class _tds__GetDPAddressesResponse
{ public:
/// Size of array of tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeDPAddress                0;
/// Pointer to array tt__NetworkHost* of size 0..unbounded.
    tt__NetworkHost*                    *DPAddress                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddresses is a complexType.
///
/// @note class _tds__SetDPAddresses operations:
/// - _tds__SetDPAddresses* soap_new__tds__SetDPAddresses(soap*) allocate and default initialize
/// - _tds__SetDPAddresses* soap_new__tds__SetDPAddresses(soap*, int num) allocate and default initialize an array
/// - _tds__SetDPAddresses* soap_new_req__tds__SetDPAddresses(soap*, ...) allocate, set required members
/// - _tds__SetDPAddresses* soap_new_set__tds__SetDPAddresses(soap*, ...) allocate, set all public members
/// - _tds__SetDPAddresses::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDPAddresses(soap*, _tds__SetDPAddresses*) deserialize from a stream
/// - int soap_write__tds__SetDPAddresses(soap*, _tds__SetDPAddresses*) serialize to a stream
/// - _tds__SetDPAddresses* _tds__SetDPAddresses::soap_dup(soap*) returns deep copy of _tds__SetDPAddresses, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDPAddresses::soap_del() deep deletes _tds__SetDPAddresses data members, use only after _tds__SetDPAddresses::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDPAddresses::soap_type() returns SOAP_TYPE__tds__SetDPAddresses or derived type identifier
class _tds__SetDPAddresses
{ public:
/// Size of array of tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeDPAddress                0;
/// Pointer to array tt__NetworkHost* of size 0..unbounded.
    tt__NetworkHost*                    *DPAddress                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDPAddressesResponse is a complexType.
///
/// @note class _tds__SetDPAddressesResponse operations:
/// - _tds__SetDPAddressesResponse* soap_new__tds__SetDPAddressesResponse(soap*) allocate and default initialize
/// - _tds__SetDPAddressesResponse* soap_new__tds__SetDPAddressesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDPAddressesResponse* soap_new_req__tds__SetDPAddressesResponse(soap*, ...) allocate, set required members
/// - _tds__SetDPAddressesResponse* soap_new_set__tds__SetDPAddressesResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDPAddressesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDPAddressesResponse(soap*, _tds__SetDPAddressesResponse*) deserialize from a stream
/// - int soap_write__tds__SetDPAddressesResponse(soap*, _tds__SetDPAddressesResponse*) serialize to a stream
/// - _tds__SetDPAddressesResponse* _tds__SetDPAddressesResponse::soap_dup(soap*) returns deep copy of _tds__SetDPAddressesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDPAddressesResponse::soap_del() deep deletes _tds__SetDPAddressesResponse data members, use only after _tds__SetDPAddressesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDPAddressesResponse::soap_type() returns SOAP_TYPE__tds__SetDPAddressesResponse or derived type identifier
class _tds__SetDPAddressesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReference is a complexType.
///
/// @note class _tds__GetEndpointReference operations:
/// - _tds__GetEndpointReference* soap_new__tds__GetEndpointReference(soap*) allocate and default initialize
/// - _tds__GetEndpointReference* soap_new__tds__GetEndpointReference(soap*, int num) allocate and default initialize an array
/// - _tds__GetEndpointReference* soap_new_req__tds__GetEndpointReference(soap*, ...) allocate, set required members
/// - _tds__GetEndpointReference* soap_new_set__tds__GetEndpointReference(soap*, ...) allocate, set all public members
/// - _tds__GetEndpointReference::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetEndpointReference(soap*, _tds__GetEndpointReference*) deserialize from a stream
/// - int soap_write__tds__GetEndpointReference(soap*, _tds__GetEndpointReference*) serialize to a stream
/// - _tds__GetEndpointReference* _tds__GetEndpointReference::soap_dup(soap*) returns deep copy of _tds__GetEndpointReference, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetEndpointReference::soap_del() deep deletes _tds__GetEndpointReference data members, use only after _tds__GetEndpointReference::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetEndpointReference::soap_type() returns SOAP_TYPE__tds__GetEndpointReference or derived type identifier
class _tds__GetEndpointReference
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetEndpointReferenceResponse is a complexType.
///
/// @note class _tds__GetEndpointReferenceResponse operations:
/// - _tds__GetEndpointReferenceResponse* soap_new__tds__GetEndpointReferenceResponse(soap*) allocate and default initialize
/// - _tds__GetEndpointReferenceResponse* soap_new__tds__GetEndpointReferenceResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetEndpointReferenceResponse* soap_new_req__tds__GetEndpointReferenceResponse(soap*, ...) allocate, set required members
/// - _tds__GetEndpointReferenceResponse* soap_new_set__tds__GetEndpointReferenceResponse(soap*, ...) allocate, set all public members
/// - _tds__GetEndpointReferenceResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetEndpointReferenceResponse(soap*, _tds__GetEndpointReferenceResponse*) deserialize from a stream
/// - int soap_write__tds__GetEndpointReferenceResponse(soap*, _tds__GetEndpointReferenceResponse*) serialize to a stream
/// - _tds__GetEndpointReferenceResponse* _tds__GetEndpointReferenceResponse::soap_dup(soap*) returns deep copy of _tds__GetEndpointReferenceResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetEndpointReferenceResponse::soap_del() deep deletes _tds__GetEndpointReferenceResponse data members, use only after _tds__GetEndpointReferenceResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetEndpointReferenceResponse::soap_type() returns SOAP_TYPE__tds__GetEndpointReferenceResponse or derived type identifier
class _tds__GetEndpointReferenceResponse
{ public:
/// Element "GUID" of type xs:string.
    char*                                GUID                           1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUser is a complexType.
///
/// @note class _tds__GetRemoteUser operations:
/// - _tds__GetRemoteUser* soap_new__tds__GetRemoteUser(soap*) allocate and default initialize
/// - _tds__GetRemoteUser* soap_new__tds__GetRemoteUser(soap*, int num) allocate and default initialize an array
/// - _tds__GetRemoteUser* soap_new_req__tds__GetRemoteUser(soap*, ...) allocate, set required members
/// - _tds__GetRemoteUser* soap_new_set__tds__GetRemoteUser(soap*, ...) allocate, set all public members
/// - _tds__GetRemoteUser::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRemoteUser(soap*, _tds__GetRemoteUser*) deserialize from a stream
/// - int soap_write__tds__GetRemoteUser(soap*, _tds__GetRemoteUser*) serialize to a stream
/// - _tds__GetRemoteUser* _tds__GetRemoteUser::soap_dup(soap*) returns deep copy of _tds__GetRemoteUser, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRemoteUser::soap_del() deep deletes _tds__GetRemoteUser data members, use only after _tds__GetRemoteUser::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRemoteUser::soap_type() returns SOAP_TYPE__tds__GetRemoteUser or derived type identifier
class _tds__GetRemoteUser
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetRemoteUserResponse is a complexType.
///
/// @note class _tds__GetRemoteUserResponse operations:
/// - _tds__GetRemoteUserResponse* soap_new__tds__GetRemoteUserResponse(soap*) allocate and default initialize
/// - _tds__GetRemoteUserResponse* soap_new__tds__GetRemoteUserResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetRemoteUserResponse* soap_new_req__tds__GetRemoteUserResponse(soap*, ...) allocate, set required members
/// - _tds__GetRemoteUserResponse* soap_new_set__tds__GetRemoteUserResponse(soap*, ...) allocate, set all public members
/// - _tds__GetRemoteUserResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetRemoteUserResponse(soap*, _tds__GetRemoteUserResponse*) deserialize from a stream
/// - int soap_write__tds__GetRemoteUserResponse(soap*, _tds__GetRemoteUserResponse*) serialize to a stream
/// - _tds__GetRemoteUserResponse* _tds__GetRemoteUserResponse::soap_dup(soap*) returns deep copy of _tds__GetRemoteUserResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetRemoteUserResponse::soap_del() deep deletes _tds__GetRemoteUserResponse data members, use only after _tds__GetRemoteUserResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetRemoteUserResponse::soap_type() returns SOAP_TYPE__tds__GetRemoteUserResponse or derived type identifier
class _tds__GetRemoteUserResponse
{ public:
/// Element "RemoteUser" of type "http://www.onvif.org/ver10/schema":RemoteUser.
    tt__RemoteUser*                      RemoteUser                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUser is a complexType.
///
/// @note class _tds__SetRemoteUser operations:
/// - _tds__SetRemoteUser* soap_new__tds__SetRemoteUser(soap*) allocate and default initialize
/// - _tds__SetRemoteUser* soap_new__tds__SetRemoteUser(soap*, int num) allocate and default initialize an array
/// - _tds__SetRemoteUser* soap_new_req__tds__SetRemoteUser(soap*, ...) allocate, set required members
/// - _tds__SetRemoteUser* soap_new_set__tds__SetRemoteUser(soap*, ...) allocate, set all public members
/// - _tds__SetRemoteUser::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRemoteUser(soap*, _tds__SetRemoteUser*) deserialize from a stream
/// - int soap_write__tds__SetRemoteUser(soap*, _tds__SetRemoteUser*) serialize to a stream
/// - _tds__SetRemoteUser* _tds__SetRemoteUser::soap_dup(soap*) returns deep copy of _tds__SetRemoteUser, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRemoteUser::soap_del() deep deletes _tds__SetRemoteUser data members, use only after _tds__SetRemoteUser::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRemoteUser::soap_type() returns SOAP_TYPE__tds__SetRemoteUser or derived type identifier
class _tds__SetRemoteUser
{ public:
/// Element "RemoteUser" of type "http://www.onvif.org/ver10/schema":RemoteUser.
    tt__RemoteUser*                      RemoteUser                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetRemoteUserResponse is a complexType.
///
/// @note class _tds__SetRemoteUserResponse operations:
/// - _tds__SetRemoteUserResponse* soap_new__tds__SetRemoteUserResponse(soap*) allocate and default initialize
/// - _tds__SetRemoteUserResponse* soap_new__tds__SetRemoteUserResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetRemoteUserResponse* soap_new_req__tds__SetRemoteUserResponse(soap*, ...) allocate, set required members
/// - _tds__SetRemoteUserResponse* soap_new_set__tds__SetRemoteUserResponse(soap*, ...) allocate, set all public members
/// - _tds__SetRemoteUserResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetRemoteUserResponse(soap*, _tds__SetRemoteUserResponse*) deserialize from a stream
/// - int soap_write__tds__SetRemoteUserResponse(soap*, _tds__SetRemoteUserResponse*) serialize to a stream
/// - _tds__SetRemoteUserResponse* _tds__SetRemoteUserResponse::soap_dup(soap*) returns deep copy of _tds__SetRemoteUserResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetRemoteUserResponse::soap_del() deep deletes _tds__SetRemoteUserResponse data members, use only after _tds__SetRemoteUserResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetRemoteUserResponse::soap_type() returns SOAP_TYPE__tds__SetRemoteUserResponse or derived type identifier
class _tds__SetRemoteUserResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsers is a complexType.
///
/// @note class _tds__GetUsers operations:
/// - _tds__GetUsers* soap_new__tds__GetUsers(soap*) allocate and default initialize
/// - _tds__GetUsers* soap_new__tds__GetUsers(soap*, int num) allocate and default initialize an array
/// - _tds__GetUsers* soap_new_req__tds__GetUsers(soap*, ...) allocate, set required members
/// - _tds__GetUsers* soap_new_set__tds__GetUsers(soap*, ...) allocate, set all public members
/// - _tds__GetUsers::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetUsers(soap*, _tds__GetUsers*) deserialize from a stream
/// - int soap_write__tds__GetUsers(soap*, _tds__GetUsers*) serialize to a stream
/// - _tds__GetUsers* _tds__GetUsers::soap_dup(soap*) returns deep copy of _tds__GetUsers, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetUsers::soap_del() deep deletes _tds__GetUsers data members, use only after _tds__GetUsers::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetUsers::soap_type() returns SOAP_TYPE__tds__GetUsers or derived type identifier
class _tds__GetUsers
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetUsersResponse is a complexType.
///
/// @note class _tds__GetUsersResponse operations:
/// - _tds__GetUsersResponse* soap_new__tds__GetUsersResponse(soap*) allocate and default initialize
/// - _tds__GetUsersResponse* soap_new__tds__GetUsersResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetUsersResponse* soap_new_req__tds__GetUsersResponse(soap*, ...) allocate, set required members
/// - _tds__GetUsersResponse* soap_new_set__tds__GetUsersResponse(soap*, ...) allocate, set all public members
/// - _tds__GetUsersResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetUsersResponse(soap*, _tds__GetUsersResponse*) deserialize from a stream
/// - int soap_write__tds__GetUsersResponse(soap*, _tds__GetUsersResponse*) serialize to a stream
/// - _tds__GetUsersResponse* _tds__GetUsersResponse::soap_dup(soap*) returns deep copy of _tds__GetUsersResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetUsersResponse::soap_del() deep deletes _tds__GetUsersResponse data members, use only after _tds__GetUsersResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetUsersResponse::soap_type() returns SOAP_TYPE__tds__GetUsersResponse or derived type identifier
class _tds__GetUsersResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains a list of the onvif users and following information is included in each entry: username and user level.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__User* is 0..unbounded.
  $ int                                  __sizeUser                     0;
/// Pointer to array tt__User* of size 0..unbounded.
    tt__User*                           *User                           0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsers is a complexType.
///
/// @note class _tds__CreateUsers operations:
/// - _tds__CreateUsers* soap_new__tds__CreateUsers(soap*) allocate and default initialize
/// - _tds__CreateUsers* soap_new__tds__CreateUsers(soap*, int num) allocate and default initialize an array
/// - _tds__CreateUsers* soap_new_req__tds__CreateUsers(soap*, ...) allocate, set required members
/// - _tds__CreateUsers* soap_new_set__tds__CreateUsers(soap*, ...) allocate, set all public members
/// - _tds__CreateUsers::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateUsers(soap*, _tds__CreateUsers*) deserialize from a stream
/// - int soap_write__tds__CreateUsers(soap*, _tds__CreateUsers*) serialize to a stream
/// - _tds__CreateUsers* _tds__CreateUsers::soap_dup(soap*) returns deep copy of _tds__CreateUsers, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateUsers::soap_del() deep deletes _tds__CreateUsers data members, use only after _tds__CreateUsers::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateUsers::soap_type() returns SOAP_TYPE__tds__CreateUsers or derived type identifier
class _tds__CreateUsers
{ public:
/// <PRE><BLOCKQUOTE>
///   Creates new device users and corresponding credentials. Each user entry includes: username, password and user level. Either all users are created successfully or a fault message MUST be returned without creating any user. If trying to create several users with exactly the same username the request is rejected and no users are created. If password is missing, then fault message Too weak password is returned.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__User* is 1..unbounded.
  $ int                                  __sizeUser                     1;
/// Pointer to array tt__User* of size 1..unbounded.
    tt__User*                           *User                           1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateUsersResponse is a complexType.
///
/// @note class _tds__CreateUsersResponse operations:
/// - _tds__CreateUsersResponse* soap_new__tds__CreateUsersResponse(soap*) allocate and default initialize
/// - _tds__CreateUsersResponse* soap_new__tds__CreateUsersResponse(soap*, int num) allocate and default initialize an array
/// - _tds__CreateUsersResponse* soap_new_req__tds__CreateUsersResponse(soap*, ...) allocate, set required members
/// - _tds__CreateUsersResponse* soap_new_set__tds__CreateUsersResponse(soap*, ...) allocate, set all public members
/// - _tds__CreateUsersResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateUsersResponse(soap*, _tds__CreateUsersResponse*) deserialize from a stream
/// - int soap_write__tds__CreateUsersResponse(soap*, _tds__CreateUsersResponse*) serialize to a stream
/// - _tds__CreateUsersResponse* _tds__CreateUsersResponse::soap_dup(soap*) returns deep copy of _tds__CreateUsersResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateUsersResponse::soap_del() deep deletes _tds__CreateUsersResponse data members, use only after _tds__CreateUsersResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateUsersResponse::soap_type() returns SOAP_TYPE__tds__CreateUsersResponse or derived type identifier
class _tds__CreateUsersResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsers
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsers is a complexType.
///
/// @note class _tds__DeleteUsers operations:
/// - _tds__DeleteUsers* soap_new__tds__DeleteUsers(soap*) allocate and default initialize
/// - _tds__DeleteUsers* soap_new__tds__DeleteUsers(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteUsers* soap_new_req__tds__DeleteUsers(soap*, ...) allocate, set required members
/// - _tds__DeleteUsers* soap_new_set__tds__DeleteUsers(soap*, ...) allocate, set all public members
/// - _tds__DeleteUsers::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteUsers(soap*, _tds__DeleteUsers*) deserialize from a stream
/// - int soap_write__tds__DeleteUsers(soap*, _tds__DeleteUsers*) serialize to a stream
/// - _tds__DeleteUsers* _tds__DeleteUsers::soap_dup(soap*) returns deep copy of _tds__DeleteUsers, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteUsers::soap_del() deep deletes _tds__DeleteUsers data members, use only after _tds__DeleteUsers::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteUsers::soap_type() returns SOAP_TYPE__tds__DeleteUsers or derived type identifier
class _tds__DeleteUsers
{ public:
/// <PRE><BLOCKQUOTE>
///   Deletes users on an device and there may exist users that cannot be deleted to ensure access to the unit. Either all users are deleted successfully or a fault message MUST be returned and no users be deleted. If a username exists multiple times in the request, then a fault message is returned.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of char* is 1..unbounded.
  $ int                                  __sizeUsername                 1;
/// Pointer to array char* of size 1..unbounded.
    char*                               *Username                       1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteUsersResponse is a complexType.
///
/// @note class _tds__DeleteUsersResponse operations:
/// - _tds__DeleteUsersResponse* soap_new__tds__DeleteUsersResponse(soap*) allocate and default initialize
/// - _tds__DeleteUsersResponse* soap_new__tds__DeleteUsersResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteUsersResponse* soap_new_req__tds__DeleteUsersResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteUsersResponse* soap_new_set__tds__DeleteUsersResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteUsersResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteUsersResponse(soap*, _tds__DeleteUsersResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteUsersResponse(soap*, _tds__DeleteUsersResponse*) serialize to a stream
/// - _tds__DeleteUsersResponse* _tds__DeleteUsersResponse::soap_dup(soap*) returns deep copy of _tds__DeleteUsersResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteUsersResponse::soap_del() deep deletes _tds__DeleteUsersResponse data members, use only after _tds__DeleteUsersResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteUsersResponse::soap_type() returns SOAP_TYPE__tds__DeleteUsersResponse or derived type identifier
class _tds__DeleteUsersResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUser
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUser is a complexType.
///
/// @note class _tds__SetUser operations:
/// - _tds__SetUser* soap_new__tds__SetUser(soap*) allocate and default initialize
/// - _tds__SetUser* soap_new__tds__SetUser(soap*, int num) allocate and default initialize an array
/// - _tds__SetUser* soap_new_req__tds__SetUser(soap*, ...) allocate, set required members
/// - _tds__SetUser* soap_new_set__tds__SetUser(soap*, ...) allocate, set all public members
/// - _tds__SetUser::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetUser(soap*, _tds__SetUser*) deserialize from a stream
/// - int soap_write__tds__SetUser(soap*, _tds__SetUser*) serialize to a stream
/// - _tds__SetUser* _tds__SetUser::soap_dup(soap*) returns deep copy of _tds__SetUser, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetUser::soap_del() deep deletes _tds__SetUser data members, use only after _tds__SetUser::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetUser::soap_type() returns SOAP_TYPE__tds__SetUser or derived type identifier
class _tds__SetUser
{ public:
/// <PRE><BLOCKQUOTE>
///   Updates the credentials for one or several users on an device. Either all change requests are processed successfully or a fault message MUST be returned. If the request contains the same username multiple times, a fault message is returned.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__User* is 1..unbounded.
  $ int                                  __sizeUser                     1;
/// Pointer to array tt__User* of size 1..unbounded.
    tt__User*                           *User                           1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetUserResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetUserResponse is a complexType.
///
/// @note class _tds__SetUserResponse operations:
/// - _tds__SetUserResponse* soap_new__tds__SetUserResponse(soap*) allocate and default initialize
/// - _tds__SetUserResponse* soap_new__tds__SetUserResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetUserResponse* soap_new_req__tds__SetUserResponse(soap*, ...) allocate, set required members
/// - _tds__SetUserResponse* soap_new_set__tds__SetUserResponse(soap*, ...) allocate, set all public members
/// - _tds__SetUserResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetUserResponse(soap*, _tds__SetUserResponse*) deserialize from a stream
/// - int soap_write__tds__SetUserResponse(soap*, _tds__SetUserResponse*) serialize to a stream
/// - _tds__SetUserResponse* _tds__SetUserResponse::soap_dup(soap*) returns deep copy of _tds__SetUserResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetUserResponse::soap_del() deep deletes _tds__SetUserResponse data members, use only after _tds__SetUserResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetUserResponse::soap_type() returns SOAP_TYPE__tds__SetUserResponse or derived type identifier
class _tds__SetUserResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrl is a complexType.
///
/// @note class _tds__GetWsdlUrl operations:
/// - _tds__GetWsdlUrl* soap_new__tds__GetWsdlUrl(soap*) allocate and default initialize
/// - _tds__GetWsdlUrl* soap_new__tds__GetWsdlUrl(soap*, int num) allocate and default initialize an array
/// - _tds__GetWsdlUrl* soap_new_req__tds__GetWsdlUrl(soap*, ...) allocate, set required members
/// - _tds__GetWsdlUrl* soap_new_set__tds__GetWsdlUrl(soap*, ...) allocate, set all public members
/// - _tds__GetWsdlUrl::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetWsdlUrl(soap*, _tds__GetWsdlUrl*) deserialize from a stream
/// - int soap_write__tds__GetWsdlUrl(soap*, _tds__GetWsdlUrl*) serialize to a stream
/// - _tds__GetWsdlUrl* _tds__GetWsdlUrl::soap_dup(soap*) returns deep copy of _tds__GetWsdlUrl, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetWsdlUrl::soap_del() deep deletes _tds__GetWsdlUrl data members, use only after _tds__GetWsdlUrl::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetWsdlUrl::soap_type() returns SOAP_TYPE__tds__GetWsdlUrl or derived type identifier
class _tds__GetWsdlUrl
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetWsdlUrlResponse is a complexType.
///
/// @note class _tds__GetWsdlUrlResponse operations:
/// - _tds__GetWsdlUrlResponse* soap_new__tds__GetWsdlUrlResponse(soap*) allocate and default initialize
/// - _tds__GetWsdlUrlResponse* soap_new__tds__GetWsdlUrlResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetWsdlUrlResponse* soap_new_req__tds__GetWsdlUrlResponse(soap*, ...) allocate, set required members
/// - _tds__GetWsdlUrlResponse* soap_new_set__tds__GetWsdlUrlResponse(soap*, ...) allocate, set all public members
/// - _tds__GetWsdlUrlResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetWsdlUrlResponse(soap*, _tds__GetWsdlUrlResponse*) deserialize from a stream
/// - int soap_write__tds__GetWsdlUrlResponse(soap*, _tds__GetWsdlUrlResponse*) serialize to a stream
/// - _tds__GetWsdlUrlResponse* _tds__GetWsdlUrlResponse::soap_dup(soap*) returns deep copy of _tds__GetWsdlUrlResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetWsdlUrlResponse::soap_del() deep deletes _tds__GetWsdlUrlResponse data members, use only after _tds__GetWsdlUrlResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetWsdlUrlResponse::soap_type() returns SOAP_TYPE__tds__GetWsdlUrlResponse or derived type identifier
class _tds__GetWsdlUrlResponse
{ public:
/// Element "WsdlUrl" of type xs:anyURI.
    xsd__anyURI                          WsdlUrl                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilities
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilities is a complexType.
///
/// @note class _tds__GetCapabilities operations:
/// - _tds__GetCapabilities* soap_new__tds__GetCapabilities(soap*) allocate and default initialize
/// - _tds__GetCapabilities* soap_new__tds__GetCapabilities(soap*, int num) allocate and default initialize an array
/// - _tds__GetCapabilities* soap_new_req__tds__GetCapabilities(soap*, ...) allocate, set required members
/// - _tds__GetCapabilities* soap_new_set__tds__GetCapabilities(soap*, ...) allocate, set all public members
/// - _tds__GetCapabilities::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCapabilities(soap*, _tds__GetCapabilities*) deserialize from a stream
/// - int soap_write__tds__GetCapabilities(soap*, _tds__GetCapabilities*) serialize to a stream
/// - _tds__GetCapabilities* _tds__GetCapabilities::soap_dup(soap*) returns deep copy of _tds__GetCapabilities, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCapabilities::soap_del() deep deletes _tds__GetCapabilities data members, use only after _tds__GetCapabilities::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCapabilities::soap_type() returns SOAP_TYPE__tds__GetCapabilities or derived type identifier
class _tds__GetCapabilities
{ public:
/// <PRE><BLOCKQUOTE>
///   List of categories to retrieve capability information on.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__CapabilityCategory is 0..unbounded.
  $ int                                  __sizeCategory                 0;
/// Pointer to array enum tt__CapabilityCategory of size 0..unbounded.
    enum tt__CapabilityCategory         *Category                       0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCapabilitiesResponse is a complexType.
///
/// @note class _tds__GetCapabilitiesResponse operations:
/// - _tds__GetCapabilitiesResponse* soap_new__tds__GetCapabilitiesResponse(soap*) allocate and default initialize
/// - _tds__GetCapabilitiesResponse* soap_new__tds__GetCapabilitiesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCapabilitiesResponse* soap_new_req__tds__GetCapabilitiesResponse(soap*, ...) allocate, set required members
/// - _tds__GetCapabilitiesResponse* soap_new_set__tds__GetCapabilitiesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCapabilitiesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCapabilitiesResponse(soap*, _tds__GetCapabilitiesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCapabilitiesResponse(soap*, _tds__GetCapabilitiesResponse*) serialize to a stream
/// - _tds__GetCapabilitiesResponse* _tds__GetCapabilitiesResponse::soap_dup(soap*) returns deep copy of _tds__GetCapabilitiesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCapabilitiesResponse::soap_del() deep deletes _tds__GetCapabilitiesResponse data members, use only after _tds__GetCapabilitiesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCapabilitiesResponse::soap_type() returns SOAP_TYPE__tds__GetCapabilitiesResponse or derived type identifier
class _tds__GetCapabilitiesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Capability information.
/// </BLOCKQUOTE></PRE>
///
/// Element "Capabilities" of type "http://www.onvif.org/ver10/schema":Capabilities.
    tt__Capabilities*                    Capabilities                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostname is a complexType.
///
/// @note class _tds__GetHostname operations:
/// - _tds__GetHostname* soap_new__tds__GetHostname(soap*) allocate and default initialize
/// - _tds__GetHostname* soap_new__tds__GetHostname(soap*, int num) allocate and default initialize an array
/// - _tds__GetHostname* soap_new_req__tds__GetHostname(soap*, ...) allocate, set required members
/// - _tds__GetHostname* soap_new_set__tds__GetHostname(soap*, ...) allocate, set all public members
/// - _tds__GetHostname::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetHostname(soap*, _tds__GetHostname*) deserialize from a stream
/// - int soap_write__tds__GetHostname(soap*, _tds__GetHostname*) serialize to a stream
/// - _tds__GetHostname* _tds__GetHostname::soap_dup(soap*) returns deep copy of _tds__GetHostname, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetHostname::soap_del() deep deletes _tds__GetHostname data members, use only after _tds__GetHostname::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetHostname::soap_type() returns SOAP_TYPE__tds__GetHostname or derived type identifier
class _tds__GetHostname
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetHostnameResponse is a complexType.
///
/// @note class _tds__GetHostnameResponse operations:
/// - _tds__GetHostnameResponse* soap_new__tds__GetHostnameResponse(soap*) allocate and default initialize
/// - _tds__GetHostnameResponse* soap_new__tds__GetHostnameResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetHostnameResponse* soap_new_req__tds__GetHostnameResponse(soap*, ...) allocate, set required members
/// - _tds__GetHostnameResponse* soap_new_set__tds__GetHostnameResponse(soap*, ...) allocate, set all public members
/// - _tds__GetHostnameResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetHostnameResponse(soap*, _tds__GetHostnameResponse*) deserialize from a stream
/// - int soap_write__tds__GetHostnameResponse(soap*, _tds__GetHostnameResponse*) serialize to a stream
/// - _tds__GetHostnameResponse* _tds__GetHostnameResponse::soap_dup(soap*) returns deep copy of _tds__GetHostnameResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetHostnameResponse::soap_del() deep deletes _tds__GetHostnameResponse data members, use only after _tds__GetHostnameResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetHostnameResponse::soap_type() returns SOAP_TYPE__tds__GetHostnameResponse or derived type identifier
class _tds__GetHostnameResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the hostname information.
/// </BLOCKQUOTE></PRE>
///
/// Element "HostnameInformation" of type "http://www.onvif.org/ver10/schema":HostnameInformation.
    tt__HostnameInformation*             HostnameInformation            1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostname
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostname is a complexType.
///
/// @note class _tds__SetHostname operations:
/// - _tds__SetHostname* soap_new__tds__SetHostname(soap*) allocate and default initialize
/// - _tds__SetHostname* soap_new__tds__SetHostname(soap*, int num) allocate and default initialize an array
/// - _tds__SetHostname* soap_new_req__tds__SetHostname(soap*, ...) allocate, set required members
/// - _tds__SetHostname* soap_new_set__tds__SetHostname(soap*, ...) allocate, set all public members
/// - _tds__SetHostname::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHostname(soap*, _tds__SetHostname*) deserialize from a stream
/// - int soap_write__tds__SetHostname(soap*, _tds__SetHostname*) serialize to a stream
/// - _tds__SetHostname* _tds__SetHostname::soap_dup(soap*) returns deep copy of _tds__SetHostname, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHostname::soap_del() deep deletes _tds__SetHostname data members, use only after _tds__SetHostname::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHostname::soap_type() returns SOAP_TYPE__tds__SetHostname or derived type identifier
class _tds__SetHostname
{ public:
/// <PRE><BLOCKQUOTE>
///   The hostname to set.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type xs:token.
    xsd__token                           Name                           1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameResponse is a complexType.
///
/// @note class _tds__SetHostnameResponse operations:
/// - _tds__SetHostnameResponse* soap_new__tds__SetHostnameResponse(soap*) allocate and default initialize
/// - _tds__SetHostnameResponse* soap_new__tds__SetHostnameResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetHostnameResponse* soap_new_req__tds__SetHostnameResponse(soap*, ...) allocate, set required members
/// - _tds__SetHostnameResponse* soap_new_set__tds__SetHostnameResponse(soap*, ...) allocate, set all public members
/// - _tds__SetHostnameResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHostnameResponse(soap*, _tds__SetHostnameResponse*) deserialize from a stream
/// - int soap_write__tds__SetHostnameResponse(soap*, _tds__SetHostnameResponse*) serialize to a stream
/// - _tds__SetHostnameResponse* _tds__SetHostnameResponse::soap_dup(soap*) returns deep copy of _tds__SetHostnameResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHostnameResponse::soap_del() deep deletes _tds__SetHostnameResponse data members, use only after _tds__SetHostnameResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHostnameResponse::soap_type() returns SOAP_TYPE__tds__SetHostnameResponse or derived type identifier
class _tds__SetHostnameResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCP is a complexType.
///
/// @note class _tds__SetHostnameFromDHCP operations:
/// - _tds__SetHostnameFromDHCP* soap_new__tds__SetHostnameFromDHCP(soap*) allocate and default initialize
/// - _tds__SetHostnameFromDHCP* soap_new__tds__SetHostnameFromDHCP(soap*, int num) allocate and default initialize an array
/// - _tds__SetHostnameFromDHCP* soap_new_req__tds__SetHostnameFromDHCP(soap*, ...) allocate, set required members
/// - _tds__SetHostnameFromDHCP* soap_new_set__tds__SetHostnameFromDHCP(soap*, ...) allocate, set all public members
/// - _tds__SetHostnameFromDHCP::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHostnameFromDHCP(soap*, _tds__SetHostnameFromDHCP*) deserialize from a stream
/// - int soap_write__tds__SetHostnameFromDHCP(soap*, _tds__SetHostnameFromDHCP*) serialize to a stream
/// - _tds__SetHostnameFromDHCP* _tds__SetHostnameFromDHCP::soap_dup(soap*) returns deep copy of _tds__SetHostnameFromDHCP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHostnameFromDHCP::soap_del() deep deletes _tds__SetHostnameFromDHCP data members, use only after _tds__SetHostnameFromDHCP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHostnameFromDHCP::soap_type() returns SOAP_TYPE__tds__SetHostnameFromDHCP or derived type identifier
class _tds__SetHostnameFromDHCP
{ public:
/// <PRE><BLOCKQUOTE>
///   True if the hostname shall be obtained via DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetHostnameFromDHCPResponse is a complexType.
///
/// @note class _tds__SetHostnameFromDHCPResponse operations:
/// - _tds__SetHostnameFromDHCPResponse* soap_new__tds__SetHostnameFromDHCPResponse(soap*) allocate and default initialize
/// - _tds__SetHostnameFromDHCPResponse* soap_new__tds__SetHostnameFromDHCPResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetHostnameFromDHCPResponse* soap_new_req__tds__SetHostnameFromDHCPResponse(soap*, ...) allocate, set required members
/// - _tds__SetHostnameFromDHCPResponse* soap_new_set__tds__SetHostnameFromDHCPResponse(soap*, ...) allocate, set all public members
/// - _tds__SetHostnameFromDHCPResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetHostnameFromDHCPResponse(soap*, _tds__SetHostnameFromDHCPResponse*) deserialize from a stream
/// - int soap_write__tds__SetHostnameFromDHCPResponse(soap*, _tds__SetHostnameFromDHCPResponse*) serialize to a stream
/// - _tds__SetHostnameFromDHCPResponse* _tds__SetHostnameFromDHCPResponse::soap_dup(soap*) returns deep copy of _tds__SetHostnameFromDHCPResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetHostnameFromDHCPResponse::soap_del() deep deletes _tds__SetHostnameFromDHCPResponse data members, use only after _tds__SetHostnameFromDHCPResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetHostnameFromDHCPResponse::soap_type() returns SOAP_TYPE__tds__SetHostnameFromDHCPResponse or derived type identifier
class _tds__SetHostnameFromDHCPResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
/// </BLOCKQUOTE></PRE>
///
/// Element "RebootNeeded" of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNS is a complexType.
///
/// @note class _tds__GetDNS operations:
/// - _tds__GetDNS* soap_new__tds__GetDNS(soap*) allocate and default initialize
/// - _tds__GetDNS* soap_new__tds__GetDNS(soap*, int num) allocate and default initialize an array
/// - _tds__GetDNS* soap_new_req__tds__GetDNS(soap*, ...) allocate, set required members
/// - _tds__GetDNS* soap_new_set__tds__GetDNS(soap*, ...) allocate, set all public members
/// - _tds__GetDNS::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDNS(soap*, _tds__GetDNS*) deserialize from a stream
/// - int soap_write__tds__GetDNS(soap*, _tds__GetDNS*) serialize to a stream
/// - _tds__GetDNS* _tds__GetDNS::soap_dup(soap*) returns deep copy of _tds__GetDNS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDNS::soap_del() deep deletes _tds__GetDNS data members, use only after _tds__GetDNS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDNS::soap_type() returns SOAP_TYPE__tds__GetDNS or derived type identifier
class _tds__GetDNS
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDNSResponse is a complexType.
///
/// @note class _tds__GetDNSResponse operations:
/// - _tds__GetDNSResponse* soap_new__tds__GetDNSResponse(soap*) allocate and default initialize
/// - _tds__GetDNSResponse* soap_new__tds__GetDNSResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDNSResponse* soap_new_req__tds__GetDNSResponse(soap*, ...) allocate, set required members
/// - _tds__GetDNSResponse* soap_new_set__tds__GetDNSResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDNSResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDNSResponse(soap*, _tds__GetDNSResponse*) deserialize from a stream
/// - int soap_write__tds__GetDNSResponse(soap*, _tds__GetDNSResponse*) serialize to a stream
/// - _tds__GetDNSResponse* _tds__GetDNSResponse::soap_dup(soap*) returns deep copy of _tds__GetDNSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDNSResponse::soap_del() deep deletes _tds__GetDNSResponse data members, use only after _tds__GetDNSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDNSResponse::soap_type() returns SOAP_TYPE__tds__GetDNSResponse or derived type identifier
class _tds__GetDNSResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   DNS information.
/// </BLOCKQUOTE></PRE>
///
/// Element "DNSInformation" of type "http://www.onvif.org/ver10/schema":DNSInformation.
    tt__DNSInformation*                  DNSInformation                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNS is a complexType.
///
/// @note class _tds__SetDNS operations:
/// - _tds__SetDNS* soap_new__tds__SetDNS(soap*) allocate and default initialize
/// - _tds__SetDNS* soap_new__tds__SetDNS(soap*, int num) allocate and default initialize an array
/// - _tds__SetDNS* soap_new_req__tds__SetDNS(soap*, ...) allocate, set required members
/// - _tds__SetDNS* soap_new_set__tds__SetDNS(soap*, ...) allocate, set all public members
/// - _tds__SetDNS::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDNS(soap*, _tds__SetDNS*) deserialize from a stream
/// - int soap_write__tds__SetDNS(soap*, _tds__SetDNS*) serialize to a stream
/// - _tds__SetDNS* _tds__SetDNS::soap_dup(soap*) returns deep copy of _tds__SetDNS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDNS::soap_del() deep deletes _tds__SetDNS data members, use only after _tds__SetDNS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDNS::soap_type() returns SOAP_TYPE__tds__SetDNS or derived type identifier
class _tds__SetDNS
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicate if the DNS address is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS search domain.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__token is 0..unbounded.
  $ int                                  __sizeSearchDomain             0;
/// Pointer to array xsd__token of size 0..unbounded.
    xsd__token                          *SearchDomain                   0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   DNS address(es) set manually.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPAddress* is 0..unbounded.
  $ int                                  __sizeDNSManual                0;
/// Pointer to array tt__IPAddress* of size 0..unbounded.
    tt__IPAddress*                      *DNSManual                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDNSResponse is a complexType.
///
/// @note class _tds__SetDNSResponse operations:
/// - _tds__SetDNSResponse* soap_new__tds__SetDNSResponse(soap*) allocate and default initialize
/// - _tds__SetDNSResponse* soap_new__tds__SetDNSResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDNSResponse* soap_new_req__tds__SetDNSResponse(soap*, ...) allocate, set required members
/// - _tds__SetDNSResponse* soap_new_set__tds__SetDNSResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDNSResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDNSResponse(soap*, _tds__SetDNSResponse*) deserialize from a stream
/// - int soap_write__tds__SetDNSResponse(soap*, _tds__SetDNSResponse*) serialize to a stream
/// - _tds__SetDNSResponse* _tds__SetDNSResponse::soap_dup(soap*) returns deep copy of _tds__SetDNSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDNSResponse::soap_del() deep deletes _tds__SetDNSResponse data members, use only after _tds__SetDNSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDNSResponse::soap_type() returns SOAP_TYPE__tds__SetDNSResponse or derived type identifier
class _tds__SetDNSResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTP is a complexType.
///
/// @note class _tds__GetNTP operations:
/// - _tds__GetNTP* soap_new__tds__GetNTP(soap*) allocate and default initialize
/// - _tds__GetNTP* soap_new__tds__GetNTP(soap*, int num) allocate and default initialize an array
/// - _tds__GetNTP* soap_new_req__tds__GetNTP(soap*, ...) allocate, set required members
/// - _tds__GetNTP* soap_new_set__tds__GetNTP(soap*, ...) allocate, set all public members
/// - _tds__GetNTP::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNTP(soap*, _tds__GetNTP*) deserialize from a stream
/// - int soap_write__tds__GetNTP(soap*, _tds__GetNTP*) serialize to a stream
/// - _tds__GetNTP* _tds__GetNTP::soap_dup(soap*) returns deep copy of _tds__GetNTP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNTP::soap_del() deep deletes _tds__GetNTP data members, use only after _tds__GetNTP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNTP::soap_type() returns SOAP_TYPE__tds__GetNTP or derived type identifier
class _tds__GetNTP
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNTPResponse is a complexType.
///
/// @note class _tds__GetNTPResponse operations:
/// - _tds__GetNTPResponse* soap_new__tds__GetNTPResponse(soap*) allocate and default initialize
/// - _tds__GetNTPResponse* soap_new__tds__GetNTPResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetNTPResponse* soap_new_req__tds__GetNTPResponse(soap*, ...) allocate, set required members
/// - _tds__GetNTPResponse* soap_new_set__tds__GetNTPResponse(soap*, ...) allocate, set all public members
/// - _tds__GetNTPResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNTPResponse(soap*, _tds__GetNTPResponse*) deserialize from a stream
/// - int soap_write__tds__GetNTPResponse(soap*, _tds__GetNTPResponse*) serialize to a stream
/// - _tds__GetNTPResponse* _tds__GetNTPResponse::soap_dup(soap*) returns deep copy of _tds__GetNTPResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNTPResponse::soap_del() deep deletes _tds__GetNTPResponse data members, use only after _tds__GetNTPResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNTPResponse::soap_type() returns SOAP_TYPE__tds__GetNTPResponse or derived type identifier
class _tds__GetNTPResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   NTP information.
/// </BLOCKQUOTE></PRE>
///
/// Element "NTPInformation" of type "http://www.onvif.org/ver10/schema":NTPInformation.
    tt__NTPInformation*                  NTPInformation                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTP
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTP is a complexType.
///
/// @note class _tds__SetNTP operations:
/// - _tds__SetNTP* soap_new__tds__SetNTP(soap*) allocate and default initialize
/// - _tds__SetNTP* soap_new__tds__SetNTP(soap*, int num) allocate and default initialize an array
/// - _tds__SetNTP* soap_new_req__tds__SetNTP(soap*, ...) allocate, set required members
/// - _tds__SetNTP* soap_new_set__tds__SetNTP(soap*, ...) allocate, set all public members
/// - _tds__SetNTP::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNTP(soap*, _tds__SetNTP*) deserialize from a stream
/// - int soap_write__tds__SetNTP(soap*, _tds__SetNTP*) serialize to a stream
/// - _tds__SetNTP* _tds__SetNTP::soap_dup(soap*) returns deep copy of _tds__SetNTP, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNTP::soap_del() deep deletes _tds__SetNTP data members, use only after _tds__SetNTP::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNTP::soap_type() returns SOAP_TYPE__tds__SetNTP or derived type identifier
class _tds__SetNTP
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicate if NTP address information is to be retrieved using DHCP.
/// </BLOCKQUOTE></PRE>
///
/// Element "FromDHCP" of type xs:boolean.
    bool                                 FromDHCP                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Manual NTP settings.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__NetworkHost* is 0..unbounded.
  $ int                                  __sizeNTPManual                0;
/// Pointer to array tt__NetworkHost* of size 0..unbounded.
    tt__NetworkHost*                    *NTPManual                      0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNTPResponse is a complexType.
///
/// @note class _tds__SetNTPResponse operations:
/// - _tds__SetNTPResponse* soap_new__tds__SetNTPResponse(so