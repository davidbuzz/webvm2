ap*) allocate and default initialize
/// - _tds__SetNTPResponse* soap_new__tds__SetNTPResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetNTPResponse* soap_new_req__tds__SetNTPResponse(soap*, ...) allocate, set required members
/// - _tds__SetNTPResponse* soap_new_set__tds__SetNTPResponse(soap*, ...) allocate, set all public members
/// - _tds__SetNTPResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNTPResponse(soap*, _tds__SetNTPResponse*) deserialize from a stream
/// - int soap_write__tds__SetNTPResponse(soap*, _tds__SetNTPResponse*) serialize to a stream
/// - _tds__SetNTPResponse* _tds__SetNTPResponse::soap_dup(soap*) returns deep copy of _tds__SetNTPResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNTPResponse::soap_del() deep deletes _tds__SetNTPResponse data members, use only after _tds__SetNTPResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNTPResponse::soap_type() returns SOAP_TYPE__tds__SetNTPResponse or derived type identifier
class _tds__SetNTPResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNS is a complexType.
///
/// @note class _tds__GetDynamicDNS operations:
/// - _tds__GetDynamicDNS* soap_new__tds__GetDynamicDNS(soap*) allocate and default initialize
/// - _tds__GetDynamicDNS* soap_new__tds__GetDynamicDNS(soap*, int num) allocate and default initialize an array
/// - _tds__GetDynamicDNS* soap_new_req__tds__GetDynamicDNS(soap*, ...) allocate, set required members
/// - _tds__GetDynamicDNS* soap_new_set__tds__GetDynamicDNS(soap*, ...) allocate, set all public members
/// - _tds__GetDynamicDNS::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDynamicDNS(soap*, _tds__GetDynamicDNS*) deserialize from a stream
/// - int soap_write__tds__GetDynamicDNS(soap*, _tds__GetDynamicDNS*) serialize to a stream
/// - _tds__GetDynamicDNS* _tds__GetDynamicDNS::soap_dup(soap*) returns deep copy of _tds__GetDynamicDNS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDynamicDNS::soap_del() deep deletes _tds__GetDynamicDNS data members, use only after _tds__GetDynamicDNS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDynamicDNS::soap_type() returns SOAP_TYPE__tds__GetDynamicDNS or derived type identifier
class _tds__GetDynamicDNS
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDynamicDNSResponse is a complexType.
///
/// @note class _tds__GetDynamicDNSResponse operations:
/// - _tds__GetDynamicDNSResponse* soap_new__tds__GetDynamicDNSResponse(soap*) allocate and default initialize
/// - _tds__GetDynamicDNSResponse* soap_new__tds__GetDynamicDNSResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetDynamicDNSResponse* soap_new_req__tds__GetDynamicDNSResponse(soap*, ...) allocate, set required members
/// - _tds__GetDynamicDNSResponse* soap_new_set__tds__GetDynamicDNSResponse(soap*, ...) allocate, set all public members
/// - _tds__GetDynamicDNSResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDynamicDNSResponse(soap*, _tds__GetDynamicDNSResponse*) deserialize from a stream
/// - int soap_write__tds__GetDynamicDNSResponse(soap*, _tds__GetDynamicDNSResponse*) serialize to a stream
/// - _tds__GetDynamicDNSResponse* _tds__GetDynamicDNSResponse::soap_dup(soap*) returns deep copy of _tds__GetDynamicDNSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetDynamicDNSResponse::soap_del() deep deletes _tds__GetDynamicDNSResponse data members, use only after _tds__GetDynamicDNSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetDynamicDNSResponse::soap_type() returns SOAP_TYPE__tds__GetDynamicDNSResponse or derived type identifier
class _tds__GetDynamicDNSResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS information.
/// </BLOCKQUOTE></PRE>
///
/// Element "DynamicDNSInformation" of type "http://www.onvif.org/ver10/schema":DynamicDNSInformation.
    tt__DynamicDNSInformation*           DynamicDNSInformation          1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNS is a complexType.
///
/// @note class _tds__SetDynamicDNS operations:
/// - _tds__SetDynamicDNS* soap_new__tds__SetDynamicDNS(soap*) allocate and default initialize
/// - _tds__SetDynamicDNS* soap_new__tds__SetDynamicDNS(soap*, int num) allocate and default initialize an array
/// - _tds__SetDynamicDNS* soap_new_req__tds__SetDynamicDNS(soap*, ...) allocate, set required members
/// - _tds__SetDynamicDNS* soap_new_set__tds__SetDynamicDNS(soap*, ...) allocate, set all public members
/// - _tds__SetDynamicDNS::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDynamicDNS(soap*, _tds__SetDynamicDNS*) deserialize from a stream
/// - int soap_write__tds__SetDynamicDNS(soap*, _tds__SetDynamicDNS*) serialize to a stream
/// - _tds__SetDynamicDNS* _tds__SetDynamicDNS::soap_dup(soap*) returns deep copy of _tds__SetDynamicDNS, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDynamicDNS::soap_del() deep deletes _tds__SetDynamicDNS data members, use only after _tds__SetDynamicDNS::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDynamicDNS::soap_type() returns SOAP_TYPE__tds__SetDynamicDNS or derived type identifier
class _tds__SetDynamicDNS
{ public:
/// <PRE><BLOCKQUOTE>
///   Dynamic DNS type.
/// </BLOCKQUOTE></PRE>
///
/// Element "Type" of type "http://www.onvif.org/ver10/schema":DynamicDNSType.
    enum tt__DynamicDNSType              Type                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   DNS name.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":DNSName.
    tt__DNSName                          Name                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   DNS record time to live.
/// </BLOCKQUOTE></PRE>
///
/// Element "TTL" of type xs:duration.
    xsd__duration                        TTL                            0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDynamicDNSResponse is a complexType.
///
/// @note class _tds__SetDynamicDNSResponse operations:
/// - _tds__SetDynamicDNSResponse* soap_new__tds__SetDynamicDNSResponse(soap*) allocate and default initialize
/// - _tds__SetDynamicDNSResponse* soap_new__tds__SetDynamicDNSResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDynamicDNSResponse* soap_new_req__tds__SetDynamicDNSResponse(soap*, ...) allocate, set required members
/// - _tds__SetDynamicDNSResponse* soap_new_set__tds__SetDynamicDNSResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDynamicDNSResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDynamicDNSResponse(soap*, _tds__SetDynamicDNSResponse*) deserialize from a stream
/// - int soap_write__tds__SetDynamicDNSResponse(soap*, _tds__SetDynamicDNSResponse*) serialize to a stream
/// - _tds__SetDynamicDNSResponse* _tds__SetDynamicDNSResponse::soap_dup(soap*) returns deep copy of _tds__SetDynamicDNSResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDynamicDNSResponse::soap_del() deep deletes _tds__SetDynamicDNSResponse data members, use only after _tds__SetDynamicDNSResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDynamicDNSResponse::soap_type() returns SOAP_TYPE__tds__SetDynamicDNSResponse or derived type identifier
class _tds__SetDynamicDNSResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfaces is a complexType.
///
/// @note class _tds__GetNetworkInterfaces operations:
/// - _tds__GetNetworkInterfaces* soap_new__tds__GetNetworkInterfaces(soap*) allocate and default initialize
/// - _tds__GetNetworkInterfaces* soap_new__tds__GetNetworkInterfaces(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkInterfaces* soap_new_req__tds__GetNetworkInterfaces(soap*, ...) allocate, set required members
/// - _tds__GetNetworkInterfaces* soap_new_set__tds__GetNetworkInterfaces(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkInterfaces::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkInterfaces(soap*, _tds__GetNetworkInterfaces*) deserialize from a stream
/// - int soap_write__tds__GetNetworkInterfaces(soap*, _tds__GetNetworkInterfaces*) serialize to a stream
/// - _tds__GetNetworkInterfaces* _tds__GetNetworkInterfaces::soap_dup(soap*) returns deep copy of _tds__GetNetworkInterfaces, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkInterfaces::soap_del() deep deletes _tds__GetNetworkInterfaces data members, use only after _tds__GetNetworkInterfaces::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkInterfaces::soap_type() returns SOAP_TYPE__tds__GetNetworkInterfaces or derived type identifier
class _tds__GetNetworkInterfaces
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkInterfacesResponse is a complexType.
///
/// @note class _tds__GetNetworkInterfacesResponse operations:
/// - _tds__GetNetworkInterfacesResponse* soap_new__tds__GetNetworkInterfacesResponse(soap*) allocate and default initialize
/// - _tds__GetNetworkInterfacesResponse* soap_new__tds__GetNetworkInterfacesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkInterfacesResponse* soap_new_req__tds__GetNetworkInterfacesResponse(soap*, ...) allocate, set required members
/// - _tds__GetNetworkInterfacesResponse* soap_new_set__tds__GetNetworkInterfacesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkInterfacesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkInterfacesResponse(soap*, _tds__GetNetworkInterfacesResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkInterfacesResponse(soap*, _tds__GetNetworkInterfacesResponse*) serialize to a stream
/// - _tds__GetNetworkInterfacesResponse* _tds__GetNetworkInterfacesResponse::soap_dup(soap*) returns deep copy of _tds__GetNetworkInterfacesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkInterfacesResponse::soap_del() deep deletes _tds__GetNetworkInterfacesResponse data members, use only after _tds__GetNetworkInterfacesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkInterfacesResponse::soap_type() returns SOAP_TYPE__tds__GetNetworkInterfacesResponse or derived type identifier
class _tds__GetNetworkInterfacesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   List of network interfaces.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__NetworkInterface* is 1..unbounded.
  $ int                                  __sizeNetworkInterfaces        1;
/// Pointer to array tt__NetworkInterface* of size 1..unbounded.
    tt__NetworkInterface*               *NetworkInterfaces              1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfaces is a complexType.
///
/// @note class _tds__SetNetworkInterfaces operations:
/// - _tds__SetNetworkInterfaces* soap_new__tds__SetNetworkInterfaces(soap*) allocate and default initialize
/// - _tds__SetNetworkInterfaces* soap_new__tds__SetNetworkInterfaces(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkInterfaces* soap_new_req__tds__SetNetworkInterfaces(soap*, ...) allocate, set required members
/// - _tds__SetNetworkInterfaces* soap_new_set__tds__SetNetworkInterfaces(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkInterfaces::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkInterfaces(soap*, _tds__SetNetworkInterfaces*) deserialize from a stream
/// - int soap_write__tds__SetNetworkInterfaces(soap*, _tds__SetNetworkInterfaces*) serialize to a stream
/// - _tds__SetNetworkInterfaces* _tds__SetNetworkInterfaces::soap_dup(soap*) returns deep copy of _tds__SetNetworkInterfaces, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkInterfaces::soap_del() deep deletes _tds__SetNetworkInterfaces data members, use only after _tds__SetNetworkInterfaces::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkInterfaces::soap_type() returns SOAP_TYPE__tds__SetNetworkInterfaces or derived type identifier
class _tds__SetNetworkInterfaces
{ public:
/// <PRE><BLOCKQUOTE>
///   Symbolic network interface name.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Network interface name.
/// </BLOCKQUOTE></PRE>
///
/// Element "NetworkInterface" of type "http://www.onvif.org/ver10/schema":NetworkInterfaceSetConfiguration.
    tt__NetworkInterfaceSetConfiguration*  NetworkInterface               1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkInterfacesResponse is a complexType.
///
/// @note class _tds__SetNetworkInterfacesResponse operations:
/// - _tds__SetNetworkInterfacesResponse* soap_new__tds__SetNetworkInterfacesResponse(soap*) allocate and default initialize
/// - _tds__SetNetworkInterfacesResponse* soap_new__tds__SetNetworkInterfacesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkInterfacesResponse* soap_new_req__tds__SetNetworkInterfacesResponse(soap*, ...) allocate, set required members
/// - _tds__SetNetworkInterfacesResponse* soap_new_set__tds__SetNetworkInterfacesResponse(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkInterfacesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkInterfacesResponse(soap*, _tds__SetNetworkInterfacesResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkInterfacesResponse(soap*, _tds__SetNetworkInterfacesResponse*) serialize to a stream
/// - _tds__SetNetworkInterfacesResponse* _tds__SetNetworkInterfacesResponse::soap_dup(soap*) returns deep copy of _tds__SetNetworkInterfacesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkInterfacesResponse::soap_del() deep deletes _tds__SetNetworkInterfacesResponse data members, use only after _tds__SetNetworkInterfacesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkInterfacesResponse::soap_type() returns SOAP_TYPE__tds__SetNetworkInterfacesResponse or derived type identifier
class _tds__SetNetworkInterfacesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not a reboot is required after configuration updates.
///   If a device responds with RebootNeeded set to false, the device can be reached
///   via the new IP address without further action. A client should be aware that a device
///   may not be responsive for a short period of time until it signals availability at
///   the new address via the discovery Hello messages.
///   If a device responds with RebootNeeded set to true, it will be further available under
///   its previous IP address. The settings will only be activated when the device is
///   rebooted via the SystemReboot command.
/// </BLOCKQUOTE></PRE>
///
/// Element "RebootNeeded" of type xs:boolean.
    bool                                 RebootNeeded                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocols is a complexType.
///
/// @note class _tds__GetNetworkProtocols operations:
/// - _tds__GetNetworkProtocols* soap_new__tds__GetNetworkProtocols(soap*) allocate and default initialize
/// - _tds__GetNetworkProtocols* soap_new__tds__GetNetworkProtocols(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkProtocols* soap_new_req__tds__GetNetworkProtocols(soap*, ...) allocate, set required members
/// - _tds__GetNetworkProtocols* soap_new_set__tds__GetNetworkProtocols(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkProtocols::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkProtocols(soap*, _tds__GetNetworkProtocols*) deserialize from a stream
/// - int soap_write__tds__GetNetworkProtocols(soap*, _tds__GetNetworkProtocols*) serialize to a stream
/// - _tds__GetNetworkProtocols* _tds__GetNetworkProtocols::soap_dup(soap*) returns deep copy of _tds__GetNetworkProtocols, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkProtocols::soap_del() deep deletes _tds__GetNetworkProtocols data members, use only after _tds__GetNetworkProtocols::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkProtocols::soap_type() returns SOAP_TYPE__tds__GetNetworkProtocols or derived type identifier
class _tds__GetNetworkProtocols
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkProtocolsResponse is a complexType.
///
/// @note class _tds__GetNetworkProtocolsResponse operations:
/// - _tds__GetNetworkProtocolsResponse* soap_new__tds__GetNetworkProtocolsResponse(soap*) allocate and default initialize
/// - _tds__GetNetworkProtocolsResponse* soap_new__tds__GetNetworkProtocolsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkProtocolsResponse* soap_new_req__tds__GetNetworkProtocolsResponse(soap*, ...) allocate, set required members
/// - _tds__GetNetworkProtocolsResponse* soap_new_set__tds__GetNetworkProtocolsResponse(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkProtocolsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkProtocolsResponse(soap*, _tds__GetNetworkProtocolsResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkProtocolsResponse(soap*, _tds__GetNetworkProtocolsResponse*) serialize to a stream
/// - _tds__GetNetworkProtocolsResponse* _tds__GetNetworkProtocolsResponse::soap_dup(soap*) returns deep copy of _tds__GetNetworkProtocolsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkProtocolsResponse::soap_del() deep deletes _tds__GetNetworkProtocolsResponse data members, use only after _tds__GetNetworkProtocolsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkProtocolsResponse::soap_type() returns SOAP_TYPE__tds__GetNetworkProtocolsResponse or derived type identifier
class _tds__GetNetworkProtocolsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains an array of defined protocols supported by the device. There are three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be retrieved for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__NetworkProtocol* is 0..unbounded.
  $ int                                  __sizeNetworkProtocols         0;
/// Pointer to array tt__NetworkProtocol* of size 0..unbounded.
    tt__NetworkProtocol*                *NetworkProtocols               0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocols is a complexType.
///
/// @note class _tds__SetNetworkProtocols operations:
/// - _tds__SetNetworkProtocols* soap_new__tds__SetNetworkProtocols(soap*) allocate and default initialize
/// - _tds__SetNetworkProtocols* soap_new__tds__SetNetworkProtocols(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkProtocols* soap_new_req__tds__SetNetworkProtocols(soap*, ...) allocate, set required members
/// - _tds__SetNetworkProtocols* soap_new_set__tds__SetNetworkProtocols(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkProtocols::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkProtocols(soap*, _tds__SetNetworkProtocols*) deserialize from a stream
/// - int soap_write__tds__SetNetworkProtocols(soap*, _tds__SetNetworkProtocols*) serialize to a stream
/// - _tds__SetNetworkProtocols* _tds__SetNetworkProtocols::soap_dup(soap*) returns deep copy of _tds__SetNetworkProtocols, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkProtocols::soap_del() deep deletes _tds__SetNetworkProtocols data members, use only after _tds__SetNetworkProtocols::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkProtocols::soap_type() returns SOAP_TYPE__tds__SetNetworkProtocols or derived type identifier
class _tds__SetNetworkProtocols
{ public:
/// <PRE><BLOCKQUOTE>
///   Configures one or more defined network protocols supported by the device. There are currently three protocols defined; HTTP, HTTPS and RTSP. The following parameters can be set for each protocol: port and enable/disable.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__NetworkProtocol* is 1..unbounded.
  $ int                                  __sizeNetworkProtocols         1;
/// Pointer to array tt__NetworkProtocol* of size 1..unbounded.
    tt__NetworkProtocol*                *NetworkProtocols               1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkProtocolsResponse is a complexType.
///
/// @note class _tds__SetNetworkProtocolsResponse operations:
/// - _tds__SetNetworkProtocolsResponse* soap_new__tds__SetNetworkProtocolsResponse(soap*) allocate and default initialize
/// - _tds__SetNetworkProtocolsResponse* soap_new__tds__SetNetworkProtocolsResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkProtocolsResponse* soap_new_req__tds__SetNetworkProtocolsResponse(soap*, ...) allocate, set required members
/// - _tds__SetNetworkProtocolsResponse* soap_new_set__tds__SetNetworkProtocolsResponse(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkProtocolsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkProtocolsResponse(soap*, _tds__SetNetworkProtocolsResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkProtocolsResponse(soap*, _tds__SetNetworkProtocolsResponse*) serialize to a stream
/// - _tds__SetNetworkProtocolsResponse* _tds__SetNetworkProtocolsResponse::soap_dup(soap*) returns deep copy of _tds__SetNetworkProtocolsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkProtocolsResponse::soap_del() deep deletes _tds__SetNetworkProtocolsResponse data members, use only after _tds__SetNetworkProtocolsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkProtocolsResponse::soap_type() returns SOAP_TYPE__tds__SetNetworkProtocolsResponse or derived type identifier
class _tds__SetNetworkProtocolsResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGateway is a complexType.
///
/// @note class _tds__GetNetworkDefaultGateway operations:
/// - _tds__GetNetworkDefaultGateway* soap_new__tds__GetNetworkDefaultGateway(soap*) allocate and default initialize
/// - _tds__GetNetworkDefaultGateway* soap_new__tds__GetNetworkDefaultGateway(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkDefaultGateway* soap_new_req__tds__GetNetworkDefaultGateway(soap*, ...) allocate, set required members
/// - _tds__GetNetworkDefaultGateway* soap_new_set__tds__GetNetworkDefaultGateway(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkDefaultGateway::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkDefaultGateway(soap*, _tds__GetNetworkDefaultGateway*) deserialize from a stream
/// - int soap_write__tds__GetNetworkDefaultGateway(soap*, _tds__GetNetworkDefaultGateway*) serialize to a stream
/// - _tds__GetNetworkDefaultGateway* _tds__GetNetworkDefaultGateway::soap_dup(soap*) returns deep copy of _tds__GetNetworkDefaultGateway, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkDefaultGateway::soap_del() deep deletes _tds__GetNetworkDefaultGateway data members, use only after _tds__GetNetworkDefaultGateway::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkDefaultGateway::soap_type() returns SOAP_TYPE__tds__GetNetworkDefaultGateway or derived type identifier
class _tds__GetNetworkDefaultGateway
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetNetworkDefaultGatewayResponse is a complexType.
///
/// @note class _tds__GetNetworkDefaultGatewayResponse operations:
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new__tds__GetNetworkDefaultGatewayResponse(soap*) allocate and default initialize
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new__tds__GetNetworkDefaultGatewayResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new_req__tds__GetNetworkDefaultGatewayResponse(soap*, ...) allocate, set required members
/// - _tds__GetNetworkDefaultGatewayResponse* soap_new_set__tds__GetNetworkDefaultGatewayResponse(soap*, ...) allocate, set all public members
/// - _tds__GetNetworkDefaultGatewayResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetNetworkDefaultGatewayResponse(soap*, _tds__GetNetworkDefaultGatewayResponse*) deserialize from a stream
/// - int soap_write__tds__GetNetworkDefaultGatewayResponse(soap*, _tds__GetNetworkDefaultGatewayResponse*) serialize to a stream
/// - _tds__GetNetworkDefaultGatewayResponse* _tds__GetNetworkDefaultGatewayResponse::soap_dup(soap*) returns deep copy of _tds__GetNetworkDefaultGatewayResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetNetworkDefaultGatewayResponse::soap_del() deep deletes _tds__GetNetworkDefaultGatewayResponse data members, use only after _tds__GetNetworkDefaultGatewayResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetNetworkDefaultGatewayResponse::soap_type() returns SOAP_TYPE__tds__GetNetworkDefaultGatewayResponse or derived type identifier
class _tds__GetNetworkDefaultGatewayResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Gets the default IPv4 and IPv6 gateway settings from the device.
/// </BLOCKQUOTE></PRE>
///
/// Element "NetworkGateway" of type "http://www.onvif.org/ver10/schema":NetworkGateway.
    tt__NetworkGateway*                  NetworkGateway                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGateway is a complexType.
///
/// @note class _tds__SetNetworkDefaultGateway operations:
/// - _tds__SetNetworkDefaultGateway* soap_new__tds__SetNetworkDefaultGateway(soap*) allocate and default initialize
/// - _tds__SetNetworkDefaultGateway* soap_new__tds__SetNetworkDefaultGateway(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkDefaultGateway* soap_new_req__tds__SetNetworkDefaultGateway(soap*, ...) allocate, set required members
/// - _tds__SetNetworkDefaultGateway* soap_new_set__tds__SetNetworkDefaultGateway(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkDefaultGateway::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkDefaultGateway(soap*, _tds__SetNetworkDefaultGateway*) deserialize from a stream
/// - int soap_write__tds__SetNetworkDefaultGateway(soap*, _tds__SetNetworkDefaultGateway*) serialize to a stream
/// - _tds__SetNetworkDefaultGateway* _tds__SetNetworkDefaultGateway::soap_dup(soap*) returns deep copy of _tds__SetNetworkDefaultGateway, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkDefaultGateway::soap_del() deep deletes _tds__SetNetworkDefaultGateway data members, use only after _tds__SetNetworkDefaultGateway::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkDefaultGateway::soap_type() returns SOAP_TYPE__tds__SetNetworkDefaultGateway or derived type identifier
class _tds__SetNetworkDefaultGateway
{ public:
/// <PRE><BLOCKQUOTE>
///   Sets IPv4 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv4Address is 0..unbounded.
  $ int                                  __sizeIPv4Address              0;
/// Pointer to array tt__IPv4Address of size 0..unbounded.
    tt__IPv4Address                     *IPv4Address                    0;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Sets IPv6 gateway address used as default setting.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__IPv6Address is 0..unbounded.
  $ int                                  __sizeIPv6Address              0;
/// Pointer to array tt__IPv6Address of size 0..unbounded.
    tt__IPv6Address                     *IPv6Address                    0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetNetworkDefaultGatewayResponse is a complexType.
///
/// @note class _tds__SetNetworkDefaultGatewayResponse operations:
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new__tds__SetNetworkDefaultGatewayResponse(soap*) allocate and default initialize
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new__tds__SetNetworkDefaultGatewayResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new_req__tds__SetNetworkDefaultGatewayResponse(soap*, ...) allocate, set required members
/// - _tds__SetNetworkDefaultGatewayResponse* soap_new_set__tds__SetNetworkDefaultGatewayResponse(soap*, ...) allocate, set all public members
/// - _tds__SetNetworkDefaultGatewayResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetNetworkDefaultGatewayResponse(soap*, _tds__SetNetworkDefaultGatewayResponse*) deserialize from a stream
/// - int soap_write__tds__SetNetworkDefaultGatewayResponse(soap*, _tds__SetNetworkDefaultGatewayResponse*) serialize to a stream
/// - _tds__SetNetworkDefaultGatewayResponse* _tds__SetNetworkDefaultGatewayResponse::soap_dup(soap*) returns deep copy of _tds__SetNetworkDefaultGatewayResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetNetworkDefaultGatewayResponse::soap_del() deep deletes _tds__SetNetworkDefaultGatewayResponse data members, use only after _tds__SetNetworkDefaultGatewayResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetNetworkDefaultGatewayResponse::soap_type() returns SOAP_TYPE__tds__SetNetworkDefaultGatewayResponse or derived type identifier
class _tds__SetNetworkDefaultGatewayResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfiguration is a complexType.
///
/// @note class _tds__GetZeroConfiguration operations:
/// - _tds__GetZeroConfiguration* soap_new__tds__GetZeroConfiguration(soap*) allocate and default initialize
/// - _tds__GetZeroConfiguration* soap_new__tds__GetZeroConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__GetZeroConfiguration* soap_new_req__tds__GetZeroConfiguration(soap*, ...) allocate, set required members
/// - _tds__GetZeroConfiguration* soap_new_set__tds__GetZeroConfiguration(soap*, ...) allocate, set all public members
/// - _tds__GetZeroConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetZeroConfiguration(soap*, _tds__GetZeroConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetZeroConfiguration(soap*, _tds__GetZeroConfiguration*) serialize to a stream
/// - _tds__GetZeroConfiguration* _tds__GetZeroConfiguration::soap_dup(soap*) returns deep copy of _tds__GetZeroConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetZeroConfiguration::soap_del() deep deletes _tds__GetZeroConfiguration data members, use only after _tds__GetZeroConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetZeroConfiguration::soap_type() returns SOAP_TYPE__tds__GetZeroConfiguration or derived type identifier
class _tds__GetZeroConfiguration
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetZeroConfigurationResponse is a complexType.
///
/// @note class _tds__GetZeroConfigurationResponse operations:
/// - _tds__GetZeroConfigurationResponse* soap_new__tds__GetZeroConfigurationResponse(soap*) allocate and default initialize
/// - _tds__GetZeroConfigurationResponse* soap_new__tds__GetZeroConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetZeroConfigurationResponse* soap_new_req__tds__GetZeroConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__GetZeroConfigurationResponse* soap_new_set__tds__GetZeroConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetZeroConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetZeroConfigurationResponse(soap*, _tds__GetZeroConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__GetZeroConfigurationResponse(soap*, _tds__GetZeroConfigurationResponse*) serialize to a stream
/// - _tds__GetZeroConfigurationResponse* _tds__GetZeroConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__GetZeroConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetZeroConfigurationResponse::soap_del() deep deletes _tds__GetZeroConfigurationResponse data members, use only after _tds__GetZeroConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetZeroConfigurationResponse::soap_type() returns SOAP_TYPE__tds__GetZeroConfigurationResponse or derived type identifier
class _tds__GetZeroConfigurationResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the zero-configuration.
/// </BLOCKQUOTE></PRE>
///
/// Element "ZeroConfiguration" of type "http://www.onvif.org/ver10/schema":NetworkZeroConfiguration.
    tt__NetworkZeroConfiguration*        ZeroConfiguration              1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfiguration is a complexType.
///
/// @note class _tds__SetZeroConfiguration operations:
/// - _tds__SetZeroConfiguration* soap_new__tds__SetZeroConfiguration(soap*) allocate and default initialize
/// - _tds__SetZeroConfiguration* soap_new__tds__SetZeroConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__SetZeroConfiguration* soap_new_req__tds__SetZeroConfiguration(soap*, ...) allocate, set required members
/// - _tds__SetZeroConfiguration* soap_new_set__tds__SetZeroConfiguration(soap*, ...) allocate, set all public members
/// - _tds__SetZeroConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetZeroConfiguration(soap*, _tds__SetZeroConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetZeroConfiguration(soap*, _tds__SetZeroConfiguration*) serialize to a stream
/// - _tds__SetZeroConfiguration* _tds__SetZeroConfiguration::soap_dup(soap*) returns deep copy of _tds__SetZeroConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetZeroConfiguration::soap_del() deep deletes _tds__SetZeroConfiguration data members, use only after _tds__SetZeroConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetZeroConfiguration::soap_type() returns SOAP_TYPE__tds__SetZeroConfiguration or derived type identifier
class _tds__SetZeroConfiguration
{ public:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical interface.
/// </BLOCKQUOTE></PRE>
///
/// Element "InterfaceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   InterfaceToken                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Specifies if the zero-configuration should be enabled or not.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetZeroConfigurationResponse is a complexType.
///
/// @note class _tds__SetZeroConfigurationResponse operations:
/// - _tds__SetZeroConfigurationResponse* soap_new__tds__SetZeroConfigurationResponse(soap*) allocate and default initialize
/// - _tds__SetZeroConfigurationResponse* soap_new__tds__SetZeroConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetZeroConfigurationResponse* soap_new_req__tds__SetZeroConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__SetZeroConfigurationResponse* soap_new_set__tds__SetZeroConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetZeroConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetZeroConfigurationResponse(soap*, _tds__SetZeroConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetZeroConfigurationResponse(soap*, _tds__SetZeroConfigurationResponse*) serialize to a stream
/// - _tds__SetZeroConfigurationResponse* _tds__SetZeroConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__SetZeroConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetZeroConfigurationResponse::soap_del() deep deletes _tds__SetZeroConfigurationResponse data members, use only after _tds__SetZeroConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetZeroConfigurationResponse::soap_type() returns SOAP_TYPE__tds__SetZeroConfigurationResponse or derived type identifier
class _tds__SetZeroConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilter is a complexType.
///
/// @note class _tds__GetIPAddressFilter operations:
/// - _tds__GetIPAddressFilter* soap_new__tds__GetIPAddressFilter(soap*) allocate and default initialize
/// - _tds__GetIPAddressFilter* soap_new__tds__GetIPAddressFilter(soap*, int num) allocate and default initialize an array
/// - _tds__GetIPAddressFilter* soap_new_req__tds__GetIPAddressFilter(soap*, ...) allocate, set required members
/// - _tds__GetIPAddressFilter* soap_new_set__tds__GetIPAddressFilter(soap*, ...) allocate, set all public members
/// - _tds__GetIPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetIPAddressFilter(soap*, _tds__GetIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__GetIPAddressFilter(soap*, _tds__GetIPAddressFilter*) serialize to a stream
/// - _tds__GetIPAddressFilter* _tds__GetIPAddressFilter::soap_dup(soap*) returns deep copy of _tds__GetIPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetIPAddressFilter::soap_del() deep deletes _tds__GetIPAddressFilter data members, use only after _tds__GetIPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetIPAddressFilter::soap_type() returns SOAP_TYPE__tds__GetIPAddressFilter or derived type identifier
class _tds__GetIPAddressFilter
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetIPAddressFilterResponse is a complexType.
///
/// @note class _tds__GetIPAddressFilterResponse operations:
/// - _tds__GetIPAddressFilterResponse* soap_new__tds__GetIPAddressFilterResponse(soap*) allocate and default initialize
/// - _tds__GetIPAddressFilterResponse* soap_new__tds__GetIPAddressFilterResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetIPAddressFilterResponse* soap_new_req__tds__GetIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - _tds__GetIPAddressFilterResponse* soap_new_set__tds__GetIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - _tds__GetIPAddressFilterResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetIPAddressFilterResponse(soap*, _tds__GetIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__GetIPAddressFilterResponse(soap*, _tds__GetIPAddressFilterResponse*) serialize to a stream
/// - _tds__GetIPAddressFilterResponse* _tds__GetIPAddressFilterResponse::soap_dup(soap*) returns deep copy of _tds__GetIPAddressFilterResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetIPAddressFilterResponse::soap_del() deep deletes _tds__GetIPAddressFilterResponse data members, use only after _tds__GetIPAddressFilterResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetIPAddressFilterResponse::soap_type() returns SOAP_TYPE__tds__GetIPAddressFilterResponse or derived type identifier
class _tds__GetIPAddressFilterResponse
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilter is a complexType.
///
/// @note class _tds__SetIPAddressFilter operations:
/// - _tds__SetIPAddressFilter* soap_new__tds__SetIPAddressFilter(soap*) allocate and default initialize
/// - _tds__SetIPAddressFilter* soap_new__tds__SetIPAddressFilter(soap*, int num) allocate and default initialize an array
/// - _tds__SetIPAddressFilter* soap_new_req__tds__SetIPAddressFilter(soap*, ...) allocate, set required members
/// - _tds__SetIPAddressFilter* soap_new_set__tds__SetIPAddressFilter(soap*, ...) allocate, set all public members
/// - _tds__SetIPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetIPAddressFilter(soap*, _tds__SetIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__SetIPAddressFilter(soap*, _tds__SetIPAddressFilter*) serialize to a stream
/// - _tds__SetIPAddressFilter* _tds__SetIPAddressFilter::soap_dup(soap*) returns deep copy of _tds__SetIPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetIPAddressFilter::soap_del() deep deletes _tds__SetIPAddressFilter data members, use only after _tds__SetIPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetIPAddressFilter::soap_type() returns SOAP_TYPE__tds__SetIPAddressFilter or derived type identifier
class _tds__SetIPAddressFilter
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetIPAddressFilterResponse is a complexType.
///
/// @note class _tds__SetIPAddressFilterResponse operations:
/// - _tds__SetIPAddressFilterResponse* soap_new__tds__SetIPAddressFilterResponse(soap*) allocate and default initialize
/// - _tds__SetIPAddressFilterResponse* soap_new__tds__SetIPAddressFilterResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetIPAddressFilterResponse* soap_new_req__tds__SetIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - _tds__SetIPAddressFilterResponse* soap_new_set__tds__SetIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - _tds__SetIPAddressFilterResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetIPAddressFilterResponse(soap*, _tds__SetIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__SetIPAddressFilterResponse(soap*, _tds__SetIPAddressFilterResponse*) serialize to a stream
/// - _tds__SetIPAddressFilterResponse* _tds__SetIPAddressFilterResponse::soap_dup(soap*) returns deep copy of _tds__SetIPAddressFilterResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetIPAddressFilterResponse::soap_del() deep deletes _tds__SetIPAddressFilterResponse data members, use only after _tds__SetIPAddressFilterResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetIPAddressFilterResponse::soap_type() returns SOAP_TYPE__tds__SetIPAddressFilterResponse or derived type identifier
class _tds__SetIPAddressFilterResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilter is a complexType.
///
/// @note class _tds__AddIPAddressFilter operations:
/// - _tds__AddIPAddressFilter* soap_new__tds__AddIPAddressFilter(soap*) allocate and default initialize
/// - _tds__AddIPAddressFilter* soap_new__tds__AddIPAddressFilter(soap*, int num) allocate and default initialize an array
/// - _tds__AddIPAddressFilter* soap_new_req__tds__AddIPAddressFilter(soap*, ...) allocate, set required members
/// - _tds__AddIPAddressFilter* soap_new_set__tds__AddIPAddressFilter(soap*, ...) allocate, set all public members
/// - _tds__AddIPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read__tds__AddIPAddressFilter(soap*, _tds__AddIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__AddIPAddressFilter(soap*, _tds__AddIPAddressFilter*) serialize to a stream
/// - _tds__AddIPAddressFilter* _tds__AddIPAddressFilter::soap_dup(soap*) returns deep copy of _tds__AddIPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__AddIPAddressFilter::soap_del() deep deletes _tds__AddIPAddressFilter data members, use only after _tds__AddIPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__AddIPAddressFilter::soap_type() returns SOAP_TYPE__tds__AddIPAddressFilter or derived type identifier
class _tds__AddIPAddressFilter
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":AddIPAddressFilterResponse is a complexType.
///
/// @note class _tds__AddIPAddressFilterResponse operations:
/// - _tds__AddIPAddressFilterResponse* soap_new__tds__AddIPAddressFilterResponse(soap*) allocate and default initialize
/// - _tds__AddIPAddressFilterResponse* soap_new__tds__AddIPAddressFilterResponse(soap*, int num) allocate and default initialize an array
/// - _tds__AddIPAddressFilterResponse* soap_new_req__tds__AddIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - _tds__AddIPAddressFilterResponse* soap_new_set__tds__AddIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - _tds__AddIPAddressFilterResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__AddIPAddressFilterResponse(soap*, _tds__AddIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__AddIPAddressFilterResponse(soap*, _tds__AddIPAddressFilterResponse*) serialize to a stream
/// - _tds__AddIPAddressFilterResponse* _tds__AddIPAddressFilterResponse::soap_dup(soap*) returns deep copy of _tds__AddIPAddressFilterResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__AddIPAddressFilterResponse::soap_del() deep deletes _tds__AddIPAddressFilterResponse data members, use only after _tds__AddIPAddressFilterResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__AddIPAddressFilterResponse::soap_type() returns SOAP_TYPE__tds__AddIPAddressFilterResponse or derived type identifier
class _tds__AddIPAddressFilterResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilter is a complexType.
///
/// @note class _tds__RemoveIPAddressFilter operations:
/// - _tds__RemoveIPAddressFilter* soap_new__tds__RemoveIPAddressFilter(soap*) allocate and default initialize
/// - _tds__RemoveIPAddressFilter* soap_new__tds__RemoveIPAddressFilter(soap*, int num) allocate and default initialize an array
/// - _tds__RemoveIPAddressFilter* soap_new_req__tds__RemoveIPAddressFilter(soap*, ...) allocate, set required members
/// - _tds__RemoveIPAddressFilter* soap_new_set__tds__RemoveIPAddressFilter(soap*, ...) allocate, set all public members
/// - _tds__RemoveIPAddressFilter::soap_default(soap*) default initialize members
/// - int soap_read__tds__RemoveIPAddressFilter(soap*, _tds__RemoveIPAddressFilter*) deserialize from a stream
/// - int soap_write__tds__RemoveIPAddressFilter(soap*, _tds__RemoveIPAddressFilter*) serialize to a stream
/// - _tds__RemoveIPAddressFilter* _tds__RemoveIPAddressFilter::soap_dup(soap*) returns deep copy of _tds__RemoveIPAddressFilter, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RemoveIPAddressFilter::soap_del() deep deletes _tds__RemoveIPAddressFilter data members, use only after _tds__RemoveIPAddressFilter::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RemoveIPAddressFilter::soap_type() returns SOAP_TYPE__tds__RemoveIPAddressFilter or derived type identifier
class _tds__RemoveIPAddressFilter
{ public:
/// Element "IPAddressFilter" of type "http://www.onvif.org/ver10/schema":IPAddressFilter.
    tt__IPAddressFilter*                 IPAddressFilter                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":RemoveIPAddressFilterResponse is a complexType.
///
/// @note class _tds__RemoveIPAddressFilterResponse operations:
/// - _tds__RemoveIPAddressFilterResponse* soap_new__tds__RemoveIPAddressFilterResponse(soap*) allocate and default initialize
/// - _tds__RemoveIPAddressFilterResponse* soap_new__tds__RemoveIPAddressFilterResponse(soap*, int num) allocate and default initialize an array
/// - _tds__RemoveIPAddressFilterResponse* soap_new_req__tds__RemoveIPAddressFilterResponse(soap*, ...) allocate, set required members
/// - _tds__RemoveIPAddressFilterResponse* soap_new_set__tds__RemoveIPAddressFilterResponse(soap*, ...) allocate, set all public members
/// - _tds__RemoveIPAddressFilterResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__RemoveIPAddressFilterResponse(soap*, _tds__RemoveIPAddressFilterResponse*) deserialize from a stream
/// - int soap_write__tds__RemoveIPAddressFilterResponse(soap*, _tds__RemoveIPAddressFilterResponse*) serialize to a stream
/// - _tds__RemoveIPAddressFilterResponse* _tds__RemoveIPAddressFilterResponse::soap_dup(soap*) returns deep copy of _tds__RemoveIPAddressFilterResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__RemoveIPAddressFilterResponse::soap_del() deep deletes _tds__RemoveIPAddressFilterResponse data members, use only after _tds__RemoveIPAddressFilterResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__RemoveIPAddressFilterResponse::soap_type() returns SOAP_TYPE__tds__RemoveIPAddressFilterResponse or derived type identifier
class _tds__RemoveIPAddressFilterResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicy is a complexType.
///
/// @note class _tds__GetAccessPolicy operations:
/// - _tds__GetAccessPolicy* soap_new__tds__GetAccessPolicy(soap*) allocate and default initialize
/// - _tds__GetAccessPolicy* soap_new__tds__GetAccessPolicy(soap*, int num) allocate and default initialize an array
/// - _tds__GetAccessPolicy* soap_new_req__tds__GetAccessPolicy(soap*, ...) allocate, set required members
/// - _tds__GetAccessPolicy* soap_new_set__tds__GetAccessPolicy(soap*, ...) allocate, set all public members
/// - _tds__GetAccessPolicy::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetAccessPolicy(soap*, _tds__GetAccessPolicy*) deserialize from a stream
/// - int soap_write__tds__GetAccessPolicy(soap*, _tds__GetAccessPolicy*) serialize to a stream
/// - _tds__GetAccessPolicy* _tds__GetAccessPolicy::soap_dup(soap*) returns deep copy of _tds__GetAccessPolicy, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetAccessPolicy::soap_del() deep deletes _tds__GetAccessPolicy data members, use only after _tds__GetAccessPolicy::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetAccessPolicy::soap_type() returns SOAP_TYPE__tds__GetAccessPolicy or derived type identifier
class _tds__GetAccessPolicy
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetAccessPolicyResponse is a complexType.
///
/// @note class _tds__GetAccessPolicyResponse operations:
/// - _tds__GetAccessPolicyResponse* soap_new__tds__GetAccessPolicyResponse(soap*) allocate and default initialize
/// - _tds__GetAccessPolicyResponse* soap_new__tds__GetAccessPolicyResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetAccessPolicyResponse* soap_new_req__tds__GetAccessPolicyResponse(soap*, ...) allocate, set required members
/// - _tds__GetAccessPolicyResponse* soap_new_set__tds__GetAccessPolicyResponse(soap*, ...) allocate, set all public members
/// - _tds__GetAccessPolicyResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetAccessPolicyResponse(soap*, _tds__GetAccessPolicyResponse*) deserialize from a stream
/// - int soap_write__tds__GetAccessPolicyResponse(soap*, _tds__GetAccessPolicyResponse*) serialize to a stream
/// - _tds__GetAccessPolicyResponse* _tds__GetAccessPolicyResponse::soap_dup(soap*) returns deep copy of _tds__GetAccessPolicyResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetAccessPolicyResponse::soap_del() deep deletes _tds__GetAccessPolicyResponse data members, use only after _tds__GetAccessPolicyResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetAccessPolicyResponse::soap_type() returns SOAP_TYPE__tds__GetAccessPolicyResponse or derived type identifier
class _tds__GetAccessPolicyResponse
{ public:
/// Element "PolicyFile" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PolicyFile                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicy is a complexType.
///
/// @note class _tds__SetAccessPolicy operations:
/// - _tds__SetAccessPolicy* soap_new__tds__SetAccessPolicy(soap*) allocate and default initialize
/// - _tds__SetAccessPolicy* soap_new__tds__SetAccessPolicy(soap*, int num) allocate and default initialize an array
/// - _tds__SetAccessPolicy* soap_new_req__tds__SetAccessPolicy(soap*, ...) allocate, set required members
/// - _tds__SetAccessPolicy* soap_new_set__tds__SetAccessPolicy(soap*, ...) allocate, set all public members
/// - _tds__SetAccessPolicy::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetAccessPolicy(soap*, _tds__SetAccessPolicy*) deserialize from a stream
/// - int soap_write__tds__SetAccessPolicy(soap*, _tds__SetAccessPolicy*) serialize to a stream
/// - _tds__SetAccessPolicy* _tds__SetAccessPolicy::soap_dup(soap*) returns deep copy of _tds__SetAccessPolicy, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetAccessPolicy::soap_del() deep deletes _tds__SetAccessPolicy data members, use only after _tds__SetAccessPolicy::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetAccessPolicy::soap_type() returns SOAP_TYPE__tds__SetAccessPolicy or derived type identifier
class _tds__SetAccessPolicy
{ public:
/// Element "PolicyFile" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      PolicyFile                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetAccessPolicyResponse is a complexType.
///
/// @note class _tds__SetAccessPolicyResponse operations:
/// - _tds__SetAccessPolicyResponse* soap_new__tds__SetAccessPolicyResponse(soap*) allocate and default initialize
/// - _tds__SetAccessPolicyResponse* soap_new__tds__SetAccessPolicyResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetAccessPolicyResponse* soap_new_req__tds__SetAccessPolicyResponse(soap*, ...) allocate, set required members
/// - _tds__SetAccessPolicyResponse* soap_new_set__tds__SetAccessPolicyResponse(soap*, ...) allocate, set all public members
/// - _tds__SetAccessPolicyResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetAccessPolicyResponse(soap*, _tds__SetAccessPolicyResponse*) deserialize from a stream
/// - int soap_write__tds__SetAccessPolicyResponse(soap*, _tds__SetAccessPolicyResponse*) serialize to a stream
/// - _tds__SetAccessPolicyResponse* _tds__SetAccessPolicyResponse::soap_dup(soap*) returns deep copy of _tds__SetAccessPolicyResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetAccessPolicyResponse::soap_del() deep deletes _tds__SetAccessPolicyResponse data members, use only after _tds__SetAccessPolicyResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetAccessPolicyResponse::soap_type() returns SOAP_TYPE__tds__SetAccessPolicyResponse or derived type identifier
class _tds__SetAccessPolicyResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificate
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificate is a complexType.
///
/// @note class _tds__CreateCertificate operations:
/// - _tds__CreateCertificate* soap_new__tds__CreateCertificate(soap*) allocate and default initialize
/// - _tds__CreateCertificate* soap_new__tds__CreateCertificate(soap*, int num) allocate and default initialize an array
/// - _tds__CreateCertificate* soap_new_req__tds__CreateCertificate(soap*, ...) allocate, set required members
/// - _tds__CreateCertificate* soap_new_set__tds__CreateCertificate(soap*, ...) allocate, set all public members
/// - _tds__CreateCertificate::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateCertificate(soap*, _tds__CreateCertificate*) deserialize from a stream
/// - int soap_write__tds__CreateCertificate(soap*, _tds__CreateCertificate*) serialize to a stream
/// - _tds__CreateCertificate* _tds__CreateCertificate::soap_dup(soap*) returns deep copy of _tds__CreateCertificate, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateCertificate::soap_del() deep deletes _tds__CreateCertificate data members, use only after _tds__CreateCertificate::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateCertificate::soap_type() returns SOAP_TYPE__tds__CreateCertificate or derived type identifier
class _tds__CreateCertificate
{ public:
/// <PRE><BLOCKQUOTE>
///   Certificate id.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Identification of the entity associated with the public-key.
/// </BLOCKQUOTE></PRE>
///
/// Element "Subject" of type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate validity start date.
/// </BLOCKQUOTE></PRE>
///
/// Element "ValidNotBefore" of type xs:dateTime.
    time_t*                              ValidNotBefore                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Certificate expiry start date.
/// </BLOCKQUOTE></PRE>
///
/// Element "ValidNotAfter" of type xs:dateTime.
    time_t*                              ValidNotAfter                  0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateCertificateResponse is a complexType.
///
/// @note class _tds__CreateCertificateResponse operations:
/// - _tds__CreateCertificateResponse* soap_new__tds__CreateCertificateResponse(soap*) allocate and default initialize
/// - _tds__CreateCertificateResponse* soap_new__tds__CreateCertificateResponse(soap*, int num) allocate and default initialize an array
/// - _tds__CreateCertificateResponse* soap_new_req__tds__CreateCertificateResponse(soap*, ...) allocate, set required members
/// - _tds__CreateCertificateResponse* soap_new_set__tds__CreateCertificateResponse(soap*, ...) allocate, set all public members
/// - _tds__CreateCertificateResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateCertificateResponse(soap*, _tds__CreateCertificateResponse*) deserialize from a stream
/// - int soap_write__tds__CreateCertificateResponse(soap*, _tds__CreateCertificateResponse*) serialize to a stream
/// - _tds__CreateCertificateResponse* _tds__CreateCertificateResponse::soap_dup(soap*) returns deep copy of _tds__CreateCertificateResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateCertificateResponse::soap_del() deep deletes _tds__CreateCertificateResponse data members, use only after _tds__CreateCertificateResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateCertificateResponse::soap_type() returns SOAP_TYPE__tds__CreateCertificateResponse or derived type identifier
class _tds__CreateCertificateResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "NvtCertificate" of type "http://www.onvif.org/ver10/schema":Certificate.
    tt__Certificate*                     NvtCertificate                 1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificates is a complexType.
///
/// @note class _tds__GetCertificates operations:
/// - _tds__GetCertificates* soap_new__tds__GetCertificates(soap*) allocate and default initialize
/// - _tds__GetCertificates* soap_new__tds__GetCertificates(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificates* soap_new_req__tds__GetCertificates(soap*, ...) allocate, set required members
/// - _tds__GetCertificates* soap_new_set__tds__GetCertificates(soap*, ...) allocate, set all public members
/// - _tds__GetCertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificates(soap*, _tds__GetCertificates*) deserialize from a stream
/// - int soap_write__tds__GetCertificates(soap*, _tds__GetCertificates*) serialize to a stream
/// - _tds__GetCertificates* _tds__GetCertificates::soap_dup(soap*) returns deep copy of _tds__GetCertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificates::soap_del() deep deletes _tds__GetCertificates data members, use only after _tds__GetCertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificates::soap_type() returns SOAP_TYPE__tds__GetCertificates or derived type identifier
class _tds__GetCertificates
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesResponse is a complexType.
///
/// @note class _tds__GetCertificatesResponse operations:
/// - _tds__GetCertificatesResponse* soap_new__tds__GetCertificatesResponse(soap*) allocate and default initialize
/// - _tds__GetCertificatesResponse* soap_new__tds__GetCertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificatesResponse* soap_new_req__tds__GetCertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__GetCertificatesResponse* soap_new_set__tds__GetCertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificatesResponse(soap*, _tds__GetCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesResponse(soap*, _tds__GetCertificatesResponse*) serialize to a stream
/// - _tds__GetCertificatesResponse* _tds__GetCertificatesResponse::soap_dup(soap*) returns deep copy of _tds__GetCertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificatesResponse::soap_del() deep deletes _tds__GetCertificatesResponse data members, use only after _tds__GetCertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificatesResponse::soap_type() returns SOAP_TYPE__tds__GetCertificatesResponse or derived type identifier
class _tds__GetCertificatesResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Id and base64 encoded DER representation of all available certificates.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Certificate* is 0..unbounded.
  $ int                                  __sizeNvtCertificate           0;
/// Pointer to array tt__Certificate* of size 0..unbounded.
    tt__Certificate*                    *NvtCertificate                 0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatus is a complexType.
///
/// @note class _tds__GetCertificatesStatus operations:
/// - _tds__GetCertificatesStatus* soap_new__tds__GetCertificatesStatus(soap*) allocate and default initialize
/// - _tds__GetCertificatesStatus* soap_new__tds__GetCertificatesStatus(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificatesStatus* soap_new_req__tds__GetCertificatesStatus(soap*, ...) allocate, set required members
/// - _tds__GetCertificatesStatus* soap_new_set__tds__GetCertificatesStatus(soap*, ...) allocate, set all public members
/// - _tds__GetCertificatesStatus::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificatesStatus(soap*, _tds__GetCertificatesStatus*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesStatus(soap*, _tds__GetCertificatesStatus*) serialize to a stream
/// - _tds__GetCertificatesStatus* _tds__GetCertificatesStatus::soap_dup(soap*) returns deep copy of _tds__GetCertificatesStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificatesStatus::soap_del() deep deletes _tds__GetCertificatesStatus data members, use only after _tds__GetCertificatesStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificatesStatus::soap_type() returns SOAP_TYPE__tds__GetCertificatesStatus or derived type identifier
class _tds__GetCertificatesStatus
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificatesStatusResponse is a complexType.
///
/// @note class _tds__GetCertificatesStatusResponse operations:
/// - _tds__GetCertificatesStatusResponse* soap_new__tds__GetCertificatesStatusResponse(soap*) allocate and default initialize
/// - _tds__GetCertificatesStatusResponse* soap_new__tds__GetCertificatesStatusResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificatesStatusResponse* soap_new_req__tds__GetCertificatesStatusResponse(soap*, ...) allocate, set required members
/// - _tds__GetCertificatesStatusResponse* soap_new_set__tds__GetCertificatesStatusResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCertificatesStatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificatesStatusResponse(soap*, _tds__GetCertificatesStatusResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificatesStatusResponse(soap*, _tds__GetCertificatesStatusResponse*) serialize to a stream
/// - _tds__GetCertificatesStatusResponse* _tds__GetCertificatesStatusResponse::soap_dup(soap*) returns deep copy of _tds__GetCertificatesStatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificatesStatusResponse::soap_del() deep deletes _tds__GetCertificatesStatusResponse data members, use only after _tds__GetCertificatesStatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificatesStatusResponse::soap_type() returns SOAP_TYPE__tds__GetCertificatesStatusResponse or derived type identifier
class _tds__GetCertificatesStatusResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__CertificateStatus* is 0..unbounded.
  $ int                                  __sizeCertificateStatus        0;
/// Pointer to array tt__CertificateStatus* of size 0..unbounded.
    tt__CertificateStatus*              *CertificateStatus              0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatus is a complexType.
///
/// @note class _tds__SetCertificatesStatus operations:
/// - _tds__SetCertificatesStatus* soap_new__tds__SetCertificatesStatus(soap*) allocate and default initialize
/// - _tds__SetCertificatesStatus* soap_new__tds__SetCertificatesStatus(soap*, int num) allocate and default initialize an array
/// - _tds__SetCertificatesStatus* soap_new_req__tds__SetCertificatesStatus(soap*, ...) allocate, set required members
/// - _tds__SetCertificatesStatus* soap_new_set__tds__SetCertificatesStatus(soap*, ...) allocate, set all public members
/// - _tds__SetCertificatesStatus::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetCertificatesStatus(soap*, _tds__SetCertificatesStatus*) deserialize from a stream
/// - int soap_write__tds__SetCertificatesStatus(soap*, _tds__SetCertificatesStatus*) serialize to a stream
/// - _tds__SetCertificatesStatus* _tds__SetCertificatesStatus::soap_dup(soap*) returns deep copy of _tds__SetCertificatesStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetCertificatesStatus::soap_del() deep deletes _tds__SetCertificatesStatus data members, use only after _tds__SetCertificatesStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetCertificatesStatus::soap_type() returns SOAP_TYPE__tds__SetCertificatesStatus or derived type identifier
class _tds__SetCertificatesStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates if a certificate is to be used in an optional HTTPS configuration of the device.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__CertificateStatus* is 0..unbounded.
  $ int                                  __sizeCertificateStatus        0;
/// Pointer to array tt__CertificateStatus* of size 0..unbounded.
    tt__CertificateStatus*              *CertificateStatus              0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetCertificatesStatusResponse is a complexType.
///
/// @note class _tds__SetCertificatesStatusResponse operations:
/// - _tds__SetCertificatesStatusResponse* soap_new__tds__SetCertificatesStatusResponse(soap*) allocate and default initialize
/// - _tds__SetCertificatesStatusResponse* soap_new__tds__SetCertificatesStatusResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetCertificatesStatusResponse* soap_new_req__tds__SetCertificatesStatusResponse(soap*, ...) allocate, set required members
/// - _tds__SetCertificatesStatusResponse* soap_new_set__tds__SetCertificatesStatusResponse(soap*, ...) allocate, set all public members
/// - _tds__SetCertificatesStatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetCertificatesStatusResponse(soap*, _tds__SetCertificatesStatusResponse*) deserialize from a stream
/// - int soap_write__tds__SetCertificatesStatusResponse(soap*, _tds__SetCertificatesStatusResponse*) serialize to a stream
/// - _tds__SetCertificatesStatusResponse* _tds__SetCertificatesStatusResponse::soap_dup(soap*) returns deep copy of _tds__SetCertificatesStatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetCertificatesStatusResponse::soap_del() deep deletes _tds__SetCertificatesStatusResponse data members, use only after _tds__SetCertificatesStatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetCertificatesStatusResponse::soap_type() returns SOAP_TYPE__tds__SetCertificatesStatusResponse or derived type identifier
class _tds__SetCertificatesStatusResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificates is a complexType.
///
/// @note class _tds__DeleteCertificates operations:
/// - _tds__DeleteCertificates* soap_new__tds__DeleteCertificates(soap*) allocate and default initialize
/// - _tds__DeleteCertificates* soap_new__tds__DeleteCertificates(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteCertificates* soap_new_req__tds__DeleteCertificates(soap*, ...) allocate, set required members
/// - _tds__DeleteCertificates* soap_new_set__tds__DeleteCertificates(soap*, ...) allocate, set all public members
/// - _tds__DeleteCertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteCertificates(soap*, _tds__DeleteCertificates*) deserialize from a stream
/// - int soap_write__tds__DeleteCertificates(soap*, _tds__DeleteCertificates*) serialize to a stream
/// - _tds__DeleteCertificates* _tds__DeleteCertificates::soap_dup(soap*) returns deep copy of _tds__DeleteCertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteCertificates::soap_del() deep deletes _tds__DeleteCertificates data members, use only after _tds__DeleteCertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteCertificates::soap_type() returns SOAP_TYPE__tds__DeleteCertificates or derived type identifier
class _tds__DeleteCertificates
{ public:
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of xsd__token is 1..unbounded.
  $ int                                  __sizeCertificateID            1;
/// Pointer to array xsd__token of size 1..unbounded.
    xsd__token                          *CertificateID                  1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":DeleteCertificatesResponse is a complexType.
///
/// @note class _tds__DeleteCertificatesResponse operations:
/// - _tds__DeleteCertificatesResponse* soap_new__tds__DeleteCertificatesResponse(soap*) allocate and default initialize
/// - _tds__DeleteCertificatesResponse* soap_new__tds__DeleteCertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__DeleteCertificatesResponse* soap_new_req__tds__DeleteCertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__DeleteCertificatesResponse* soap_new_set__tds__DeleteCertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__DeleteCertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__DeleteCertificatesResponse(soap*, _tds__DeleteCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__DeleteCertificatesResponse(soap*, _tds__DeleteCertificatesResponse*) serialize to a stream
/// - _tds__DeleteCertificatesResponse* _tds__DeleteCertificatesResponse::soap_dup(soap*) returns deep copy of _tds__DeleteCertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__DeleteCertificatesResponse::soap_del() deep deletes _tds__DeleteCertificatesResponse data members, use only after _tds__DeleteCertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__DeleteCertificatesResponse::soap_type() returns SOAP_TYPE__tds__DeleteCertificatesResponse or derived type identifier
class _tds__DeleteCertificatesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10Request is a complexType.
///
/// @note class _tds__GetPkcs10Request operations:
/// - _tds__GetPkcs10Request* soap_new__tds__GetPkcs10Request(soap*) allocate and default initialize
/// - _tds__GetPkcs10Request* soap_new__tds__GetPkcs10Request(soap*, int num) allocate and default initialize an array
/// - _tds__GetPkcs10Request* soap_new_req__tds__GetPkcs10Request(soap*, ...) allocate, set required members
/// - _tds__GetPkcs10Request* soap_new_set__tds__GetPkcs10Request(soap*, ...) allocate, set all public members
/// - _tds__GetPkcs10Request::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetPkcs10Request(soap*, _tds__GetPkcs10Request*) deserialize from a stream
/// - int soap_write__tds__GetPkcs10Request(soap*, _tds__GetPkcs10Request*) serialize to a stream
/// - _tds__GetPkcs10Request* _tds__GetPkcs10Request::soap_dup(soap*) returns deep copy of _tds__GetPkcs10Request, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetPkcs10Request::soap_del() deep deletes _tds__GetPkcs10Request data members, use only after _tds__GetPkcs10Request::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetPkcs10Request::soap_type() returns SOAP_TYPE__tds__GetPkcs10Request or derived type identifier
class _tds__GetPkcs10Request
{ public:
/// <PRE><BLOCKQUOTE>
///   List of ids of certificates to delete.
/// </BLOCKQUOTE></PRE>
///
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative Dinstinguished Name(RDN) CommonName(CN).
/// </BLOCKQUOTE></PRE>
///
/// Element "Subject" of type xs:string.
    char*                                Subject                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional base64 encoded DER attributes.
/// </BLOCKQUOTE></PRE>
///
/// Element "Attributes" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Attributes                     0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetPkcs10RequestResponse is a complexType.
///
/// @note class _tds__GetPkcs10RequestResponse operations:
/// - _tds__GetPkcs10RequestResponse* soap_new__tds__GetPkcs10RequestResponse(soap*) allocate and default initialize
/// - _tds__GetPkcs10RequestResponse* soap_new__tds__GetPkcs10RequestResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetPkcs10RequestResponse* soap_new_req__tds__GetPkcs10RequestResponse(soap*, ...) allocate, set required members
/// - _tds__GetPkcs10RequestResponse* soap_new_set__tds__GetPkcs10RequestResponse(soap*, ...) allocate, set all public members
/// - _tds__GetPkcs10RequestResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetPkcs10RequestResponse(soap*, _tds__GetPkcs10RequestResponse*) deserialize from a stream
/// - int soap_write__tds__GetPkcs10RequestResponse(soap*, _tds__GetPkcs10RequestResponse*) serialize to a stream
/// - _tds__GetPkcs10RequestResponse* _tds__GetPkcs10RequestResponse::soap_dup(soap*) returns deep copy of _tds__GetPkcs10RequestResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetPkcs10RequestResponse::soap_del() deep deletes _tds__GetPkcs10RequestResponse data members, use only after _tds__GetPkcs10RequestResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetPkcs10RequestResponse::soap_type() returns SOAP_TYPE__tds__GetPkcs10RequestResponse or derived type identifier
class _tds__GetPkcs10RequestResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Element "Pkcs10Request" of type "http://www.onvif.org/ver10/schema":BinaryData.
    tt__BinaryData*                      Pkcs10Request                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificates is a complexType.
///
/// @note class _tds__LoadCertificates operations:
/// - _tds__LoadCertificates* soap_new__tds__LoadCertificates(soap*) allocate and default initialize
/// - _tds__LoadCertificates* soap_new__tds__LoadCertificates(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCertificates* soap_new_req__tds__LoadCertificates(soap*, ...) allocate, set required members
/// - _tds__LoadCertificates* soap_new_set__tds__LoadCertificates(soap*, ...) allocate, set all public members
/// - _tds__LoadCertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCertificates(soap*, _tds__LoadCertificates*) deserialize from a stream
/// - int soap_write__tds__LoadCertificates(soap*, _tds__LoadCertificates*) serialize to a stream
/// - _tds__LoadCertificates* _tds__LoadCertificates::soap_dup(soap*) returns deep copy of _tds__LoadCertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCertificates::soap_del() deep deletes _tds__LoadCertificates data members, use only after _tds__LoadCertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCertificates::soap_type() returns SOAP_TYPE__tds__LoadCertificates or derived type identifier
class _tds__LoadCertificates
{ public:
/// <PRE><BLOCKQUOTE>
///   Optional id and base64 encoded DER representation of certificate.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__Certificate* is 1..unbounded.
  $ int                                  __sizeNVTCertificate           1;
/// Pointer to array tt__Certificate* of size 1..unbounded.
    tt__Certificate*                    *NVTCertificate                 1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificatesResponse is a complexType.
///
/// @note class _tds__LoadCertificatesResponse operations:
/// - _tds__LoadCertificatesResponse* soap_new__tds__LoadCertificatesResponse(soap*) allocate and default initialize
/// - _tds__LoadCertificatesResponse* soap_new__tds__LoadCertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCertificatesResponse* soap_new_req__tds__LoadCertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__LoadCertificatesResponse* soap_new_set__tds__LoadCertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__LoadCertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCertificatesResponse(soap*, _tds__LoadCertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCertificatesResponse(soap*, _tds__LoadCertificatesResponse*) serialize to a stream
/// - _tds__LoadCertificatesResponse* _tds__LoadCertificatesResponse::soap_dup(soap*) returns deep copy of _tds__LoadCertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCertificatesResponse::soap_del() deep deletes _tds__LoadCertificatesResponse data members, use only after _tds__LoadCertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCertificatesResponse::soap_type() returns SOAP_TYPE__tds__LoadCertificatesResponse or derived type identifier
class _tds__LoadCertificatesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateMode is a complexType.
///
/// @note class _tds__GetClientCertificateMode operations:
/// - _tds__GetClientCertificateMode* soap_new__tds__GetClientCertificateMode(soap*) allocate and default initialize
/// - _tds__GetClientCertificateMode* soap_new__tds__GetClientCertificateMode(soap*, int num) allocate and default initialize an array
/// - _tds__GetClientCertificateMode* soap_new_req__tds__GetClientCertificateMode(soap*, ...) allocate, set required members
/// - _tds__GetClientCertificateMode* soap_new_set__tds__GetClientCertificateMode(soap*, ...) allocate, set all public members
/// - _tds__GetClientCertificateMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetClientCertificateMode(soap*, _tds__GetClientCertificateMode*) deserialize from a stream
/// - int soap_write__tds__GetClientCertificateMode(soap*, _tds__GetClientCertificateMode*) serialize to a stream
/// - _tds__GetClientCertificateMode* _tds__GetClientCertificateMode::soap_dup(soap*) returns deep copy of _tds__GetClientCertificateMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetClientCertificateMode::soap_del() deep deletes _tds__GetClientCertificateMode data members, use only after _tds__GetClientCertificateMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetClientCertificateMode::soap_type() returns SOAP_TYPE__tds__GetClientCertificateMode or derived type identifier
class _tds__GetClientCertificateMode
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetClientCertificateModeResponse is a complexType.
///
/// @note class _tds__GetClientCertificateModeResponse operations:
/// - _tds__GetClientCertificateModeResponse* soap_new__tds__GetClientCertificateModeResponse(soap*) allocate and default initialize
/// - _tds__GetClientCertificateModeResponse* soap_new__tds__GetClientCertificateModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetClientCertificateModeResponse* soap_new_req__tds__GetClientCertificateModeResponse(soap*, ...) allocate, set required members
/// - _tds__GetClientCertificateModeResponse* soap_new_set__tds__GetClientCertificateModeResponse(soap*, ...) allocate, set all public members
/// - _tds__GetClientCertificateModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetClientCertificateModeResponse(soap*, _tds__GetClientCertificateModeResponse*) deserialize from a stream
/// - int soap_write__tds__GetClientCertificateModeResponse(soap*, _tds__GetClientCertificateModeResponse*) serialize to a stream
/// - _tds__GetClientCertificateModeResponse* _tds__GetClientCertificateModeResponse::soap_dup(soap*) returns deep copy of _tds__GetClientCertificateModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetClientCertificateModeResponse::soap_del() deep deletes _tds__GetClientCertificateModeResponse data members, use only after _tds__GetClientCertificateModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetClientCertificateModeResponse::soap_type() returns SOAP_TYPE__tds__GetClientCertificateModeResponse or derived type identifier
class _tds__GetClientCertificateModeResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateMode is a complexType.
///
/// @note class _tds__SetClientCertificateMode operations:
/// - _tds__SetClientCertificateMode* soap_new__tds__SetClientCertificateMode(soap*) allocate and default initialize
/// - _tds__SetClientCertificateMode* soap_new__tds__SetClientCertificateMode(soap*, int num) allocate and default initialize an array
/// - _tds__SetClientCertificateMode* soap_new_req__tds__SetClientCertificateMode(soap*, ...) allocate, set required members
/// - _tds__SetClientCertificateMode* soap_new_set__tds__SetClientCertificateMode(soap*, ...) allocate, set all public members
/// - _tds__SetClientCertificateMode::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetClientCertificateMode(soap*, _tds__SetClientCertificateMode*) deserialize from a stream
/// - int soap_write__tds__SetClientCertificateMode(soap*, _tds__SetClientCertificateMode*) serialize to a stream
/// - _tds__SetClientCertificateMode* _tds__SetClientCertificateMode::soap_dup(soap*) returns deep copy of _tds__SetClientCertificateMode, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetClientCertificateMode::soap_del() deep deletes _tds__SetClientCertificateMode data members, use only after _tds__SetClientCertificateMode::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetClientCertificateMode::soap_type() returns SOAP_TYPE__tds__SetClientCertificateMode or derived type identifier
class _tds__SetClientCertificateMode
{ public:
/// <PRE><BLOCKQUOTE>
///   Indicates whether or not client certificates are required by device.
/// </BLOCKQUOTE></PRE>
///
/// Element "Enabled" of type xs:boolean.
    bool                                 Enabled                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetClientCertificateModeResponse is a complexType.
///
/// @note class _tds__SetClientCertificateModeResponse operations:
/// - _tds__SetClientCertificateModeResponse* soap_new__tds__SetClientCertificateModeResponse(soap*) allocate and default initialize
/// - _tds__SetClientCertificateModeResponse* soap_new__tds__SetClientCertificateModeResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetClientCertificateModeResponse* soap_new_req__tds__SetClientCertificateModeResponse(soap*, ...) allocate, set required members
/// - _tds__SetClientCertificateModeResponse* soap_new_set__tds__SetClientCertificateModeResponse(soap*, ...) allocate, set all public members
/// - _tds__SetClientCertificateModeResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetClientCertificateModeResponse(soap*, _tds__SetClientCertificateModeResponse*) deserialize from a stream
/// - int soap_write__tds__SetClientCertificateModeResponse(soap*, _tds__SetClientCertificateModeResponse*) serialize to a stream
/// - _tds__SetClientCertificateModeResponse* _tds__SetClientCertificateModeResponse::soap_dup(soap*) returns deep copy of _tds__SetClientCertificateModeResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetClientCertificateModeResponse::soap_del() deep deletes _tds__SetClientCertificateModeResponse data members, use only after _tds__SetClientCertificateModeResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetClientCertificateModeResponse::soap_type() returns SOAP_TYPE__tds__SetClientCertificateModeResponse or derived type identifier
class _tds__SetClientCertificateModeResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificates is a complexType.
///
/// @note class _tds__GetCACertificates operations:
/// - _tds__GetCACertificates* soap_new__tds__GetCACertificates(soap*) allocate and default initialize
/// - _tds__GetCACertificates* soap_new__tds__GetCACertificates(soap*, int num) allocate and default initialize an array
/// - _tds__GetCACertificates* soap_new_req__tds__GetCACertificates(soap*, ...) allocate, set required members
/// - _tds__GetCACertificates* soap_new_set__tds__GetCACertificates(soap*, ...) allocate, set all public members
/// - _tds__GetCACertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCACertificates(soap*, _tds__GetCACertificates*) deserialize from a stream
/// - int soap_write__tds__GetCACertificates(soap*, _tds__GetCACertificates*) serialize to a stream
/// - _tds__GetCACertificates* _tds__GetCACertificates::soap_dup(soap*) returns deep copy of _tds__GetCACertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCACertificates::soap_del() deep deletes _tds__GetCACertificates data members, use only after _tds__GetCACertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCACertificates::soap_type() returns SOAP_TYPE__tds__GetCACertificates or derived type identifier
class _tds__GetCACertificates
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCACertificatesResponse is a complexType.
///
/// @note class _tds__GetCACertificatesResponse operations:
/// - _tds__GetCACertificatesResponse* soap_new__tds__GetCACertificatesResponse(soap*) allocate and default initialize
/// - _tds__GetCACertificatesResponse* soap_new__tds__GetCACertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCACertificatesResponse* soap_new_req__tds__GetCACertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__GetCACertificatesResponse* soap_new_set__tds__GetCACertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCACertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCACertificatesResponse(soap*, _tds__GetCACertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__GetCACertificatesResponse(soap*, _tds__GetCACertificatesResponse*) serialize to a stream
/// - _tds__GetCACertificatesResponse* _tds__GetCACertificatesResponse::soap_dup(soap*) returns deep copy of _tds__GetCACertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCACertificatesResponse::soap_del() deep deletes _tds__GetCACertificatesResponse data members, use only after _tds__GetCACertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCACertificatesResponse::soap_type() returns SOAP_TYPE__tds__GetCACertificatesResponse or derived type identifier
class _tds__GetCACertificatesResponse
{ public:
/// Size of array of tt__Certificate* is 0..unbounded.
  $ int                                  __sizeCACertificate            0;
/// Pointer to array tt__Certificate* of size 0..unbounded.
    tt__Certificate*                    *CACertificate                  0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKey is a complexType.
///
/// @note class _tds__LoadCertificateWithPrivateKey operations:
/// - _tds__LoadCertificateWithPrivateKey* soap_new__tds__LoadCertificateWithPrivateKey(soap*) allocate and default initialize
/// - _tds__LoadCertificateWithPrivateKey* soap_new__tds__LoadCertificateWithPrivateKey(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCertificateWithPrivateKey* soap_new_req__tds__LoadCertificateWithPrivateKey(soap*, ...) allocate, set required members
/// - _tds__LoadCertificateWithPrivateKey* soap_new_set__tds__LoadCertificateWithPrivateKey(soap*, ...) allocate, set all public members
/// - _tds__LoadCertificateWithPrivateKey::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCertificateWithPrivateKey(soap*, _tds__LoadCertificateWithPrivateKey*) deserialize from a stream
/// - int soap_write__tds__LoadCertificateWithPrivateKey(soap*, _tds__LoadCertificateWithPrivateKey*) serialize to a stream
/// - _tds__LoadCertificateWithPrivateKey* _tds__LoadCertificateWithPrivateKey::soap_dup(soap*) returns deep copy of _tds__LoadCertificateWithPrivateKey, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCertificateWithPrivateKey::soap_del() deep deletes _tds__LoadCertificateWithPrivateKey data members, use only after _tds__LoadCertificateWithPrivateKey::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCertificateWithPrivateKey::soap_type() returns SOAP_TYPE__tds__LoadCertificateWithPrivateKey or derived type identifier
class _tds__LoadCertificateWithPrivateKey
{ public:
/// Size of array of tt__CertificateWithPrivateKey* is 1..unbounded.
  $ int                                  __sizeCertificateWithPrivateKey 1;
/// Pointer to array tt__CertificateWithPrivateKey* of size 1..unbounded.
    tt__CertificateWithPrivateKey*      *CertificateWithPrivateKey      1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCertificateWithPrivateKeyResponse is a complexType.
///
/// @note class _tds__LoadCertificateWithPrivateKeyResponse operations:
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new__tds__LoadCertificateWithPrivateKeyResponse(soap*) allocate and default initialize
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new__tds__LoadCertificateWithPrivateKeyResponse(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new_req__tds__LoadCertificateWithPrivateKeyResponse(soap*, ...) allocate, set required members
/// - _tds__LoadCertificateWithPrivateKeyResponse* soap_new_set__tds__LoadCertificateWithPrivateKeyResponse(soap*, ...) allocate, set all public members
/// - _tds__LoadCertificateWithPrivateKeyResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCertificateWithPrivateKeyResponse(soap*, _tds__LoadCertificateWithPrivateKeyResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCertificateWithPrivateKeyResponse(soap*, _tds__LoadCertificateWithPrivateKeyResponse*) serialize to a stream
/// - _tds__LoadCertificateWithPrivateKeyResponse* _tds__LoadCertificateWithPrivateKeyResponse::soap_dup(soap*) returns deep copy of _tds__LoadCertificateWithPrivateKeyResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCertificateWithPrivateKeyResponse::soap_del() deep deletes _tds__LoadCertificateWithPrivateKeyResponse data members, use only after _tds__LoadCertificateWithPrivateKeyResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCertificateWithPrivateKeyResponse::soap_type() returns SOAP_TYPE__tds__LoadCertificateWithPrivateKeyResponse or derived type identifier
class _tds__LoadCertificateWithPrivateKeyResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformation is a complexType.
///
/// @note class _tds__GetCertificateInformation operations:
/// - _tds__GetCertificateInformation* soap_new__tds__GetCertificateInformation(soap*) allocate and default initialize
/// - _tds__GetCertificateInformation* soap_new__tds__GetCertificateInformation(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificateInformation* soap_new_req__tds__GetCertificateInformation(soap*, ...) allocate, set required members
/// - _tds__GetCertificateInformation* soap_new_set__tds__GetCertificateInformation(soap*, ...) allocate, set all public members
/// - _tds__GetCertificateInformation::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificateInformation(soap*, _tds__GetCertificateInformation*) deserialize from a stream
/// - int soap_write__tds__GetCertificateInformation(soap*, _tds__GetCertificateInformation*) serialize to a stream
/// - _tds__GetCertificateInformation* _tds__GetCertificateInformation::soap_dup(soap*) returns deep copy of _tds__GetCertificateInformation, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificateInformation::soap_del() deep deletes _tds__GetCertificateInformation data members, use only after _tds__GetCertificateInformation::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificateInformation::soap_type() returns SOAP_TYPE__tds__GetCertificateInformation or derived type identifier
class _tds__GetCertificateInformation
{ public:
/// Element "CertificateID" of type xs:token.
    xsd__token                           CertificateID                  1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetCertificateInformationResponse is a complexType.
///
/// @note class _tds__GetCertificateInformationResponse operations:
/// - _tds__GetCertificateInformationResponse* soap_new__tds__GetCertificateInformationResponse(soap*) allocate and default initialize
/// - _tds__GetCertificateInformationResponse* soap_new__tds__GetCertificateInformationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__GetCertificateInformationResponse* soap_new_req__tds__GetCertificateInformationResponse(soap*, ...) allocate, set required members
/// - _tds__GetCertificateInformationResponse* soap_new_set__tds__GetCertificateInformationResponse(soap*, ...) allocate, set all public members
/// - _tds__GetCertificateInformationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetCertificateInformationResponse(soap*, _tds__GetCertificateInformationResponse*) deserialize from a stream
/// - int soap_write__tds__GetCertificateInformationResponse(soap*, _tds__GetCertificateInformationResponse*) serialize to a stream
/// - _tds__GetCertificateInformationResponse* _tds__GetCertificateInformationResponse::soap_dup(soap*) returns deep copy of _tds__GetCertificateInformationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__GetCertificateInformationResponse::soap_del() deep deletes _tds__GetCertificateInformationResponse data members, use only after _tds__GetCertificateInformationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__GetCertificateInformationResponse::soap_type() returns SOAP_TYPE__tds__GetCertificateInformationResponse or derived type identifier
class _tds__GetCertificateInformationResponse
{ public:
/// Element "CertificateInformation" of type "http://www.onvif.org/ver10/schema":CertificateInformation.
    tt__CertificateInformation*          CertificateInformation         1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificates is a complexType.
///
/// @note class _tds__LoadCACertificates operations:
/// - _tds__LoadCACertificates* soap_new__tds__LoadCACertificates(soap*) allocate and default initialize
/// - _tds__LoadCACertificates* soap_new__tds__LoadCACertificates(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCACertificates* soap_new_req__tds__LoadCACertificates(soap*, ...) allocate, set required members
/// - _tds__LoadCACertificates* soap_new_set__tds__LoadCACertificates(soap*, ...) allocate, set all public members
/// - _tds__LoadCACertificates::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCACertificates(soap*, _tds__LoadCACertificates*) deserialize from a stream
/// - int soap_write__tds__LoadCACertificates(soap*, _tds__LoadCACertificates*) serialize to a stream
/// - _tds__LoadCACertificates* _tds__LoadCACertificates::soap_dup(soap*) returns deep copy of _tds__LoadCACertificates, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCACertificates::soap_del() deep deletes _tds__LoadCACertificates data members, use only after _tds__LoadCACertificates::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCACertificates::soap_type() returns SOAP_TYPE__tds__LoadCACertificates or derived type identifier
class _tds__LoadCACertificates
{ public:
/// Size of array of tt__Certificate* is 1..unbounded.
  $ int                                  __sizeCACertificate            1;
/// Pointer to array tt__Certificate* of size 1..unbounded.
    tt__Certificate*                    *CACertificate                  1;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":LoadCACertificatesResponse is a complexType.
///
/// @note class _tds__LoadCACertificatesResponse operations:
/// - _tds__LoadCACertificatesResponse* soap_new__tds__LoadCACertificatesResponse(soap*) allocate and default initialize
/// - _tds__LoadCACertificatesResponse* soap_new__tds__LoadCACertificatesResponse(soap*, int num) allocate and default initialize an array
/// - _tds__LoadCACertificatesResponse* soap_new_req__tds__LoadCACertificatesResponse(soap*, ...) allocate, set required members
/// - _tds__LoadCACertificatesResponse* soap_new_set__tds__LoadCACertificatesResponse(soap*, ...) allocate, set all public members
/// - _tds__LoadCACertificatesResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__LoadCACertificatesResponse(soap*, _tds__LoadCACertificatesResponse*) deserialize from a stream
/// - int soap_write__tds__LoadCACertificatesResponse(soap*, _tds__LoadCACertificatesResponse*) serialize to a stream
/// - _tds__LoadCACertificatesResponse* _tds__LoadCACertificatesResponse::soap_dup(soap*) returns deep copy of _tds__LoadCACertificatesResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__LoadCACertificatesResponse::soap_del() deep deletes _tds__LoadCACertificatesResponse data members, use only after _tds__LoadCACertificatesResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__LoadCACertificatesResponse::soap_type() returns SOAP_TYPE__tds__LoadCACertificatesResponse or derived type identifier
class _tds__LoadCACertificatesResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfiguration is a complexType.
///
/// @note class _tds__CreateDot1XConfiguration operations:
/// - _tds__CreateDot1XConfiguration* soap_new__tds__CreateDot1XConfiguration(soap*) allocate and default initialize
/// - _tds__CreateDot1XConfiguration* soap_new__tds__CreateDot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__CreateDot1XConfiguration* soap_new_req__tds__CreateDot1XConfiguration(soap*, ...) allocate, set required members
/// - _tds__CreateDot1XConfiguration* soap_new_set__tds__CreateDot1XConfiguration(soap*, ...) allocate, set all public members
/// - _tds__CreateDot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateDot1XConfiguration(soap*, _tds__CreateDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__CreateDot1XConfiguration(soap*, _tds__CreateDot1XConfiguration*) serialize to a stream
/// - _tds__CreateDot1XConfiguration* _tds__CreateDot1XConfiguration::soap_dup(soap*) returns deep copy of _tds__CreateDot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateDot1XConfiguration::soap_del() deep deletes _tds__CreateDot1XConfiguration data members, use only after _tds__CreateDot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateDot1XConfiguration::soap_type() returns SOAP_TYPE__tds__CreateDot1XConfiguration or derived type identifier
class _tds__CreateDot1XConfiguration
{ public:
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":CreateDot1XConfigurationResponse is a complexType.
///
/// @note class _tds__CreateDot1XConfigurationResponse operations:
/// - _tds__CreateDot1XConfigurationResponse* soap_new__tds__CreateDot1XConfigurationResponse(soap*) allocate and default initialize
/// - _tds__CreateDot1XConfigurationResponse* soap_new__tds__CreateDot1XConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__CreateDot1XConfigurationResponse* soap_new_req__tds__CreateDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__CreateDot1XConfigurationResponse* soap_new_set__tds__CreateDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__CreateDot1XConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__CreateDot1XConfigurationResponse(soap*, _tds__CreateDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__CreateDot1XConfigurationResponse(soap*, _tds__CreateDot1XConfigurationResponse*) serialize to a stream
/// - _tds__CreateDot1XConfigurationResponse* _tds__CreateDot1XConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__CreateDot1XConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__CreateDot1XConfigurationResponse::soap_del() deep deletes _tds__CreateDot1XConfigurationResponse data members, use only after _tds__CreateDot1XConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__CreateDot1XConfigurationResponse::soap_type() returns SOAP_TYPE__tds__CreateDot1XConfigurationResponse or derived type identifier
class _tds__CreateDot1XConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfiguration is a complexType.
///
/// @note class _tds__SetDot1XConfiguration operations:
/// - _tds__SetDot1XConfiguration* soap_new__tds__SetDot1XConfiguration(soap*) allocate and default initialize
/// - _tds__SetDot1XConfiguration* soap_new__tds__SetDot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__SetDot1XConfiguration* soap_new_req__tds__SetDot1XConfiguration(soap*, ...) allocate, set required members
/// - _tds__SetDot1XConfiguration* soap_new_set__tds__SetDot1XConfiguration(soap*, ...) allocate, set all public members
/// - _tds__SetDot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDot1XConfiguration(soap*, _tds__SetDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__SetDot1XConfiguration(soap*, _tds__SetDot1XConfiguration*) serialize to a stream
/// - _tds__SetDot1XConfiguration* _tds__SetDot1XConfiguration::soap_dup(soap*) returns deep copy of _tds__SetDot1XConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDot1XConfiguration::soap_del() deep deletes _tds__SetDot1XConfiguration data members, use only after _tds__SetDot1XConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDot1XConfiguration::soap_type() returns SOAP_TYPE__tds__SetDot1XConfiguration or derived type identifier
class _tds__SetDot1XConfiguration
{ public:
/// Element "Dot1XConfiguration" of type "http://www.onvif.org/ver10/schema":Dot1XConfiguration.
    tt__Dot1XConfiguration*              Dot1XConfiguration             1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse
/// @brief "http://www.onvif.org/ver10/device/wsdl":SetDot1XConfigurationResponse is a complexType.
///
/// @note class _tds__SetDot1XConfigurationResponse operations:
/// - _tds__SetDot1XConfigurationResponse* soap_new__tds__SetDot1XConfigurationResponse(soap*) allocate and default initialize
/// - _tds__SetDot1XConfigurationResponse* soap_new__tds__SetDot1XConfigurationResponse(soap*, int num) allocate and default initialize an array
/// - _tds__SetDot1XConfigurationResponse* soap_new_req__tds__SetDot1XConfigurationResponse(soap*, ...) allocate, set required members
/// - _tds__SetDot1XConfigurationResponse* soap_new_set__tds__SetDot1XConfigurationResponse(soap*, ...) allocate, set all public members
/// - _tds__SetDot1XConfigurationResponse::soap_default(soap*) default initialize members
/// - int soap_read__tds__SetDot1XConfigurationResponse(soap*, _tds__SetDot1XConfigurationResponse*) deserialize from a stream
/// - int soap_write__tds__SetDot1XConfigurationResponse(soap*, _tds__SetDot1XConfigurationResponse*) serialize to a stream
/// - _tds__SetDot1XConfigurationResponse* _tds__SetDot1XConfigurationResponse::soap_dup(soap*) returns deep copy of _tds__SetDot1XConfigurationResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tds__SetDot1XConfigurationResponse::soap_del() deep deletes _tds__SetDot1XConfigurationResponse data members, use only after _tds__SetDot1XConfigurationResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tds__SetDot1XConfigurationResponse::soap_type() returns SOAP_TYPE__tds__SetDot1XConfigurationResponse or derived type identifier
class _tds__SetDot1XConfigurationResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration
/// @brief "http://www.onvif.org/ver10/device/wsdl":GetDot1XConfiguration is a complexType.
///
/// @note class _tds__GetDot1XConfiguration operations:
/// - _tds__GetDot1XConfiguration* soap_new__tds__GetDot1XConfiguration(soap*) allocate and default initialize
/// - _tds__GetDot1XConfiguration* soap_new__tds__GetDot1XConfiguration(soap*, int num) allocate and default initialize an array
/// - _tds__GetDot1XConfiguration* soap_new_req__tds__GetDot1XConfiguration(soap*, ...) allocate, set required members
/// - _tds__GetDot1XConfiguration* soap_new_set__tds__GetDot1XConfiguration(soap*, ...) allocate, set all public members
/// - _tds__GetDot1XConfiguration::soap_default(soap*) default initialize members
/// - int soap_read__tds__GetDot1XConfiguration(soap*, _tds__GetDot1XConfiguration*) deserialize from a stream
/// - int soap_write__tds__GetDot1XConfiguration(soap*, _tds__GetDot1XConfiguration*) serialize to a stream
/// - _tds__GetDot1XConfiguration* _tds__GetDot1XConfiguration::soap_dup(soap*) 