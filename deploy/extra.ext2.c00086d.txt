 name="UTM_FLIGHT_STATE_UNKNOWN">
        <description>The flight state can't be determined.</description>
      </entry>
      <entry value="2" name="UTM_FLIGHT_STATE_GROUND">
        <description>UAS on ground.</description>
      </entry>
      <entry value="3" name="UTM_FLIGHT_STATE_AIRBORNE">
        <description>UAS airborne.</description>
      </entry>
      <entry value="16" name="UTM_FLIGHT_STATE_EMERGENCY">
        <description>UAS is in an emergency flight state.</description>
      </entry>
      <entry value="32" name="UTM_FLIGHT_STATE_NOCTRL">
        <description>UAS has no active controls.</description>
      </entry>
    </enum>
    <enum name="UTM_DATA_AVAIL_FLAGS" bitmask="true">
      <description>Flags for the global position report.</description>
      <entry value="1" name="UTM_DATA_AVAIL_FLAGS_TIME_VALID">
        <description>The field time contains valid data.</description>
      </entry>
      <entry value="2" name="UTM_DATA_AVAIL_FLAGS_UAS_ID_AVAILABLE">
        <description>The field uas_id contains valid data.</description>
      </entry>
      <entry value="4" name="UTM_DATA_AVAIL_FLAGS_POSITION_AVAILABLE">
        <description>The fields lat, lon and h_acc contain valid data.</description>
      </entry>
      <entry value="8" name="UTM_DATA_AVAIL_FLAGS_ALTITUDE_AVAILABLE">
        <description>The fields alt and v_acc contain valid data.</description>
      </entry>
      <entry value="16" name="UTM_DATA_AVAIL_FLAGS_RELATIVE_ALTITUDE_AVAILABLE">
        <description>The field relative_alt contains valid data.</description>
      </entry>
      <entry value="32" name="UTM_DATA_AVAIL_FLAGS_HORIZONTAL_VELO_AVAILABLE">
        <description>The fields vx and vy contain valid data.</description>
      </entry>
      <entry value="64" name="UTM_DATA_AVAIL_FLAGS_VERTICAL_VELO_AVAILABLE">
        <description>The field vz contains valid data.</description>
      </entry>
      <entry value="128" name="UTM_DATA_AVAIL_FLAGS_NEXT_WAYPOINT_AVAILABLE">
        <description>The fields next_lat, next_lon and next_alt contain valid data.</description>
      </entry>
    </enum>
    <!-- cellular status information -->
    <enum name="CELLULAR_STATUS_FLAG">
      <description>These flags encode the cellular network status</description>
      <entry value="0" name="CELLULAR_STATUS_FLAG_UNKNOWN">
        <description>State unknown or not reportable.</description>
      </entry>
      <entry value="1" name="CELLULAR_STATUS_FLAG_FAILED">
        <description>Modem is unusable</description>
      </entry>
      <entry value="2" name="CELLULAR_STATUS_FLAG_INITIALIZING">
        <description>Modem is being initialized</description>
      </entry>
      <entry value="3" name="CELLULAR_STATUS_FLAG_LOCKED">
        <description>Modem is locked</description>
      </entry>
      <entry value="4" name="CELLULAR_STATUS_FLAG_DISABLED">
        <description>Modem is not enabled and is powered down</description>
      </entry>
      <entry value="5" name="CELLULAR_STATUS_FLAG_DISABLING">
        <description>Modem is currently transitioning to the CELLULAR_STATUS_FLAG_DISABLED state</description>
      </entry>
      <entry value="6" name="CELLULAR_STATUS_FLAG_ENABLING">
        <description>Modem is currently transitioning to the CELLULAR_STATUS_FLAG_ENABLED state</description>
      </entry>
      <entry value="7" name="CELLULAR_STATUS_FLAG_ENABLED">
        <description>Modem is enabled and powered on but not registered with a network provider and not available for data connections</description>
      </entry>
      <entry value="8" name="CELLULAR_STATUS_FLAG_SEARCHING">
        <description>Modem is searching for a network provider to register</description>
      </entry>
      <entry value="9" name="CELLULAR_STATUS_FLAG_REGISTERED">
        <description>Modem is registered with a network provider, and data connections and messaging may be available for use</description>
      </entry>
      <entry value="10" name="CELLULAR_STATUS_FLAG_DISCONNECTING">
        <description>Modem is disconnecting and deactivating the last active packet data bearer. This state will not be entered if more than one packet data bearer is active and one of the active bearers is deactivated</description>
      </entry>
      <entry value="11" name="CELLULAR_STATUS_FLAG_CONNECTING">
        <description>Modem is activating and connecting the first packet data bearer. Subsequent bearer activations when another bearer is already active do not cause this state to be entered</description>
      </entry>
      <entry value="12" name="CELLULAR_STATUS_FLAG_CONNECTED">
        <description>One or more packet data bearers is active and connected</description>
      </entry>
    </enum>
    <enum name="CELLULAR_NETWORK_FAILED_REASON">
      <description>These flags are used to diagnose the failure state of CELLULAR_STATUS</description>
      <entry value="0" name="CELLULAR_NETWORK_FAILED_REASON_NONE">
        <description>No error</description>
      </entry>
      <entry value="1" name="CELLULAR_NETWORK_FAILED_REASON_UNKNOWN">
        <description>Error state is unknown</description>
      </entry>
      <entry value="2" name="CELLULAR_NETWORK_FAILED_REASON_SIM_MISSING">
        <description>SIM is required for the modem but missing</description>
      </entry>
      <entry value="3" name="CELLULAR_NETWORK_FAILED_REASON_SIM_ERROR">
        <description>SIM is available, but not usable for connection</description>
      </entry>
    </enum>
    <enum name="CELLULAR_NETWORK_RADIO_TYPE">
      <description>Cellular network radio type</description>
      <entry value="0" name="CELLULAR_NETWORK_RADIO_TYPE_NONE"/>
      <entry value="1" name="CELLULAR_NETWORK_RADIO_TYPE_GSM"/>
      <entry value="2" name="CELLULAR_NETWORK_RADIO_TYPE_CDMA"/>
      <entry value="3" name="CELLULAR_NETWORK_RADIO_TYPE_WCDMA"/>
      <entry value="4" name="CELLULAR_NETWORK_RADIO_TYPE_LTE"/>
    </enum>
    <enum name="PRECISION_LAND_MODE">
      <description>Precision land modes (used in MAV_CMD_NAV_LAND).</description>
      <entry value="0" name="PRECISION_LAND_MODE_DISABLED">
        <description>Normal (non-precision) landing.</description>
      </entry>
      <entry value="1" name="PRECISION_LAND_MODE_OPPORTUNISTIC">
        <description>Use precision landing if beacon detected when land command accepted, otherwise land normally.</description>
      </entry>
      <entry value="2" name="PRECISION_LAND_MODE_REQUIRED">
        <description>Use precision landing, searching for beacon if not found when land command accepted (land normally if beacon cannot be found).</description>
      </entry>
    </enum>
    <!-- parachute action enum -->
    <enum name="PARACHUTE_ACTION">
      <description>Parachute actions. Trigger release and enable/disable auto-release.</description>
      <entry value="0" name="PARACHUTE_DISABLE">
        <description>Disable auto-release of parachute (i.e. release triggered by crash detectors).</description>
      </entry>
      <entry value="1" name="PARACHUTE_ENABLE">
        <description>Enable auto-release of parachute.</description>
      </entry>
      <entry value="2" name="PARACHUTE_RELEASE">
        <description>Release parachute and kill motors.</description>
      </entry>
    </enum>
    <enum name="MAV_TUNNEL_PAYLOAD_TYPE">
      <entry value="0" name="MAV_TUNNEL_PAYLOAD_TYPE_UNKNOWN">
        <description>Encoding of payload unknown.</description>
      </entry>
      <entry value="200" name="MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED0">
        <description>Registered for STorM32 gimbal controller.</description>
      </entry>
      <entry value="201" name="MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED1">
        <description>Registered for STorM32 gimbal controller.</description>
      </entry>
      <entry value="202" name="MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED2">
        <description>Registered for STorM32 gimbal controller.</description>
      </entry>
      <entry value="203" name="MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED3">
        <description>Registered for STorM32 gimbal controller.</description>
      </entry>
      <entry value="204" name="MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED4">
        <description>Registered for STorM32 gimbal controller.</description>
      </entry>
      <entry value="205" name="MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED5">
        <description>Registered for STorM32 gimbal controller.</description>
      </entry>
      <entry value="206" name="MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED6">
        <description>Registered for STorM32 gimbal controller.</description>
      </entry>
      <entry value="207" name="MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED7">
        <description>Registered for STorM32 gimbal controller.</description>
      </entry>
      <entry value="208" name="MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED8">
        <description>Registered for STorM32 gimbal controller.</description>
      </entry>
      <entry value="209" name="MAV_TUNNEL_PAYLOAD_TYPE_STORM32_RESERVED9">
        <description>Registered for STorM32 gimbal controller.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_ID_TYPE">
      <entry value="0" name="MAV_ODID_ID_TYPE_NONE">
        <description>No type defined.</description>
      </entry>
      <entry value="1" name="MAV_ODID_ID_TYPE_SERIAL_NUMBER">
        <description>Manufacturer Serial Number (ANSI/CTA-2063 format).</description>
      </entry>
      <entry value="2" name="MAV_ODID_ID_TYPE_CAA_REGISTRATION_ID">
        <description>CAA (Civil Aviation Authority) registered ID. Format: [ICAO Country Code].[CAA Assigned ID].</description>
      </entry>
      <entry value="3" name="MAV_ODID_ID_TYPE_UTM_ASSIGNED_UUID">
        <description>UTM (Unmanned Traffic Management) assigned UUID (RFC4122).</description>
      </entry>
      <entry value="4" name="MAV_ODID_ID_TYPE_SPECIFIC_SESSION_ID">
        <description>A 20 byte ID for a specific flight/session. The exact ID type is indicated by the first byte of uas_id and these type values are managed by ICAO.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_UA_TYPE">
      <entry value="0" name="MAV_ODID_UA_TYPE_NONE">
        <description>No UA (Unmanned Aircraft) type defined.</description>
      </entry>
      <entry value="1" name="MAV_ODID_UA_TYPE_AEROPLANE">
        <description>Aeroplane/Airplane. Fixed wing.</description>
      </entry>
      <entry value="2" name="MAV_ODID_UA_TYPE_HELICOPTER_OR_MULTIROTOR">
        <description>Helicopter or multirotor.</description>
      </entry>
      <entry value="3" name="MAV_ODID_UA_TYPE_GYROPLANE">
        <description>Gyroplane.</description>
      </entry>
      <entry value="4" name="MAV_ODID_UA_TYPE_HYBRID_LIFT">
        <description>VTOL (Vertical Take-Off and Landing). Fixed wing aircraft that can take off vertically.</description>
      </entry>
      <entry value="5" name="MAV_ODID_UA_TYPE_ORNITHOPTER">
        <description>Ornithopter.</description>
      </entry>
      <entry value="6" name="MAV_ODID_UA_TYPE_GLIDER">
        <description>Glider.</description>
      </entry>
      <entry value="7" name="MAV_ODID_UA_TYPE_KITE">
        <description>Kite.</description>
      </entry>
      <entry value="8" name="MAV_ODID_UA_TYPE_FREE_BALLOON">
        <description>Free Balloon.</description>
      </entry>
      <entry value="9" name="MAV_ODID_UA_TYPE_CAPTIVE_BALLOON">
        <description>Captive Balloon.</description>
      </entry>
      <entry value="10" name="MAV_ODID_UA_TYPE_AIRSHIP">
        <description>Airship. E.g. a blimp.</description>
      </entry>
      <entry value="11" name="MAV_ODID_UA_TYPE_FREE_FALL_PARACHUTE">
        <description>Free Fall/Parachute (unpowered).</description>
      </entry>
      <entry value="12" name="MAV_ODID_UA_TYPE_ROCKET">
        <description>Rocket.</description>
      </entry>
      <entry value="13" name="MAV_ODID_UA_TYPE_TETHERED_POWERED_AIRCRAFT">
        <description>Tethered powered aircraft.</description>
      </entry>
      <entry value="14" name="MAV_ODID_UA_TYPE_GROUND_OBSTACLE">
        <description>Ground Obstacle.</description>
      </entry>
      <entry value="15" name="MAV_ODID_UA_TYPE_OTHER">
        <description>Other type of aircraft not listed earlier.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_STATUS">
      <entry value="0" name="MAV_ODID_STATUS_UNDECLARED">
        <description>The status of the (UA) Unmanned Aircraft is undefined.</description>
      </entry>
      <entry value="1" name="MAV_ODID_STATUS_GROUND">
        <description>The UA is on the ground.</description>
      </entry>
      <entry value="2" name="MAV_ODID_STATUS_AIRBORNE">
        <description>The UA is in the air.</description>
      </entry>
      <entry value="3" name="MAV_ODID_STATUS_EMERGENCY">
        <description>The UA is having an emergency.</description>
      </entry>
      <entry value="4" name="MAV_ODID_STATUS_REMOTE_ID_SYSTEM_FAILURE">
        <description>The remote ID system is failing or unreliable in some way.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_HEIGHT_REF">
      <entry value="0" name="MAV_ODID_HEIGHT_REF_OVER_TAKEOFF">
        <description>The height field is relative to the take-off location.</description>
      </entry>
      <entry value="1" name="MAV_ODID_HEIGHT_REF_OVER_GROUND">
        <description>The height field is relative to ground.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_HOR_ACC">
      <entry value="0" name="MAV_ODID_HOR_ACC_UNKNOWN">
        <description>The horizontal accuracy is unknown.</description>
      </entry>
      <entry value="1" name="MAV_ODID_HOR_ACC_10NM">
        <description>The horizontal accuracy is smaller than 10 Nautical Miles. 18.52 km.</description>
      </entry>
      <entry value="2" name="MAV_ODID_HOR_ACC_4NM">
        <description>The horizontal accuracy is smaller than 4 Nautical Miles. 7.408 km.</description>
      </entry>
      <entry value="3" name="MAV_ODID_HOR_ACC_2NM">
        <description>The horizontal accuracy is smaller than 2 Nautical Miles. 3.704 km.</description>
      </entry>
      <entry value="4" name="MAV_ODID_HOR_ACC_1NM">
        <description>The horizontal accuracy is smaller than 1 Nautical Miles. 1.852 km.</description>
      </entry>
      <entry value="5" name="MAV_ODID_HOR_ACC_0_5NM">
        <description>The horizontal accuracy is smaller than 0.5 Nautical Miles. 926 m.</description>
      </entry>
      <entry value="6" name="MAV_ODID_HOR_ACC_0_3NM">
        <description>The horizontal accuracy is smaller than 0.3 Nautical Miles. 555.6 m.</description>
      </entry>
      <entry value="7" name="MAV_ODID_HOR_ACC_0_1NM">
        <description>The horizontal accuracy is smaller than 0.1 Nautical Miles. 185.2 m.</description>
      </entry>
      <entry value="8" name="MAV_ODID_HOR_ACC_0_05NM">
        <description>The horizontal accuracy is smaller than 0.05 Nautical Miles. 92.6 m.</description>
      </entry>
      <entry value="9" name="MAV_ODID_HOR_ACC_30_METER">
        <description>The horizontal accuracy is smaller than 30 meter.</description>
      </entry>
      <entry value="10" name="MAV_ODID_HOR_ACC_10_METER">
        <description>The horizontal accuracy is smaller than 10 meter.</description>
      </entry>
      <entry value="11" name="MAV_ODID_HOR_ACC_3_METER">
        <description>The horizontal accuracy is smaller than 3 meter.</description>
      </entry>
      <entry value="12" name="MAV_ODID_HOR_ACC_1_METER">
        <description>The horizontal accuracy is smaller than 1 meter.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_VER_ACC">
      <entry value="0" name="MAV_ODID_VER_ACC_UNKNOWN">
        <description>The vertical accuracy is unknown.</description>
      </entry>
      <entry value="1" name="MAV_ODID_VER_ACC_150_METER">
        <description>The vertical accuracy is smaller than 150 meter.</description>
      </entry>
      <entry value="2" name="MAV_ODID_VER_ACC_45_METER">
        <description>The vertical accuracy is smaller than 45 meter.</description>
      </entry>
      <entry value="3" name="MAV_ODID_VER_ACC_25_METER">
        <description>The vertical accuracy is smaller than 25 meter.</description>
      </entry>
      <entry value="4" name="MAV_ODID_VER_ACC_10_METER">
        <description>The vertical accuracy is smaller than 10 meter.</description>
      </entry>
      <entry value="5" name="MAV_ODID_VER_ACC_3_METER">
        <description>The vertical accuracy is smaller than 3 meter.</description>
      </entry>
      <entry value="6" name="MAV_ODID_VER_ACC_1_METER">
        <description>The vertical accuracy is smaller than 1 meter.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_SPEED_ACC">
      <entry value="0" name="MAV_ODID_SPEED_ACC_UNKNOWN">
        <description>The speed accuracy is unknown.</description>
      </entry>
      <entry value="1" name="MAV_ODID_SPEED_ACC_10_METERS_PER_SECOND">
        <description>The speed accuracy is smaller than 10 meters per second.</description>
      </entry>
      <entry value="2" name="MAV_ODID_SPEED_ACC_3_METERS_PER_SECOND">
        <description>The speed accuracy is smaller than 3 meters per second.</description>
      </entry>
      <entry value="3" name="MAV_ODID_SPEED_ACC_1_METERS_PER_SECOND">
        <description>The speed accuracy is smaller than 1 meters per second.</description>
      </entry>
      <entry value="4" name="MAV_ODID_SPEED_ACC_0_3_METERS_PER_SECOND">
        <description>The speed accuracy is smaller than 0.3 meters per second.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_TIME_ACC">
      <entry value="0" name="MAV_ODID_TIME_ACC_UNKNOWN">
        <description>The timestamp accuracy is unknown.</description>
      </entry>
      <entry value="1" name="MAV_ODID_TIME_ACC_0_1_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 0.1 second.</description>
      </entry>
      <entry value="2" name="MAV_ODID_TIME_ACC_0_2_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 0.2 second.</description>
      </entry>
      <entry value="3" name="MAV_ODID_TIME_ACC_0_3_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 0.3 second.</description>
      </entry>
      <entry value="4" name="MAV_ODID_TIME_ACC_0_4_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 0.4 second.</description>
      </entry>
      <entry value="5" name="MAV_ODID_TIME_ACC_0_5_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 0.5 second.</description>
      </entry>
      <entry value="6" name="MAV_ODID_TIME_ACC_0_6_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 0.6 second.</description>
      </entry>
      <entry value="7" name="MAV_ODID_TIME_ACC_0_7_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 0.7 second.</description>
      </entry>
      <entry value="8" name="MAV_ODID_TIME_ACC_0_8_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 0.8 second.</description>
      </entry>
      <entry value="9" name="MAV_ODID_TIME_ACC_0_9_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 0.9 second.</description>
      </entry>
      <entry value="10" name="MAV_ODID_TIME_ACC_1_0_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 1.0 second.</description>
      </entry>
      <entry value="11" name="MAV_ODID_TIME_ACC_1_1_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 1.1 second.</description>
      </entry>
      <entry value="12" name="MAV_ODID_TIME_ACC_1_2_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 1.2 second.</description>
      </entry>
      <entry value="13" name="MAV_ODID_TIME_ACC_1_3_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 1.3 second.</description>
      </entry>
      <entry value="14" name="MAV_ODID_TIME_ACC_1_4_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 1.4 second.</description>
      </entry>
      <entry value="15" name="MAV_ODID_TIME_ACC_1_5_SECOND">
        <description>The timestamp accuracy is smaller than or equal to 1.5 second.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_AUTH_TYPE">
      <entry value="0" name="MAV_ODID_AUTH_TYPE_NONE">
        <description>No authentication type is specified.</description>
      </entry>
      <entry value="1" name="MAV_ODID_AUTH_TYPE_UAS_ID_SIGNATURE">
        <description>Signature for the UAS (Unmanned Aircraft System) ID.</description>
      </entry>
      <entry value="2" name="MAV_ODID_AUTH_TYPE_OPERATOR_ID_SIGNATURE">
        <description>Signature for the Operator ID.</description>
      </entry>
      <entry value="3" name="MAV_ODID_AUTH_TYPE_MESSAGE_SET_SIGNATURE">
        <description>Signature for the entire message set.</description>
      </entry>
      <entry value="4" name="MAV_ODID_AUTH_TYPE_NETWORK_REMOTE_ID">
        <description>Authentication is provided by Network Remote ID.</description>
      </entry>
      <entry value="5" name="MAV_ODID_AUTH_TYPE_SPECIFIC_AUTHENTICATION">
        <description>The exact authentication type is indicated by the first byte of authentication_data and these type values are managed by ICAO.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_DESC_TYPE">
      <entry value="0" name="MAV_ODID_DESC_TYPE_TEXT">
        <description>Optional free-form text description of the purpose of the flight.</description>
      </entry>
      <entry value="1" name="MAV_ODID_DESC_TYPE_EMERGENCY">
        <description>Optional additional clarification when status == MAV_ODID_STATUS_EMERGENCY.</description>
      </entry>
      <entry value="2" name="MAV_ODID_DESC_TYPE_EXTENDED_STATUS">
        <description>Optional additional clarification when status != MAV_ODID_STATUS_EMERGENCY.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_OPERATOR_LOCATION_TYPE">
      <entry value="0" name="MAV_ODID_OPERATOR_LOCATION_TYPE_TAKEOFF">
        <description>The location/altitude of the operator is the same as the take-off location.</description>
      </entry>
      <entry value="1" name="MAV_ODID_OPERATOR_LOCATION_TYPE_LIVE_GNSS">
        <description>The location/altitude of the operator is dynamic. E.g. based on live GNSS data.</description>
      </entry>
      <entry value="2" name="MAV_ODID_OPERATOR_LOCATION_TYPE_FIXED">
        <description>The location/altitude of the operator are fixed values.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_CLASSIFICATION_TYPE">
      <entry value="0" name="MAV_ODID_CLASSIFICATION_TYPE_UNDECLARED">
        <description>The classification type for the UA is undeclared.</description>
      </entry>
      <entry value="1" name="MAV_ODID_CLASSIFICATION_TYPE_EU">
        <description>The classification type for the UA follows EU (European Union) specifications.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_CATEGORY_EU">
      <entry value="0" name="MAV_ODID_CATEGORY_EU_UNDECLARED">
        <description>The category for the UA, according to the EU specification, is undeclared.</description>
      </entry>
      <entry value="1" name="MAV_ODID_CATEGORY_EU_OPEN">
        <description>The category for the UA, according to the EU specification, is the Open category.</description>
      </entry>
      <entry value="2" name="MAV_ODID_CATEGORY_EU_SPECIFIC">
        <description>The category for the UA, according to the EU specification, is the Specific category.</description>
      </entry>
      <entry value="3" name="MAV_ODID_CATEGORY_EU_CERTIFIED">
        <description>The category for the UA, according to the EU specification, is the Certified category.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_CLASS_EU">
      <entry value="0" name="MAV_ODID_CLASS_EU_UNDECLARED">
        <description>The class for the UA, according to the EU specification, is undeclared.</description>
      </entry>
      <entry value="1" name="MAV_ODID_CLASS_EU_CLASS_0">
        <description>The class for the UA, according to the EU specification, is Class 0.</description>
      </entry>
      <entry value="2" name="MAV_ODID_CLASS_EU_CLASS_1">
        <description>The class for the UA, according to the EU specification, is Class 1.</description>
      </entry>
      <entry value="3" name="MAV_ODID_CLASS_EU_CLASS_2">
        <description>The class for the UA, according to the EU specification, is Class 2.</description>
      </entry>
      <entry value="4" name="MAV_ODID_CLASS_EU_CLASS_3">
        <description>The class for the UA, according to the EU specification, is Class 3.</description>
      </entry>
      <entry value="5" name="MAV_ODID_CLASS_EU_CLASS_4">
        <description>The class for the UA, according to the EU specification, is Class 4.</description>
      </entry>
      <entry value="6" name="MAV_ODID_CLASS_EU_CLASS_5">
        <description>The class for the UA, according to the EU specification, is Class 5.</description>
      </entry>
      <entry value="7" name="MAV_ODID_CLASS_EU_CLASS_6">
        <description>The class for the UA, according to the EU specification, is Class 6.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_OPERATOR_ID_TYPE">
      <entry value="0" name="MAV_ODID_OPERATOR_ID_TYPE_CAA">
        <description>CAA (Civil Aviation Authority) registered operator ID.</description>
      </entry>
    </enum>
    <enum name="MAV_ODID_ARM_STATUS">
      <entry value="0" name="MAV_ODID_ARM_STATUS_GOOD_TO_ARM">
        <description>Passing arming checks.</description>
      </entry>
      <entry value="1" name="MAV_ODID_ARM_STATUS_PRE_ARM_FAIL_GENERIC">
        <description>Generic arming failure, see error string for details.</description>
      </entry>
    </enum>
    <enum name="TUNE_FORMAT">
      <description>Tune formats (used for vehicle buzzer/tone generation).</description>
      <entry value="1" name="TUNE_FORMAT_QBASIC1_1">
        <description>Format is QBasic 1.1 Play: https://www.qbasic.net/en/reference/qb11/Statement/PLAY-006.htm.</description>
      </entry>
      <entry value="2" name="TUNE_FORMAT_MML_MODERN">
        <description>Format is Modern Music Markup Language (MML): https://en.wikipedia.org/wiki/Music_Macro_Language#Modern_MML.</description>
      </entry>
    </enum>
    <!-- AIS related enums-->
    <enum name="AIS_TYPE">
      <description>Type of AIS vessel, enum duplicated from AIS standard, https://gpsd.gitlab.io/gpsd/AIVDM.html</description>
      <entry value="0" name="AIS_TYPE_UNKNOWN">
        <description>Not available (default).</description>
      </entry>
      <entry value="1" name="AIS_TYPE_RESERVED_1"/>
      <entry value="2" name="AIS_TYPE_RESERVED_2"/>
      <entry value="3" name="AIS_TYPE_RESERVED_3"/>
      <entry value="4" name="AIS_TYPE_RESERVED_4"/>
      <entry value="5" name="AIS_TYPE_RESERVED_5"/>
      <entry value="6" name="AIS_TYPE_RESERVED_6"/>
      <entry value="7" name="AIS_TYPE_RESERVED_7"/>
      <entry value="8" name="AIS_TYPE_RESERVED_8"/>
      <entry value="9" name="AIS_TYPE_RESERVED_9"/>
      <entry value="10" name="AIS_TYPE_RESERVED_10"/>
      <entry value="11" name="AIS_TYPE_RESERVED_11"/>
      <entry value="12" name="AIS_TYPE_RESERVED_12"/>
      <entry value="13" name="AIS_TYPE_RESERVED_13"/>
      <entry value="14" name="AIS_TYPE_RESERVED_14"/>
      <entry value="15" name="AIS_TYPE_RESERVED_15"/>
      <entry value="16" name="AIS_TYPE_RESERVED_16"/>
      <entry value="17" name="AIS_TYPE_RESERVED_17"/>
      <entry value="18" name="AIS_TYPE_RESERVED_18"/>
      <entry value="19" name="AIS_TYPE_RESERVED_19"/>
      <entry value="20" name="AIS_TYPE_WIG">
        <description>Wing In Ground effect.</description>
      </entry>
      <entry value="21" name="AIS_TYPE_WIG_HAZARDOUS_A"/>
      <entry value="22" name="AIS_TYPE_WIG_HAZARDOUS_B"/>
      <entry value="23" name="AIS_TYPE_WIG_HAZARDOUS_C"/>
      <entry value="24" name="AIS_TYPE_WIG_HAZARDOUS_D"/>
      <entry value="25" name="AIS_TYPE_WIG_RESERVED_1"/>
      <entry value="26" name="AIS_TYPE_WIG_RESERVED_2"/>
      <entry value="27" name="AIS_TYPE_WIG_RESERVED_3"/>
      <entry value="28" name="AIS_TYPE_WIG_RESERVED_4"/>
      <entry value="29" name="AIS_TYPE_WIG_RESERVED_5"/>
      <entry value="30" name="AIS_TYPE_FISHING"/>
      <entry value="31" name="AIS_TYPE_TOWING"/>
      <entry value="32" name="AIS_TYPE_TOWING_LARGE">
        <description>Towing: length exceeds 200m or breadth exceeds 25m.</description>
      </entry>
      <entry value="33" name="AIS_TYPE_DREDGING">
        <description>Dredging or other underwater ops.</description>
      </entry>
      <entry value="34" name="AIS_TYPE_DIVING"/>
      <entry value="35" name="AIS_TYPE_MILITARY"/>
      <entry value="36" name="AIS_TYPE_SAILING"/>
      <entry value="37" name="AIS_TYPE_PLEASURE"/>
      <entry value="38" name="AIS_TYPE_RESERVED_20"/>
      <entry value="39" name="AIS_TYPE_RESERVED_21"/>
      <entry value="40" name="AIS_TYPE_HSC">
        <description>High Speed Craft.</description>
      </entry>
      <entry value="41" name="AIS_TYPE_HSC_HAZARDOUS_A"/>
      <entry value="42" name="AIS_TYPE_HSC_HAZARDOUS_B"/>
      <entry value="43" name="AIS_TYPE_HSC_HAZARDOUS_C"/>
      <entry value="44" name="AIS_TYPE_HSC_HAZARDOUS_D"/>
      <entry value="45" name="AIS_TYPE_HSC_RESERVED_1"/>
      <entry value="46" name="AIS_TYPE_HSC_RESERVED_2"/>
      <entry value="47" name="AIS_TYPE_HSC_RESERVED_3"/>
      <entry value="48" name="AIS_TYPE_HSC_RESERVED_4"/>
      <entry value="49" name="AIS_TYPE_HSC_UNKNOWN"/>
      <entry value="50" name="AIS_TYPE_PILOT"/>
      <entry value="51" name="AIS_TYPE_SAR">
        <description>Search And Rescue vessel.</description>
      </entry>
      <entry value="52" name="AIS_TYPE_TUG"/>
      <entry value="53" name="AIS_TYPE_PORT_TENDER"/>
      <entry value="54" name="AIS_TYPE_ANTI_POLLUTION">
        <description>Anti-pollution equipment.</description>
      </entry>
      <entry value="55" name="AIS_TYPE_LAW_ENFORCEMENT"/>
      <entry value="56" name="AIS_TYPE_SPARE_LOCAL_1"/>
      <entry value="57" name="AIS_TYPE_SPARE_LOCAL_2"/>
      <entry value="58" name="AIS_TYPE_MEDICAL_TRANSPORT"/>
      <entry value="59" name="AIS_TYPE_NONECOMBATANT">
        <description>Noncombatant ship according to RR Resolution No. 18.</description>
      </entry>
      <entry value="60" name="AIS_TYPE_PASSENGER"/>
      <entry value="61" name="AIS_TYPE_PASSENGER_HAZARDOUS_A"/>
      <entry value="62" name="AIS_TYPE_PASSENGER_HAZARDOUS_B"/>
      <entry value="63" name="AIS_TYPE_PASSENGER_HAZARDOUS_C"/>
      <entry value="64" name="AIS_TYPE_PASSENGER_HAZARDOUS_D"/>
      <entry value="65" name="AIS_TYPE_PASSENGER_RESERVED_1"/>
      <entry value="66" name="AIS_TYPE_PASSENGER_RESERVED_2"/>
      <entry value="67" name="AIS_TYPE_PASSENGER_RESERVED_3"/>
      <entry value="68" name="AIS_TYPE_PASSENGER_RESERVED_4"/>
      <entry value="69" name="AIS_TYPE_PASSENGER_UNKNOWN"/>
      <entry value="70" name="AIS_TYPE_CARGO"/>
      <entry value="71" name="AIS_TYPE_CARGO_HAZARDOUS_A"/>
      <entry value="72" name="AIS_TYPE_CARGO_HAZARDOUS_B"/>
      <entry value="73" name="AIS_TYPE_CARGO_HAZARDOUS_C"/>
      <entry value="74" name="AIS_TYPE_CARGO_HAZARDOUS_D"/>
      <entry value="75" name="AIS_TYPE_CARGO_RESERVED_1"/>
      <entry value="76" name="AIS_TYPE_CARGO_RESERVED_2"/>
      <entry value="77" name="AIS_TYPE_CARGO_RESERVED_3"/>
      <entry value="78" name="AIS_TYPE_CARGO_RESERVED_4"/>
      <entry value="79" name="AIS_TYPE_CARGO_UNKNOWN"/>
      <entry value="80" name="AIS_TYPE_TANKER"/>
      <entry value="81" name="AIS_TYPE_TANKER_HAZARDOUS_A"/>
      <entry value="82" name="AIS_TYPE_TANKER_HAZARDOUS_B"/>
      <entry value="83" name="AIS_TYPE_TANKER_HAZARDOUS_C"/>
      <entry value="84" name="AIS_TYPE_TANKER_HAZARDOUS_D"/>
      <entry value="85" name="AIS_TYPE_TANKER_RESERVED_1"/>
      <entry value="86" name="AIS_TYPE_TANKER_RESERVED_2"/>
      <entry value="87" name="AIS_TYPE_TANKER_RESERVED_3"/>
      <entry value="88" name="AIS_TYPE_TANKER_RESERVED_4"/>
      <entry value="89" name="AIS_TYPE_TANKER_UNKNOWN"/>
      <entry value="90" name="AIS_TYPE_OTHER"/>
      <entry value="91" name="AIS_TYPE_OTHER_HAZARDOUS_A"/>
      <entry value="92" name="AIS_TYPE_OTHER_HAZARDOUS_B"/>
      <entry value="93" name="AIS_TYPE_OTHER_HAZARDOUS_C"/>
      <entry value="94" name="AIS_TYPE_OTHER_HAZARDOUS_D"/>
      <entry value="95" name="AIS_TYPE_OTHER_RESERVED_1"/>
      <entry value="96" name="AIS_TYPE_OTHER_RESERVED_2"/>
      <entry value="97" name="AIS_TYPE_OTHER_RESERVED_3"/>
      <entry value="98" name="AIS_TYPE_OTHER_RESERVED_4"/>
      <entry value="99" name="AIS_TYPE_OTHER_UNKNOWN"/>
    </enum>
    <enum name="AIS_NAV_STATUS">
      <description>Navigational status of AIS vessel, enum duplicated from AIS standard, https://gpsd.gitlab.io/gpsd/AIVDM.html</description>
      <entry value="0" name="UNDER_WAY">
        <description>Under way using engine.</description>
      </entry>
      <entry value="1" name="AIS_NAV_ANCHORED"/>
      <entry value="2" name="AIS_NAV_UN_COMMANDED"/>
      <entry value="3" name="AIS_NAV_RESTRICTED_MANOEUVERABILITY"/>
      <entry value="4" name="AIS_NAV_DRAUGHT_CONSTRAINED"/>
      <entry value="5" name="AIS_NAV_MOORED"/>
      <entry value="6" name="AIS_NAV_AGROUND"/>
      <entry value="7" name="AIS_NAV_FISHING"/>
      <entry value="8" name="AIS_NAV_SAILING"/>
      <entry value="9" name="AIS_NAV_RESERVED_HSC"/>
      <entry value="10" name="AIS_NAV_RESERVED_WIG"/>
      <entry value="11" name="AIS_NAV_RESERVED_1"/>
      <entry value="12" name="AIS_NAV_RESERVED_2"/>
      <entry value="13" name="AIS_NAV_RESERVED_3"/>
      <entry value="14" name="AIS_NAV_AIS_SART">
        <description>Search And Rescue Transponder.</description>
      </entry>
      <entry value="15" name="AIS_NAV_UNKNOWN">
        <description>Not available (default).</description>
      </entry>
    </enum>
    <enum name="AIS_FLAGS" bitmask="true">
      <description>These flags are used in the AIS_VESSEL.fields bitmask to indicate validity of data in the other message fields. When set, the data is valid.</description>
      <entry value="1" name="AIS_FLAGS_POSITION_ACCURACY">
        <description>1 = Position accuracy less than 10m, 0 = position accuracy greater than 10m.</description>
      </entry>
      <entry value="2" name="AIS_FLAGS_VALID_COG"/>
      <entry value="4" name="AIS_FLAGS_VALID_VELOCITY"/>
      <entry value="8" name="AIS_FLAGS_HIGH_VELOCITY">
        <description>1 = Velocity over 52.5765m/s (102.2 knots)</description>
      </entry>
      <entry value="16" name="AIS_FLAGS_VALID_TURN_RATE"/>
      <entry value="32" name="AIS_FLAGS_TURN_RATE_SIGN_ONLY">
        <description>Only the sign of the returned turn rate value is valid, either greater than 5deg/30s or less than -5deg/30s</description>
      </entry>
      <entry value="64" name="AIS_FLAGS_VALID_DIMENSIONS"/>
      <entry value="128" name="AIS_FLAGS_LARGE_BOW_DIMENSION">
        <description>Distance to bow is larger than 511m</description>
      </entry>
      <entry value="256" name="AIS_FLAGS_LARGE_STERN_DIMENSION">
        <description>Distance to stern is larger than 511m</description>
      </entry>
      <entry value="512" name="AIS_FLAGS_LARGE_PORT_DIMENSION">
        <description>Distance to port side is larger than 63m</description>
      </entry>
      <entry value="1024" name="AIS_FLAGS_LARGE_STARBOARD_DIMENSION">
        <description>Distance to starboard side is larger than 63m</description>
      </entry>
      <entry value="2048" name="AIS_FLAGS_VALID_CALLSIGN"/>
      <entry value="4096" name="AIS_FLAGS_VALID_NAME"/>
    </enum>
    <enum name="FAILURE_UNIT">
      <!-- This enum is work-in-progress and it can therefore change. It should NOT be used in stable production environments. -->
      <description>List of possible units where failures can be injected.</description>
      <entry value="0" name="FAILURE_UNIT_SENSOR_GYRO"/>
      <entry value="1" name="FAILURE_UNIT_SENSOR_ACCEL"/>
      <entry value="2" name="FAILURE_UNIT_SENSOR_MAG"/>
      <entry value="3" name="FAILURE_UNIT_SENSOR_BARO"/>
      <entry value="4" name="FAILURE_UNIT_SENSOR_GPS"/>
      <entry value="5" name="FAILURE_UNIT_SENSOR_OPTICAL_FLOW"/>
      <entry value="6" name="FAILURE_UNIT_SENSOR_VIO"/>
      <entry value="7" name="FAILURE_UNIT_SENSOR_DISTANCE_SENSOR"/>
      <entry value="8" name="FAILURE_UNIT_SENSOR_AIRSPEED"/>
      <entry value="100" name="FAILURE_UNIT_SYSTEM_BATTERY"/>
      <entry value="101" name="FAILURE_UNIT_SYSTEM_MOTOR"/>
      <entry value="102" name="FAILURE_UNIT_SYSTEM_SERVO"/>
      <entry value="103" name="FAILURE_UNIT_SYSTEM_AVOIDANCE"/>
      <entry value="104" name="FAILURE_UNIT_SYSTEM_RC_SIGNAL"/>
      <entry value="105" name="FAILURE_UNIT_SYSTEM_MAVLINK_SIGNAL"/>
    </enum>
    <enum name="FAILURE_TYPE">
      <!-- This enum is work-in-progress and it can therefore change. It should NOT be used in stable production environments. -->
      <description>List of possible failure type to inject.</description>
      <entry value="0" name="FAILURE_TYPE_OK">
        <description>No failure injected, used to reset a previous failure.</description>
      </entry>
      <entry value="1" name="FAILURE_TYPE_OFF">
        <description>Sets unit off, so completely non-responsive.</description>
      </entry>
      <entry value="2" name="FAILURE_TYPE_STUCK">
        <description>Unit is stuck e.g. keeps reporting the same value.</description>
      </entry>
      <entry value="3" name="FAILURE_TYPE_GARBAGE">
        <description>Unit is reporting complete garbage.</description>
      </entry>
      <entry value="4" name="FAILURE_TYPE_WRONG">
        <description>Unit is consistently wrong.</description>
      </entry>
      <entry value="5" name="FAILURE_TYPE_SLOW">
        <description>Unit is slow, so e.g. reporting at slower than expected rate.</description>
      </entry>
      <entry value="6" name="FAILURE_TYPE_DELAYED">
        <description>Data of unit is delayed in time.</description>
      </entry>
      <entry value="7" name="FAILURE_TYPE_INTERMITTENT">
        <description>Unit is sometimes working, sometimes not.</description>
      </entry>
    </enum>
    <enum name="NAV_VTOL_LAND_OPTIONS">
      <entry value="0" name="NAV_VTOL_LAND_OPTIONS_DEFAULT">
        <description>Default autopilot landing behaviour.</description>
      </entry>
      <entry value="1" name="NAV_VTOL_LAND_OPTIONS_FW_DESCENT">
        <description>Descend in fixed wing mode, transitioning to multicopter mode for vertical landing when close to the ground.
          The fixed wing descent pattern is at the discretion of the vehicle (e.g. transition altitude, loiter direction, radius, and speed, etc.).
        </description>
      </entry>
      <entry value="2" name="NAV_VTOL_LAND_OPTIONS_HOVER_DESCENT">
        <description>Land in multicopter mode on reaching the landing coordinates (the whole landing is by "hover descent").</description>
      </entry>
    </enum>
    <enum name="MAV_WINCH_STATUS_FLAG" bitmask="true">
      <description>Winch status flags used in WINCH_STATUS</description>
      <entry value="1" name="MAV_WINCH_STATUS_HEALTHY">
        <description>Winch is healthy</description>
      </entry>
      <entry value="2" name="MAV_WINCH_STATUS_FULLY_RETRACTED">
        <description>Winch line is fully retracted</description>
      </entry>
      <entry value="4" name="MAV_WINCH_STATUS_MOVING">
        <description>Winch motor is moving</description>
      </entry>
      <entry value="8" name="MAV_WINCH_STATUS_CLUTCH_ENGAGED">
        <description>Winch clutch is engaged allowing motor to move freely.</description>
      </entry>
      <entry value="16" name="MAV_WINCH_STATUS_LOCKED">
        <description>Winch is locked by locking mechanism.</description>
      </entry>
      <entry value="32" name="MAV_WINCH_STATUS_DROPPING">
        <description>Winch is gravity dropping payload.</description>
      </entry>
      <entry value="64" name="MAV_WINCH_STATUS_ARRESTING">
        <description>Winch is arresting payload descent.</description>
      </entry>
      <entry value="128" name="MAV_WINCH_STATUS_GROUND_SENSE">
        <description>Winch is using torque measurements to sense the ground.</description>
      </entry>
      <entry value="256" name="MAV_WINCH_STATUS_RETRACTING">
        <description>Winch is returning to the fully retracted position.</description>
      </entry>
      <entry value="512" name="MAV_WINCH_STATUS_REDELIVER">
        <description>Winch is redelivering the payload. This is a failover state if the line tension goes above a threshold during RETRACTING.</description>
      </entry>
      <entry value="1024" name="MAV_WINCH_STATUS_ABANDON_LINE">
        <description>Winch is abandoning the line and possibly payload. Winch unspools the entire calculated line length. This is a failover state from REDELIVER if the number of attempts exceeds a threshold.</description>
      </entry>
      <entry value="2048" name="MAV_WINCH_STATUS_LOCKING">
        <description>Winch is engaging the locking mechanism.</description>
      </entry>
      <entry value="4096" name="MAV_WINCH_STATUS_LOAD_LINE">
        <description>Winch is spooling on line.</description>
      </entry>
      <entry value="8192" name="MAV_WINCH_STATUS_LOAD_PAYLOAD">
        <description>Winch is loading a payload.</description>
      </entry>
    </enum>
    <enum name="MAG_CAL_STATUS">
      <entry value="0" name="MAG_CAL_NOT_STARTED"/>
      <entry value="1" name="MAG_CAL_WAITING_TO_START"/>
      <entry value="2" name="MAG_CAL_RUNNING_STEP_ONE"/>
      <entry value="3" name="MAG_CAL_RUNNING_STEP_TWO"/>
      <entry value="4" name="MAG_CAL_SUCCESS"/>
      <entry value="5" name="MAG_CAL_FAILED"/>
      <entry value="6" name="MAG_CAL_BAD_ORIENTATION"/>
      <entry value="7" name="MAG_CAL_BAD_RADIUS"/>
    </enum>
    <enum name="MAV_EVENT_ERROR_REASON">
      <description>Reason for an event error response.</description>
      <entry value="0" name="MAV_EVENT_ERROR_REASON_UNAVAILABLE">
        <description>The requested event is not available (anymore).</description>
      </entry>
    </enum>
    <enum name="MAV_EVENT_CURRENT_SEQUENCE_FLAGS">
      <description>Flags for CURRENT_EVENT_SEQUENCE.</description>
      <entry value="1" name="MAV_EVENT_CURRENT_SEQUENCE_FLAGS_RESET">
        <description>A sequence reset has happened (e.g. vehicle reboot).</description>
      </entry>
    </enum>
    <enum name="HIL_SENSOR_UPDATED_FLAGS" bitmask="true">
      <description>Flags in the HIL_SENSOR message indicate which fields have updated since the last message</description>
      <entry value="0" name="HIL_SENSOR_UPDATED_NONE">
        <description>None of the fields in HIL_SENSOR have been updated</description>
      </entry>
      <entry value="1" name="HIL_SENSOR_UPDATED_XACC">
        <description>The value in the xacc field has been updated</description>
      </entry>
      <entry value="2" name="HIL_SENSOR_UPDATED_YACC">
        <description>The value in the yacc field has been updated</description>
      </entry>
      <entry value="4" name="HIL_SENSOR_UPDATED_ZACC">
        <description>The value in the zacc field has been updated</description>
      </entry>
      <entry value="8" name="HIL_SENSOR_UPDATED_XGYRO">
        <description>The value in the xgyro field has been updated</description>
      </entry>
      <entry value="16" name="HIL_SENSOR_UPDATED_YGYRO">
        <description>The value in the ygyro field has been updated</description>
      </entry>
      <entry value="32" name="HIL_SENSOR_UPDATED_ZGYRO">
        <description>The value in the zgyro field has been updated</description>
      </entry>
      <entry value="64" name="HIL_SENSOR_UPDATED_XMAG">
        <description>The value in the xmag field has been updated</description>
      </entry>
      <entry value="128" name="HIL_SENSOR_UPDATED_YMAG">
        <description>The value in the ymag field has been updated</description>
      </entry>
      <entry value="256" name="HIL_SENSOR_UPDATED_ZMAG">
        <description>The value in the zmag field has been updated</description>
      </entry>
      <entry value="512" name="HIL_SENSOR_UPDATED_ABS_PRESSURE">
        <description>The value in the abs_pressure field has been updated</description>
      </entry>
      <entry value="1024" name="HIL_SENSOR_UPDATED_DIFF_PRESSURE">
        <description>The value in the diff_pressure field has been updated</description>
      </entry>
      <entry value="2048" name="HIL_SENSOR_UPDATED_PRESSURE_ALT">
        <description>The value in the pressure_alt field has been updated</description>
      </entry>
      <entry value="4096" name="HIL_SENSOR_UPDATED_TEMPERATURE">
        <description>The value in the temperature field has been updated</description>
      </entry>
      <entry value="2147483648" name="HIL_SENSOR_UPDATED_RESET">
        <description>Full reset of attitude/position/velocities/etc was performed in sim (Bit 31).</description>
      </entry>
    </enum>
    <enum name="HIGHRES_IMU_UPDATED_FLAGS" bitmask="true">
      <description>Flags in the HIGHRES_IMU message indicate which fields have updated since the last message</description>
      <entry value="0" name="HIGHRES_IMU_UPDATED_NONE">
        <description>None of the fields in HIGHRES_IMU have been updated</description>
      </entry>
      <entry value="1" name="HIGHRES_IMU_UPDATED_XACC">
        <description>The value in the xacc field has been updated</description>
      </entry>
      <entry value="2" name="HIGHRES_IMU_UPDATED_YACC">
        <description>The value in the yacc field has been updated</description>
      </entry>
      <entry value="4" name="HIGHRES_IMU_UPDATED_ZACC">
        <description>The value in the zacc field has been updated since</description>
      </entry>
      <entry value="8" name="HIGHRES_IMU_UPDATED_XGYRO">
        <description>The value in the xgyro field has been updated</description>
      </entry>
      <entry value="16" name="HIGHRES_IMU_UPDATED_YGYRO">
        <description>The value in the ygyro field has been updated</description>
      </entry>
      <entry value="32" name="HIGHRES_IMU_UPDATED_ZGYRO">
        <description>The value in the zgyro field has been updated</description>
      </entry>
      <entry value="64" name="HIGHRES_IMU_UPDATED_XMAG">
        <description>The value in the xmag field has been updated</description>
      </entry>
      <entry value="128" name="HIGHRES_IMU_UPDATED_YMAG">
        <description>The value in the ymag field has been updated</description>
      </entry>
      <entry value="256" name="HIGHRES_IMU_UPDATED_ZMAG">
        <description>The value in the zmag field has been updated</description>
      </entry>
      <entry value="512" name="HIGHRES_IMU_UPDATED_ABS_PRESSURE">
        <description>The value in the abs_pressure field has been updated</description>
      </entry>
      <entry value="1024" name="HIGHRES_IMU_UPDATED_DIFF_PRESSURE">
        <description>The value in the diff_pressure field has been updated</description>
      </entry>
      <entry value="2048" name="HIGHRES_IMU_UPDATED_PRESSURE_ALT">
        <description>The value in the pressure_alt field has been updated</description>
      </entry>
      <entry value="4096" name="HIGHRES_IMU_UPDATED_TEMPERATURE">
        <description>The value in the temperature field has been updated</description>
      </entry>
      <entry value="65535" name="HIGHRES_IMU_UPDATED_ALL">
        <description>All fields in HIGHRES_IMU have been updated.</description>
      </entry>
    </enum>
    <enum name="CAN_FILTER_OP">
      <entry value="0" name="CAN_FILTER_REPLACE"/>
      <entry value="1" name="CAN_FILTER_ADD"/>
      <entry value="2" name="CAN_FILTER_REMOVE"/>
    </enum>
    <enum name="MAV_FTP_ERR">
      <description>MAV FTP error codes (https://mavlink.io/en/services/ftp.html)</description>
      <entry value="0" name="MAV_FTP_ERR_NONE">
        <description>None: No error</description>
      </entry>
      <entry value="1" name="MAV_FTP_ERR_FAIL">
        <description>Fail: Unknown failure</description>
      </entry>
      <entry value="2" name="MAV_FTP_ERR_FAILERRNO">
        <description>FailErrno: Command failed, Err number sent back in PayloadHeader.data[1].
		This is a file-system error number understood by the server operating system.</description>
      </entry>
      <entry value="3" name="MAV_FTP_ERR_INVALIDDATASIZE">
        <description>InvalidDataSize: Payload size is invalid</description>
      </entry>
      <entry value="4" name="MAV_FTP_ERR_INVALIDSESSION">
        <description>InvalidSession: Session is not currently open</description>
      </entry>
      <entry value="5" name="MAV_FTP_ERR_NOSESSIONSAVAILABLE">
        <description>NoSessionsAvailable: All available sessions are already in use</description>
      </entry>
      <entry value="6" name="MAV_FTP_ERR_EOF">
        <description>EOF: Offset past end of file for ListDirectory and ReadFile commands</description>
      </entry>
      <entry value="7" name="MAV_FTP_ERR_UNKNOWNCOMMAND">
        <description>UnknownCommand: Unknown command / opcode</description>
      </entry>
      <entry value="8" name="MAV_FTP_ERR_FILEEXISTS">
        <description>FileExists: File/directory already exists</description>
      </entry>
      <entry value="9" name="MAV_FTP_ERR_FILEPROTECTED">
        <description>FileProtected: File/directory is write protected</description>
      </entry>
      <entry value="10" name="MAV_FTP_ERR_FILENOTFOUND">
        <description>FileNotFound: File/directory not found</description>
      </entry>
    </enum>
    <enum name="MAV_FTP_OPCODE">
      <description>MAV FTP opcodes: https://mavlink.io/en/services/ftp.html</description>
      <entry value="0" name="MAV_FTP_OPCODE_NONE">
        <description>None. Ignored, always ACKed</description>
      </entry>
      <entry value="1" name="MAV_FTP_OPCODE_TERMINATESESSION">
        <description>TerminateSession: Terminates open Read session</description>
      </entry>
      <entry value="2" name="MAV_FTP_OPCODE_RESETSESSION">
        <description>ResetSessions: Terminates all open read sessions</description>
      </entry>
      <entry value="3" name="MAV_FTP_OPCODE_LISTDIRECTORY">
        <description>ListDirectory. List files and directories in path from offset</description>
      </entry>
      <entry value="4" name="MAV_FTP_OPCODE_OPENFILERO">
        <description>OpenFileRO: Opens file at path for reading, returns session</description>
      </entry>
      <entry value="5" name="MAV_FTP_OPCODE_READFILE">
        <description>ReadFile: Reads size bytes from offset in session</description>
      </entry>
      <entry value="6" name="MAV_FTP_OPCODE_CREATEFILE">
        <description>CreateFile: Creates file at path for writing, returns session</description>
      </entry>
      <entry value="7" name="MAV_FTP_OPCODE_WRITEFILE">
        <description>WriteFile: Writes size bytes to offset in session</description>
      </entry>
      <entry value="8" name="MAV_FTP_OPCODE_REMOVEFILE">
        <description>RemoveFile: Remove file at path</description>
      </entry>
      <entry value="9" name="MAV_FTP_OPCODE_CREATEDIRECTORY">
        <description>CreateDirectory: Creates directory at path</description>
      </entry>
      <entry value="10" name="MAV_FTP_OPCODE_REMOVEDIRECTORY">
        <description>RemoveDirectory: Removes directory at path. The directory must be empty.</description>
      </entry>
      <entry value="11" name="MAV_FTP_OPCODE_OPENFILEWO">
        <description>OpenFileWO: Opens file at path for writing, returns session</description>
      </entry>
      <entry value="12" name="MAV_FTP_OPCODE_TRUNCATEFILE">
        <description>TruncateFile: Truncate file at path to offset length</description>
      </entry>
      <entry value="13" name="MAV_FTP_OPCODE_RENAME">
        <description>Rename: Rename path1 to path2</description>
      </entry>
      <entry value="14" name="MAV_FTP_OPCODE_CALCFILECRC">
        <description>CalcFileCRC32: Calculate CRC32 for file at path</description>
      </entry>
      <entry value="15" name="MAV_FTP_OPCODE_BURSTREADFILE">
        <description>BurstReadFile: Burst download session file</description>
      </entry>
      <entry value="128" name="MAV_FTP_OPCODE_ACK">
        <description>ACK: ACK response</description>
      </entry>
      <entry value="129" name="MAV_FTP_OPCODE_NAK">
        <description>NAK: NAK response</description>
      </entry>
    </enum>
    <enum name="MISSION_STATE">
      <description>
        States of the mission state machine.
        Note that these states are independent of whether the mission is in a mode that can execute mission items or not (is suspended).
        They may not all be relevant on all vehicles.
      </description>
      <entry value="0" name="MISSION_STATE_UNKNOWN">
        <description>The mission status reporting is not supported.</description>
      </entry>
      <entry value="1" name="MISSION_STATE_NO_MISSION">
        <description>No mission on the vehicle.</description>
      </entry>
      <entry value="2" name="MISSION_STATE_NOT_STARTED">
        <description>Mission has not started. This is the case after a mission has uploaded but not yet started executing.</description>
      </entry>
      <entry value="3" name="MISSION_STATE_ACTIVE">
        <description>Mission is active, and will execute mission items when in auto mode.</description>
      </entry>
      <entry value="4" name="MISSION_STATE_PAUSED">
        <description>Mission is paused when in auto mode.</description>
      </entry>
      <entry value="5" name="MISSION_STATE_COMPLETE">
        <description>Mission has executed all mission items.</description>
      </entry>
    </enum>
  </enums>
  <messages>
    <message id="1" name="SYS_STATUS">
      <description>The general system state. If the system is following the MAVLink standard, the system state is mainly defined by three orthogonal states/modes: The system mode, which is either LOCKED (motors shut down and locked), MANUAL (system under RC control), GUIDED (system with autonomous position control, position setpoint controlled manually) or AUTO (system guided by path/waypoint planner). The NAV_MODE defined the current flight state: LIFTOFF (often an open-loop maneuver), LANDING, WAYPOINTS or VECTOR. This represents the internal navigation state machine. The system status shows whether the system is currently active or not and if an emergency occurred. During the CRITICAL and EMERGENCY states the MAV is still considered to be active, but should start emergency procedures autonomously. After a failure occurred it should first move from active to critical to allow manual intervention and then move to emergency after a certain timeout.</description>
      <field type="uint32_t" name="onboard_control_sensors_present" enum="MAV_SYS_STATUS_SENSOR" display="bitmask" print_format="0x%04x">Bitmap showing which onboard controllers and sensors are present. Value of 0: not present. Value of 1: present.</field>
      <field type="uint32_t" name="onboard_control_sensors_enabled" enum="MAV_SYS_STATUS_SENSOR" display="bitmask" print_format="0x%04x">Bitmap showing which onboard controllers and sensors are enabled:  Value of 0: not enabled. Value of 1: enabled.</field>
      <field type="uint32_t" name="onboard_control_sensors_health" enum="MAV_SYS_STATUS_SENSOR" display="bitmask" print_format="0x%04x">Bitmap showing which onboard controllers and sensors have an error (or are operational). Value of 0: error. Value of 1: healthy.</field>
      <field type="uint16_t" name="load" units="d%">Maximum usage in percent of the mainloop time. Values: [0-1000] - should always be below 1000</field>
      <field type="uint16_t" name="voltage_battery" units="mV" invalid="UINT16_MAX">Battery voltage, UINT16_MAX: Voltage not sent by autopilot</field>
      <field type="int16_t" name="current_battery" units="cA" invalid="-1">Battery current, -1: Current not sent by autopilot</field>
      <field type="int8_t" name="battery_remaining" units="%" invalid="-1">Battery energy remaining, -1: Battery remaining energy not sent by autopilot</field>
      <field type="uint16_t" name="drop_rate_comm" units="c%">Communication drop rate, (UART, I2C, SPI, CAN), dropped packets on all links (packets that were corrupted on reception on the MAV)</field>
      <field type="uint16_t" name="errors_comm">Communication errors (UART, I2C, SPI, CAN), dropped packets on all links (packets that were corrupted on reception on the MAV)</field>
      <field type="uint16_t" name="errors_count1">Autopilot-specific errors</field>
      <field type="uint16_t" name="errors_count2">Autopilot-specific errors</field>
      <field type="uint16_t" name="errors_count3">Autopilot-specific errors</field>
      <field type="uint16_t" name="errors_count4">Autopilot-specific errors</field>
      <extensions/>
      <field type="uint32_t" name="onboard_control_sensors_present_extended" enum="MAV_SYS_STATUS_SENSOR_EXTENDED" display="bitmask" print_format="0x%04x">Bitmap showing which onboard controllers and sensors are present. Value of 0: not present. Value of 1: present.</field>
      <field type="uint32_t" name="onboard_control_sensors_enabled_extended" enum="MAV_SYS_STATUS_SENSOR_EXTENDED" display="bitmask" print_format="0x%04x">Bitmap showing which onboard controllers and sensors are enabled:  Value of 0: not enabled. Value of 1: enabled.</field>
      <field type="uint32_t" name="onboard_control_sensors_health_extended" enum="MAV_SYS_STATUS_SENSOR_EXTENDED" display="bitmask" print_format="0x%04x">Bitmap showing which onboard controllers and sensors have an error (or are operational). Value of 0: error. Value of 1: healthy.</field>
    </message>
    <message id="2" name="SYSTEM_TIME">
      <description>The system time is the time of the master clock, typically the computer clock of the main onboard computer.</description>
      <field type="uint64_t" name="time_unix_usec" units="us">Timestamp (UNIX epoch time).</field>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
    </message>
    <message id="4" name="PING">
      <deprecated since="2011-08" replaced_by="SYSTEM_TIME">to be removed / merged with SYSTEM_TIME</deprecated>
      <description>A ping message either requesting or responding to a ping. This allows to measure the system latencies, including serial port, radio modem and UDP connections. The ping microservice is documented at https://mavlink.io/en/services/ping.html</description>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="uint32_t" name="seq">PING sequence</field>
      <field type="uint8_t" name="target_system">0: request ping from all receiving systems. If greater than 0: message is a ping response and number is the system id of the requesting system</field>
      <field type="uint8_t" name="target_component">0: request ping from all receiving components. If greater than 0: message is a ping response and number is the component id of the requesting component.</field>
    </message>
    <message id="5" name="CHANGE_OPERATOR_CONTROL">
      <description>Request to control this MAV</description>
      <field type="uint8_t" name="target_system">System the GCS requests control for</field>
      <field type="uint8_t" name="control_request">0: request control of this MAV, 1: Release control of this MAV</field>
      <field type="uint8_t" name="version" units="rad">0: key as plaintext, 1-255: future, different hashing/encryption variants. The GCS should in general use the safest mode possible initially and then gradually move down the encryption level if it gets a NACK message indicating an encryption mismatch.</field>
      <field type="char[25]" name="passkey">Password / Key, depending on version plaintext or encrypted. 25 or less characters, NULL terminated. The characters may involve A-Z, a-z, 0-9, and "!?,.-"</field>
    </message>
    <message id="6" name="CHANGE_OPERATOR_CONTROL_ACK">
      <description>Accept / deny control of this MAV</description>
      <field type="uint8_t" name="gcs_system_id">ID of the GCS this message </field>
      <field type="uint8_t" name="control_request">0: request control of this MAV, 1: Release control of this MAV</field>
      <field type="uint8_t" name="ack">0: ACK, 1: NACK: Wrong passkey, 2: NACK: Unsupported passkey encryption method, 3: NACK: Already under control</field>
    </message>
    <message id="7" name="AUTH_KEY">
      <description>Emit an encrypted signature / key identifying this system. PLEASE NOTE: This protocol has been kept simple, so transmitting the key requires an encrypted channel for true safety.</description>
      <field type="char[32]" name="key">key</field>
    </message>
    <message id="8" name="LINK_NODE_STATUS">
      <wip/>
      <!-- This message is work-in-progress and it can therefore change. It should NOT be used in stable production environments. -->
      <description>Status generated in each node in the communication chain and injected into MAVLink stream.</description>
      <field type="uint64_t" name="timestamp" units="ms">Timestamp (time since system boot).</field>
      <field type="uint8_t" name="tx_buf" units="%">Remaining free transmit buffer space</field>
      <field type="uint8_t" name="rx_buf" units="%">Remaining free receive buffer space</field>
      <field type="uint32_t" name="tx_rate" units="bytes/s">Transmit rate</field>
      <field type="uint32_t" name="rx_rate" units="bytes/s">Receive rate</field>
      <field type="uint16_t" name="rx_parse_err" units="bytes">Number of bytes that could not be parsed correctly.</field>
      <field type="uint16_t" name="tx_overflows" units="bytes">Transmit buffer overflows. This number wraps around as it reaches UINT16_MAX</field>
      <field type="uint16_t" name="rx_overflows" units="bytes">Receive buffer overflows. This number wraps around as it reaches UINT16_MAX</field>
      <field type="uint32_t" name="messages_sent">Messages sent</field>
      <field type="uint32_t" name="messages_received">Messages received (estimated from counting seq)</field>
      <field type="uint32_t" name="messages_lost">Messages lost (estimated from counting seq)</field>
    </message>
    <message id="11" name="SET_MODE">
      <deprecated since="2015-12" replaced_by="MAV_CMD_DO_SET_MODE">Use COMMAND_LONG with MAV_CMD_DO_SET_MODE instead</deprecated>
      <description>Set the system mode, as defined by enum MAV_MODE. There is no target component id as the mode is by definition for the overall aircraft, not only for one component.</description>
      <field type="uint8_t" name="target_system">The system setting the mode</field>
      <field type="uint8_t" name="base_mode" enum="MAV_MODE">The new base mode.</field>
      <field type="uint32_t" name="custom_mode">The new autopilot-specific mode. This field can be ignored by an autopilot.</field>
    </message>
    <!-- IDs 15-17 reserved for PARAM_VALUE_UNION and other param messages -->
    <!-- IDs 19 reserved for PARAM_ACK_TRANSACTION (development.xml) -->
    <message id="20" name="PARAM_REQUEST_READ">
      <description>Request to read the onboard parameter with the param_id string id. Onboard parameters are stored as key[const char*] -&gt; value[float]. This allows to send a parameter to any other component (such as the GCS) without the need of previous knowledge of possible parameter names. Thus the same GCS can store different parameters for different autopilots. See also https://mavlink.io/en/services/parameter.html for a full documentation of QGroundControl and IMU code.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field type="int16_t" name="param_index" invalid="-1">Parameter index. Send -1 to use the param ID field as identifier (else the param id will be ignored)</field>
    </message>
    <message id="21" name="PARAM_REQUEST_LIST">
      <description>Request all parameters of this component. After this request, all parameters are emitted. The parameter microservice is documented at https://mavlink.io/en/services/parameter.html</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
    </message>
    <message id="22" name="PARAM_VALUE">
      <description>Emit the value of a onboard parameter. The inclusion of param_count and param_index in the message allows the recipient to keep track of received parameters and allows him to re-request missing parameters after a loss or timeout. The parameter microservice is documented at https://mavlink.io/en/services/parameter.html</description>
      <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field type="float" name="param_value">Onboard parameter value</field>
      <field type="uint8_t" name="param_type" enum="MAV_PARAM_TYPE">Onboard parameter type.</field>
      <field type="uint16_t" name="param_count">Total number of onboard parameters</field>
      <field type="uint16_t" name="param_index">Index of this onboard parameter</field>
    </message>
    <message id="23" name="PARAM_SET">
      <description>Set a parameter value (write new value to permanent storage).
        The receiving component should acknowledge the new parameter value by broadcasting a PARAM_VALUE message (broadcasting ensures that multiple GCS all have an up-to-date list of all parameters). If the sending GCS did not receive a PARAM_VALUE within its timeout time, it should re-send the PARAM_SET message. The parameter microservice is documented at https://mavlink.io/en/services/parameter.html.
        PARAM_SET may also be called within the context of a transaction (started with MAV_CMD_PARAM_TRANSACTION). Within a transaction the receiving component should respond with PARAM_ACK_TRANSACTION to the setter component (instead of broadcasting PARAM_VALUE), and PARAM_SET should be re-sent if this is ACK not received.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field type="float" name="param_value">Onboard parameter value</field>
      <field type="uint8_t" name="param_type" enum="MAV_PARAM_TYPE">Onboard parameter type.</field>
    </message>
    <message id="24" name="GPS_RAW_INT">
      <description>The global position, as returned by the Global Positioning System (GPS). This is
                NOT the global position estimate of the system, but rather a RAW sensor value. See message GLOBAL_POSITION_INT for the global position estimate.</description>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="uint8_t" name="fix_type" enum="GPS_FIX_TYPE">GPS fix type.</field>
      <field type="int32_t" name="lat" units="degE7">Latitude (WGS84, EGM96 ellipsoid)</field>
      <field type="int32_t" name="lon" units="degE7">Longitude (WGS84, EGM96 ellipsoid)</field>
      <field type="int32_t" name="alt" units="mm">Altitude (MSL). Positive for up. Note that virtually all GPS modules provide the MSL altitude in addition to the WGS84 altitude.</field>
      <field type="uint16_t" name="eph" invalid="UINT16_MAX">GPS HDOP horizontal dilution of position (unitless * 100). If unknown, set to: UINT16_MAX</field>
      <field type="uint16_t" name="epv" invalid="UINT16_MAX">GPS VDOP vertical dilution of position (unitless * 100). If unknown, set to: UINT16_MAX</field>
      <field type="uint16_t" name="vel" units="cm/s" invalid="UINT16_MAX">GPS ground speed. If unknown, set to: UINT16_MAX</field>
      <field type="uint16_t" name="cog" units="cdeg" invalid="UINT16_MAX">Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX</field>
      <field type="uint8_t" name="satellites_visible" invalid="UINT8_MAX">Number of satellites visible. If unknown, set to UINT8_MAX</field>
      <extensions/>
      <field type="int32_t" name="alt_ellipsoid" units="mm">Altitude (above WGS84, EGM96 ellipsoid). Positive for up.</field>
      <field type="uint32_t" name="h_acc" units="mm">Position uncertainty.</field>
      <field type="uint32_t" name="v_acc" units="mm">Altitude uncertainty.</field>
      <field type="uint32_t" name="vel_acc" units="mm">Speed uncertainty.</field>
      <field type="uint32_t" name="hdg_acc" units="degE5">Heading / track uncertainty</field>
      <field type="uint16_t" name="yaw" units="cdeg" invalid="0">Yaw in earth frame from north. Use 0 if this GPS does not provide yaw. Use UINT16_MAX if this GPS is configured to provide yaw and is currently unable to provide it. Use 36000 for north.</field>
    </message>
    <message id="25" name="GPS_STATUS">
      <description>The positioning status, as reported by GPS. This message is intended to display status information about each satellite visible to the receiver. See message GLOBAL_POSITION_INT for the global position estimate. This message can contain information for up to 20 satellites.</description>
      <field type="uint8_t" name="satellites_visible">Number of satellites visible</field>
      <field type="uint8_t[20]" name="satellite_prn">Global satellite ID</field>
      <field type="uint8_t[20]" name="satellite_used">0: Satellite not used, 1: used for localization</field>
      <field type="uint8_t[20]" name="satellite_elevation" units="deg">Elevation (0: right on top of receiver, 90: on the horizon) of satellite</field>
      <field type="uint8_t[20]" name="satellite_azimuth" units="deg">Direction of satellite, 0: 0 deg, 255: 360 deg.</field>
      <field type="uint8_t[20]" name="satellite_snr" units="dB">Signal to noise ratio of satellite</field>
    </message>
    <message id="26" name="SCALED_IMU">
      <description>The RAW IMU readings for the usual 9DOF sensor setup. This message should contain the scaled values to the described units</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="int16_t" name="xacc" units="mG">X acceleration</field>
      <field type="int16_t" name="yacc" units="mG">Y acceleration</field>
      <field type="int16_t" name="zacc" units="mG">Z acceleration</field>
      <field type="int16_t" name="xgyro" units="mrad/s">Angular speed around X axis</field>
      <field type="int16_t" name="ygyro" units="mrad/s">Angular speed around Y axis</field>
      <field type="int16_t" name="zgyro" units="mrad/s">Angular speed around Z axis</field>
      <field type="int16_t" name="xmag" units="mgauss">X Magnetic field</field>
      <field type="int16_t" name="ymag" units="mgauss">Y Magnetic field</field>
      <field type="int16_t" name="zmag" units="mgauss">Z Magnetic field</field>
      <extensions/>
      <field type="int16_t" name="temperature" units="cdegC">Temperature, 0: IMU does not provide temperature values. If the IMU is at 0C it must send 1 (0.01C).</field>
    </message>
    <message id="27" name="RAW_IMU">
      <description>The RAW IMU readings for a 9DOF sensor, which is identified by the id (default IMU1). This message should always contain the true raw values without any scaling to allow data capture and system debugging.</description>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="int16_t" name="xacc">X acceleration (raw)</field>
      <field type="int16_t" name="yacc">Y acceleration (raw)</field>
      <field type="int16_t" name="zacc">Z acceleration (raw)</field>
      <field type="int16_t" name="xgyro">Angular speed around X axis (raw)</field>
      <field type="int16_t" name="ygyro">Angular speed around Y axis (raw)</field>
      <field type="int16_t" name="zgyro">Angular speed around Z axis (raw)</field>
      <field type="int16_t" name="xmag">X Magnetic field (raw)</field>
      <field type="int16_t" name="ymag">Y Magnetic field (raw)</field>
      <field type="int16_t" name="zmag">Z Magnetic field (raw)</field>
      <extensions/>
      <field type="uint8_t" name="id" instance="true">Id. Ids are numbered from 0 and map to IMUs numbered from 1 (e.g. IMU1 will have a message with id=0)</field>
      <field type="int16_t" name="temperature" units="cdegC">Temperature, 0: IMU does not provide temperature values. If the IMU is at 0C it must send 1 (0.01C).</field>
    </message>
    <message id="28" name="RAW_PRESSURE">
      <description>The RAW pressure readings for the typical setup of one absolute pressure and one differential pressure sensor. The sensor values should be the raw, UNSCALED ADC values.</description>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="int16_t" name="press_abs">Absolute pressure (raw)</field>
      <field type="int16_t" name="press_diff1" invalid="0">Differential pressure 1 (raw, 0 if nonexistent)</field>
      <field type="int16_t" name="press_diff2" invalid="0">Differential pressure 2 (raw, 0 if nonexistent)</field>
      <field type="int16_t" name="temperature">Raw Temperature measurement (raw)</field>
    </message>
    <message id="29" name="SCALED_PRESSURE">
      <description>The pressure readings for the typical setup of one absolute and differential pressure sensor. The units are as specified in each field.</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="float" name="press_abs" units="hPa">Absolute pressure</field>
      <field type="float" name="press_diff" units="hPa">Differential pressure 1</field>
      <field type="int16_t" name="temperature" units="cdegC">Absolute pressure temperature</field>
      <extensions/>
      <field type="int16_t" name="temperature_press_diff" units="cdegC" invalid="0">Differential pressure temperature (0, if not available). Report values of 0 (or 1) as 1 cdegC.</field>
    </message>
    <message id="30" name="ATTITUDE">
      <description>The attitude in the aeronautical frame (right-handed, Z-down, Y-right, X-front, ZYX, intrinsic).</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="float" name="roll" units="rad">Roll angle (-pi..+pi)</field>
      <field type="float" name="pitch" units="rad">Pitch angle (-pi..+pi)</field>
      <field type="float" name="yaw" units="rad">Yaw angle (-pi..+pi)</field>
      <field type="float" name="rollspeed" units="rad/s">Roll angular speed</field>
      <field type="float" name="pitchspeed" units="rad/s">Pitch angular speed</field>
      <field type="float" name="yawspeed" units="rad/s">Yaw angular speed</field>
    </message>
    <message id="31" name="ATTITUDE_QUATERNION">
      <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right), expressed as quaternion. Quaternion order is w, x, y, z and a zero rotation would be expressed as (1 0 0 0).</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="float" name="q1">Quaternion component 1, w (1 in null-rotation)</field>
      <field type="float" name="q2">Quaternion component 2, x (0 in null-rotation)</field>
      <field type="float" name="q3">Quaternion component 3, y (0 in null-rotation)</field>
      <field type="float" name="q4">Quaternion component 4, z (0 in null-rotation)</field>
      <field type="float" name="rollspeed" units="rad/s">Roll angular speed</field>
      <field type="float" name="pitchspeed" units="rad/s">Pitch angular speed</field>
      <field type="float" name="yawspeed" units="rad/s">Yaw angular speed</field>
      <extensions/>
      <field type="float[4]" name="repr_offset_q" invalid="[0]">Rotation offset by which the attitude quaternion and angular speed vector should be rotated for user display (quaternion with [w, x, y, z] order, zero-rotation is [1, 0, 0, 0], send [0, 0, 0, 0] if field not supported). This field is intended for systems in which the reference attitude may change during flight. For example, tailsitters VTOLs rotate their reference attitude by 90 degrees between hover mode and fixed wing mode, thus repr_offset_q is equal to [1, 0, 0, 0] in hover mode and equal to [0.7071, 0, 0.7071, 0] in fixed wing mode.</field>
    </message>
    <message id="32" name="LOCAL_POSITION_NED">
      <description>The filtered local position (e.g. fused computer vision and accelerometers). Coordinate frame is right-handed, Z-axis down (aeronautical frame, NED / north-east-down convention)</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="float" name="x" units="m">X Position</field>
      <field type="float" name="y" units="m">Y Position</field>
      <field type="float" name="z" units="m">Z Position</field>
      <field type="float" name="vx" units="m/s">X Speed</field>
      <field type="float" name="vy" units="m/s">Y Speed</field>
      <field type="float" name="vz" units="m/s">Z Speed</field>
    </message>
    <message id="33" name="GLOBAL_POSITION_INT">
      <description>The filtered global position (e.g. fused GPS and accelerometers). The position is in GPS-frame (right-handed, Z-up). It
               is designed as scaled integer message since the resolution of float is not sufficient.</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="int32_t" name="lat" units="degE7">Latitude, expressed</field>
      <field type="int32_t" name="lon" units="degE7">Longitude, expressed</field>
      <field type="int32_t" name="alt" units="mm">Altitude (MSL). Note that virtually all GPS modules provide both WGS84 and MSL.</field>
      <field type="int32_t" name="relative_alt" units="mm">Altitude above ground</field>
      <field type="int16_t" name="vx" units="cm/s">Ground X Speed (Latitude, positive north)</field>
      <field type="int16_t" name="vy" units="cm/s">Ground Y Speed (Longitude, positive east)</field>
      <field type="int16_t" name="vz" units="cm/s">Ground Z Speed (Altitude, positive down)</field>
      <field type="uint16_t" name="hdg" units="cdeg" invalid="UINT16_MAX">Vehicle heading (yaw angle), 0.0..359.99 degrees. If unknown, set to: UINT16_MAX</field>
    </message>
    <message id="34" name="RC_CHANNELS_SCALED">
      <description>The scaled values of the RC channels received: (-100%) -10000, (0%) 0, (100%) 10000. Channels that are inactive should be set to UINT16_MAX.</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="uint8_t" name="port">Servo output port (set of 8 outputs = 1 port). Flight stacks running on Pixhawk should use: 0 = MAIN, 1 = AUX.</field>
      <field type="int16_t" name="chan1_scaled" invalid="UINT16_MAX">RC channel 1 value scaled.</field>
      <field type="int16_t" name="chan2_scaled" invalid="UINT16_MAX">RC channel 2 value scaled.</field>
      <field type="int16_t" name="chan3_scaled" invalid="UINT16_MAX">RC channel 3 value scaled.</field>
      <field type="int16_t" name="chan4_scaled" invalid="UINT16_MAX">RC channel 4 value scaled.</field>
      <field type="int16_t" name="chan5_scaled" invalid="UINT16_MAX">RC channel 5 value scaled.</field>
      <field type="int16_t" name="chan6_scaled" invalid="UINT16_MAX">RC channel 6 value scaled.</field>
      <field type="int16_t" name="chan7_scaled" invalid="UINT16_MAX">RC channel 7 value scaled.</field>
      <field type="int16_t" name="chan8_scaled" invalid="UINT16_MAX">RC channel 8 value scaled.</field>
      <field type="uint8_t" name="rssi" invalid="UINT8_MAX">Receive signal strength indicator in device-dependent units/scale. Values: [0-254], UINT8_MAX: invalid/unknown.</field>
    </message>
    <message id="35" name="RC_CHANNELS_RAW">
      <description>The RAW values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. A value of UINT16_MAX implies the channel is unused. Individual receivers/transmitters might violate this specification.</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="uint8_t" name="port">Servo output port (set of 8 outputs = 1 port). Flight stacks running on Pixhawk should use: 0 = MAIN, 1 = AUX.</field>
      <field type="uint16_t" name="chan1_raw" units="us" invalid="UINT16_MAX">RC channel 1 value.</field>
      <field type="uint16_t" name="chan2_raw" units="us" invalid="UINT16_MAX">RC channel 2 value.</field>
      <field type="uint16_t" name="chan3_raw" units="us" invalid="UINT16_MAX">RC channel 3 value.</field>
      <field type="uint16_t" name="chan4_raw" units="us" invalid="UINT16_MAX">RC channel 4 value.</field>
      <field type="uint16_t" name="chan5_raw" units="us" invalid="UINT16_MAX">RC channel 5 value.</field>
      <field type="uint16_t" name="chan6_raw" units="us" invalid="UINT16_MAX">RC channel 6 value.</field>
      <field type="uint16_t" name="chan7_raw" units="us" invalid="UINT16_MAX">RC channel 7 value.</field>
      <field type="uint16_t" name="chan8_raw" units="us" invalid="UINT16_MAX">RC channel 8 value.</field>
      <field type="uint8_t" name="rssi" invalid="UINT8_MAX">Receive signal strength indicator in device-dependent units/scale. Values: [0-254], UINT8_MAX: invalid/unknown.</field>
    </message>
    <message id="36" name="SERVO_OUTPUT_RAW">
      <description>Superseded by ACTUATOR_OUTPUT_STATUS. The RAW values of the servo outputs (for RC input from the remote, use the RC_CHANNELS messages). The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%.</description>
      <field type="uint32_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="uint8_t" name="port">Servo output port (set of 8 outputs = 1 port). Flight stacks running on Pixhawk should use: 0 = MAIN, 1 = AUX.</field>
      <field type="uint16_t" name="servo1_raw" units="us">Servo output 1 value</field>
      <field type="uint16_t" name="servo2_raw" units="us">Servo output 2 value</field>
      <field type="uint16_t" name="servo3_raw" units="us">Servo output 3 value</field>
      <field type="uint16_t" name="servo4_raw" units="us">Servo output 4 value</field>
      <field type="uint16_t" name="servo5_raw" units="us">Servo output 5 value</field>
      <field type="uint16_t" name="servo6_raw" units="us">Servo output 6 value</field>
      <field type="uint16_t" name="servo7_raw" units="us">Servo output 7 value</field>
      <field type="uint16_t" name="servo8_raw" units="us">Servo output 8 value</field>
      <extensions/>
      <field type="uint16_t" name="servo9_raw" units="us">Servo output 9 value</field>
      <field type="uint16_t" name="servo10_raw" units="us">Servo output 10 value</field>
      <field type="uint16_t" name="servo11_raw" units="us">Servo output 11 value</field>
      <field type="uint16_t" name="servo12_raw" units="us">Servo output 12 value</field>
      <field type="uint16_t" name="servo13_raw" units="us">Servo output 13 value</field>
      <field type="uint16_t" name="servo14_raw" units="us">Servo output 14 value</field>
      <field type="uint16_t" name="servo15_raw" units="us">Servo output 15 value</field>
      <field type="uint16_t" name="servo16_raw" units="us">Servo output 16 value</field>
    </message>
    <message id="37" name="MISSION_REQUEST_PARTIAL_LIST">
      <description>Request a partial list of mission items from the system/component. https://mavlink.io/en/services/mission.html. If start and end index are the same, just send one waypoint.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="int16_t" name="start_index">Start index</field>
      <field type="int16_t" name="end_index">End index, -1 by default (-1: send list to end). Else a valid index of the list</field>
      <extensions/>
      <field type="uint8_t" name="mission_type" enum="MAV_MISSION_TYPE">Mission type.</field>
    </message>
    <message id="38" name="MISSION_WRITE_PARTIAL_LIST">
      <description>This message is sent to the MAV to write a partial list. If start index == end index, only one item will be transmitted / updated. If the start index is NOT 0 and above the current list size, this request should be REJECTED!</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="int16_t" name="start_index">Start index. Must be smaller / equal to the largest index of the current onboard list.</field>
      <field type="int16_t" name="end_index">End index, equal or greater than start index.</field>
      <extensions/>
      <field type="uint8_t" name="mission_type" enum="MAV_MISSION_TYPE">Mission type.</field>
    </message>
    <message id="39" name="MISSION_ITEM">
      <deprecated since="2020-06" replaced_by="MISSION_ITEM_INT"/>
      <description>Message encoding a mission item. This message is emitted to announce
                the presence of a mission item and to set a mission item on the system. The mission item can be either in x, y, z meters (type: LOCAL) or x:lat, y:lon, z:altitude. Local frame is Z-down, right handed (NED), global frame is Z-up, right handed (ENU). NaN may be used to indicate an optional/default value (e.g. to use the system's current latitude or yaw rather than a specific value). See also https://mavlink.io/en/services/mission.html.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="seq">Sequence</field>
      <field type="uint8_t" name="frame" enum="MAV_FRAME">The coordinate system of the waypoint.</field>
      <field type="uint16_t" name="command" enum="MAV_CMD">The scheduled action for the waypoint.</field>
      <field type="uint8_t" name="current">false:0, true:1</field>
      <field type="uint8_t" name="autocontinue">Autocontinue to next waypoint. 0: false, 1: true. Set false to pause mission after the item completes.</field>
      <field type="float" name="param1">PARAM1, see MAV_CMD enum</field>
      <field type="float" name="param2">PARAM2, see MAV_CMD enum</field>
      <field type="float" name="param3">PARAM3, see MAV_CMD enum</field>
      <field type="float" name="param4">PARAM4, see MAV_CMD enum</field>
      <field type="float" name="x">PARAM5 / local: X coordinate, global: latitude</field>
      <field type="float" name="y">PARAM6 / local: Y coordinate, global: longitude</field>
      <field type="float" name="z">PARAM7 / local: Z coordinate, global: altitude (relative or absolute, depending on frame).</field>
      <extensions/>
      <field type="uint8_t" name="mission_type" enum="MAV_MISSION_TYPE">Mission type.</field>
    </message>
    <message id="40" name="MISSION_REQUEST">
      <deprecated since="2020-06" replaced_by="MISSION_REQUEST_INT">A system that gets this request should respond with MISSION_ITEM_INT (as though MISSION_REQUEST_INT was received).</deprecated>
      <description>Request the information of the mission item with the sequence number seq. The response of the system to this message should be a MISSION_ITEM message. https://mavlink.io/en/services/mission.html</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="seq">Sequence</field>
      <extensions/>
      <field type="uint8_t" name="mission_type" enum="MAV_MISSION_TYPE">Mission type.</field>
    </message>
    <message id="41" name="MISSION_SET_CURRENT">
      <deprecated since="2022-08" replaced_by="MAV_CMD_DO_SET_MISSION_CURRENT"/>
      <description>
        Set the mission item with sequence number seq as the current item and emit MISSION_CURRENT (whether or not the mission number changed).
        If a mission is currently being executed, the system will continue to this new mission item on the shortest path, skipping any intermediate mission items.
        Note that mission jump repeat counters are not reset (see MAV_CMD_DO_JUMP param2).

        This message may trigger a mission state-machine change on some systems: for example from MISSION_STATE_NOT_STARTED or MISSION_STATE_PAUSED to MISSION_STATE_ACTIVE.
        If the system is in mission mode, on those systems this command might therefore start, restart or resume the mission.
        If the system is not in mission mode this message must not trigger a switch to mission mode.
      </description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="seq">Sequence</field>
    </message>
    <message id="42" name="MISSION_CURRENT">
      <description>
        Message that announces the sequence number of the current target mission item (that the system will fly towards/execute when the mission is running).
        This message should be streamed all the time (nominally at 1Hz).
        This message should be emitted following a call to MAV_CMD_DO_SET_MISSION_CURRENT or SET_MISSION_CURRENT.
      </description>
      <field type="uint16_t" name="seq">Sequence</field>
      <extensions/>
      <field type="uint16_t" name="total" invalid="UINT16_MAX">Total number of mission items on vehicle (on last item, sequence == total). If the autopilot stores its home location as part of the mission this will be excluded from the total. 0: Not supported, UINT16_MAX if no mission is present on the vehicle.</field>
      <field type="uint8_t" name="mission_state" enum="MISSION_STATE" invalid="0">Mission state machine state. MISSION_STATE_UNKNOWN if state reporting not supported.</field>
      <field type="uint8_t" name="mission_mode" invalid="0">Vehicle is in a mode that can execute mission items or suspended. 0: Unknown, 1: In mission mode, 2: Suspended (not in mission mode).</field>
    </message>
    <message id="43" name="MISSION_REQUEST_LIST">
      <description>Request the overall list of mission items from the system/component.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <extensions/>
      <field type="uint8_t" name="mission_type" enum="MAV_MISSION_TYPE">Mission type.</field>
    </message>
    <message id="44" name="MISSION_COUNT">
      <description>This message is emitted as response to MISSION_REQUEST_LIST by the MAV and to initiate a write transaction. The GCS can then request the individual mission item based on the knowledge of the total number of waypoints.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="count">Number of mission items in the sequence</field>
      <extensions/>
      <field type="uint8_t" name="mission_type" enum="MAV_MISSION_TYPE">Mission type.</field>
    </message>
    <message id="45" name="MISSION_CLEAR_ALL">
      <description>Delete all mission items at once.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <extensions/>
      <field type="uint8_t" name="mission_type" enum="MAV_MISSION_TYPE">Mission type.</field>
    </message>
    <message id="46" name="MISSION_ITEM_REACHED">
      <description>A certain mission item has been reached. The system will either hold this position (or circle on the orbit) or (if the autocontinue on the WP was set) continue to the next waypoint.</description>
      <field type="uint16_t" name="seq">Sequence</field>
    </message>
    <message id="47" name="MISSION_ACK">
      <description>Acknowledgment message during waypoint handling. The type field states if this message is a positive ack (type=0) or if an error happened (type=non-zero).</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint8_t" name="type" enum="MAV_MISSION_RESULT">Mission result.</field>
      <extensions/>
      <field type="uint8_t" name="mission_type" enum="MAV_MISSION_TYPE">Mission type.</field>
    </message>
    <message id="48" name="SET_GPS_GLOBAL_ORIGIN">
      <description>Sets the GPS coordinates of the vehicle local origin (0,0,0) position. Vehicle should emit GPS_GLOBAL_ORIGIN irrespective of whether the origin is changed. This enables transform between the local coordinate frame and the global (GPS) coordinate frame, which may be necessary when (for example) indoor and outdoor settings are connected and the MAV should move from in- to outdoor.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="int32_t" name="latitude" units="degE7">Latitude (WGS84)</field>
      <field type="int32_t" name="longitude" units="degE7">Longitude (WGS84)</field>
      <field type="int32_t" name="altitude" units="mm">Altitude (MSL). Positive for up.</field>
      <extensions/>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
    </message>
    <message id="49" name="GPS_GLOBAL_ORIGIN">
      <description>Publishes the GPS coordinates of the vehicle local origin (0,0,0) position. Emitted whenever a new GPS-Local position mapping is requested or set - e.g. following SET_GPS_GLOBAL_ORIGIN message.</description>
      <field type="int32_t" name="latitude" units="degE7">Latitude (WGS84)</field>
      <field type="int32_t" name="longitude" units="degE7">Longitude (WGS84)</field>
      <field type="int32_t" name="altitude" units="mm">Altitude (MSL). Positive for up.</field>
      <extensions/>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
    </message>
    <message id="50" name="PARAM_MAP_RC">
      <description>Bind a RC channel to a parameter. The parameter should change according to the RC channel value.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field type="int16_t" name="param_index">Parameter index. Send -1 to use the param ID field as identifier (else the param id will be ignored), send -2 to disable any existing map for this rc_channel_index.</field>
      <field type="uint8_t" name="parameter_rc_channel_index">Index of parameter RC channel. Not equal to the RC channel id. Typically corresponds to a potentiometer-knob on the RC.</field>
      <field type="float" name="param_value0">Initial parameter value</field>
      <field type="float" name="scale">Scale, maps the RC range [-1, 1] to a parameter value</field>
      <field type="float" name="param_value_min">Minimum param value. The protocol does not define if this overwrites an onboard minimum value. (Depends on implementation)</field>
      <field type="float" name="param_value_max">Maximum param value. The protocol does not define if this overwrites an onboard maximum value. (Depends on implementation)</field>
    </message>
    <message id="51" name="MISSION_REQUEST_INT">
      <description>Request the information of the mission item with the sequence number seq. The response of the system to this message should be a MISSION_ITEM_INT message. https://mavlink.io/en/services/mission.html</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="seq">Sequence</field>
      <extensions/>
      <field type="uint8_t" name="mission_type" enum="MAV_MISSION_TYPE">Mission type.</field>
    </message>
    <!-- Note, id 53 reserved for MISSION_CHECKSUM message (development.xml) -->
    <message id="54" name="SAFETY_SET_ALLOWED_AREA">
      <description>Set a safety zone (volume), which is defined by two corners of a cube. This message can be used to tell the MAV which setpoints/waypoints to accept and which to reject. Safety areas are often enforced by national or competition regulations.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint8_t" name="frame" enum="MAV_FRAME">Coordinate frame. Can be either global, GPS, right-handed with Z axis up or local, right handed, Z axis down.</field>
      <field type="float" name="p1x" units="m">x position 1 / Latitude 1</field>
      <field type="float" name="p1y" units="m">y position 1 / Longitude 1</field>
      <field type="float" name="p1z" units="m">z position 1 / Altitude 1</field>
      <field type="float" name="p2x" units="m">x position 2 / Latitude 2</field>
      <field type="float" name="p2y" units="m">y position 2 / Longitude 2</field>
      <field type="float" name="p2z" units="m">z position 2 / Altitude 2</field>
    </message>
    <message id="55" name="SAFETY_ALLOWED_AREA">
      <description>Read out the safety zone the MAV currently assumes.</description>
      <field type="uint8_t" name="frame" enum="MAV_FRAME">Coordinate frame. Can be either global, GPS, right-handed with Z axis up or local, right handed, Z axis down.</field>
      <field type="float" name="p1x" units="m">x position 1 / Latitude 1</field>
      <field type="float" name="p1y" units="m">y position 1 / Longitude 1</field>
      <field type="float" name="p1z" units="m">z position 1 / Altitude 1</field>
      <field type="float" name="p2x" units="m">x position 2 / Latitude 2</field>
      <field type="float" name="p2y" units="m">y position 2 / Longitude 2</field>
      <field type="float" name="p2z" units="m">z position 2 / Altitude 2</field>
    </message>
    <message id="61" name="ATTITUDE_QUATERNION_COV">
      <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right), expressed as quaternion. Quaternion order is w, x, y, z and a zero rotation would be expressed as (1 0 0 0).</description>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="float[4]" name="q">Quaternion components, w, x, y, z (1 0 0 0 is the null-rotation)</field>
      <field type="float" name="rollspeed" units="rad/s">Roll angular speed</field>
      <field type="float" name="pitchspeed" units="rad/s">Pitch angular speed</field>
      <field type="float" name="yawspeed" units="rad/s">Yaw angular speed</field>
      <field type="float[9]" name="covariance" invalid="[NaN:]">Row-major representation of a 3x3 attitude covariance matrix (states: roll, pitch, yaw; first three entries are the first ROW, next three entries are the second row, etc.). If unknown, assign NaN value to first element in the array.</field>
    </message>
    <message id="62" name="NAV_CONTROLLER_OUTPUT">
      <description>The state of the navigation and position controller.</description>
      <field type="float" name="nav_roll" units="deg">Current desired roll</field>
      <field type="float" name="nav_pitch" units="deg">Current desired pitch</field>
      <field type="int16_t" name="nav_bearing" units="deg">Current desired heading</field>
      <field type="int16_t" name="target_bearing" units="deg">Bearing to current waypoint/target</field>
      <field type="uint16_t" name="wp_dist" units="m">Distance to active waypoint</field>
      <field type="float" name="alt_error" units="m">Current altitude error</field>
      <field type="float" name="aspd_error" units="m/s">Current airspeed error</field>
      <field type="float" name="xtrack_error" units="m">Current crosstrack error on x-y plane</field>
    </message>
    <message id="63" name="GLOBAL_POSITION_INT_COV">
      <description>The filtered global position (e.g. fused GPS and accelerometers). The position is in GPS-frame (right-handed, Z-up). It  is designed as scaled integer message since the resolution of float is not sufficient. NOTE: This message is intended for onboard networks / companion computers and higher-bandwidth links and optimized for accuracy and completeness. Please use the GLOBAL_POSITION_INT message for a minimal subset.</description>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="uint8_t" name="estimator_type" enum="MAV_ESTIMATOR_TYPE">Class id of the estimator this estimate originated from.</field>
      <field type="int32_t" name="lat" units="degE7">Latitude</field>
      <field type="int32_t" name="lon" units="degE7">Longitude</field>
      <field type="int32_t" name="alt" units="mm">Altitude in meters above MSL</field>
      <field type="int32_t" name="relative_alt" units="mm">Altitude above ground</field>
      <field type="float" name="vx" units="m/s">Ground X Speed (Latitude)</field>
      <field type="float" name="vy" units="m/s">Ground Y Speed (Longitude)</field>
      <field type="float" name="vz" units="m/s">Ground Z Speed (Altitude)</field>
      <field type="float[36]" name="covariance" invalid="[NaN:]">Row-major representation of a 6x6 position and velocity 6x6 cross-covariance matrix (states: lat, lon, alt, vx, vy, vz; first six entries are the first ROW, next six entries are the second row, etc.). If unknown, assign NaN value to first element in the array.</field>
    </message>
    <message id="64" name="LOCAL_POSITION_NED_COV">
      <description>The filtered local position (e.g. fused computer vision and accelerometers). Coordinate frame is right-handed, Z-axis down (aeronautical frame, NED / north-east-down convention)</description>
      <field type="uint64_t" name="time_usec" units="us">Timestamp (UNIX Epoch time or time since system boot). The receiving end can infer timestamp format (since 1.1.1970 or since system boot) by checking for the magnitude of the number.</field>
      <field type="uint8_t" name="estimator_type" enum="MAV_ESTIMATOR_TYPE">Class id of the estimator this estimate originated from.</field>
      <field type="float" name="x" units="m">X Position</field>
      <field type="float" name="y" units="m">Y Position</field>
      <field type="float" name="z" units="m">Z Position</field>
      <field type="float" name="vx" units="m/s">X Speed</field>
      <field type="float" name="vy" units="m/s">Y Speed</field>
      <field type="float" name="vz" units="m/s">Z Speed</field>
      <field type="float" name="ax" units="m/s/s">X Acceleration</field>
      <field type="float" name="ay" units="m/s/s">Y Acceleration</field>
      <field type="float" name="az" units="m/s/s">Z Acceleration</field>
      <field type="float[45]" name="covariance" invalid="[NaN:]">Row-major representation of position, velocity and acceleration 9x9 cross-covariance matrix upper right triangle (states: x, y, z, vx, vy, vz, ax, ay, az; first nine entries are the first ROW, next eight entries are the second row, etc.). If unknown, assign NaN value to first element in the array.</field>
    </message>
    <message id="65" name="RC_CHANNELS">
      <description>The PPM values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%.  A value of UINT16_MAX implies the channel is unused. Individual receivers/transmitters might violate this specification.</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="uint8_t" name="chancount">Total number of RC channels being received. This can be larger than 18, indicating that more channels are available but not given in this message. This value should be 0 when no RC channels are available.</field>
      <field type="uint16_t" name="chan1_raw" units="us" invalid="UINT16_MAX">RC channel 1 value.</field>
      <field type="uint16_t" name="chan2_raw" units="us" invalid="UINT16_MAX">RC channel 2 value.</field>
      <field type="uint16_t" name="chan3_raw" units="us" invalid="UINT16_MAX">RC channel 3 value.</field>
      <field type="uint16_t" name="chan4_raw" units="us" invalid="UINT16_MAX">RC channel 4 value.</field>
      <field type="uint16_t" name="chan5_raw" units="us" invalid="UINT16_MAX">RC channel 5 value.</field>
      <field type="uint16_t" name="chan6_raw" units="us" invalid="UINT16_MAX">RC channel 6 value.</field>
      <field type="uint16_t" name="chan7_raw" units="us" invalid="UINT16_MAX">RC channel 7 value.</field>
      <field type="uint16_t" name="chan8_raw" units="us" invalid="UINT16_MAX">RC channel 8 value.</field>
      <field type="uint16_t" name="chan9_raw" units="us" invalid="UINT16_MAX">RC channel 9 value.</field>
      <field type="uint16_t" name="chan10_raw" units="us" invalid="UINT16_MAX">RC channel 10 value.</field>
      <field type="uint16_t" name="chan11_raw" units="us" invalid="UINT16_MAX">RC channel 11 value.</field>
      <field type="uint16_t" name="chan12_raw" units="us" invalid="UINT16_MAX">RC channel 12 value.</field>
      <field type="uint16_t" name="chan13_raw" units="us" invalid="UINT16_MAX">RC channel 13 value.</field>
      <field type="uint16_t" name="chan14_raw" units="us" invalid="UINT16_MAX">RC channel 14 value.</field>
      <field type="uint16_t" name="chan15_raw" units="us" invalid="UINT16_MAX">RC channel 15 value.</field>
      <field type="uint16_t" name="chan16_raw" units="us" invalid="UINT16_MAX">RC channel 16 value.</field>
      <field type="uint16_t" name="chan17_raw" units="us" invalid="UINT16_MAX">RC channel 17 value.</field>
      <field type="uint16_t" name="chan18_raw" units="us" invalid="UINT16_MAX">RC channel 18 value.</field>
      <field type="uint8_t" name="rssi" invalid="UINT8_MAX">Receive signal strength indicator in device-dependent units/scale. Values: [0-254], UINT8_MAX: invalid/unknown.</field>
    </message>
    <message id="66" name="REQUEST_DATA_STREAM">
      <deprecated since="2015-08" replaced_by="SET_MESSAGE_INTERVAL"/>
      <description>Request a data stream.</description>
      <field type="uint8_t" name="target_system">The target requested to send the message stream.</field>
      <field type="uint8_t" name="target_component">The target requested to send the message stream.</field>
      <field type="uint8_t" name="req_stream_id">The ID of the requested data stream</field>
      <field type="uint16_t" name="req_message_rate" units="Hz">The requested message rate</field>
      <field type="uint8_t" name="start_stop">1 to start sending, 0 to stop sending.</field>
    </message>
    <message id="67" name="DATA_STREAM">
      <deprecated since="2015-08" replaced_by="MESSAGE_INTERVAL"/>
      <description>Data stream status information.</description>
      <field type="uint8_t" name="stream_id">The ID of the requested data stream</field>
      <field type="uint16_t" name="message_rate" units="Hz">The message rate</field>
      <field type="uint8_t" name="on_off">1 stream is enabled, 0 stream is stopped.</field>
    </message>
    <message id="69" name="MANUAL_CONTROL">
      <description>This message provides an API for manually controlling the vehicle using standard joystick axes nomenclature, along with a joystick-like input device. Unused axes can be disabled and buttons states are transmitted as individual on/off bits of a bitmask</description>
      <field type="uint8_t" name="target">The system to be controlled.</field>
      <field type="int16_t" name="x" invalid="INT16_MAX">X-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to forward(1000)-backward(-1000) movement on a joystick and the pitch of a vehicle.</field>
      <field type="int16_t" name="y" invalid="INT16_MAX">Y-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to left(-1000)-right(1000) movement on a joystick and the roll of a vehicle.</field>
      <field type="int16_t" name="z" invalid="INT16_MAX">Z-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to a separate slider movement with maximum being 1000 and minimum being -1000 on a joystick and the thrust of a vehicle. Positive values are positive thrust, negative values are negative thrust.</field>
      <field type="int16_t" name="r" invalid="INT16_MAX">R-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to a twisting of the joystick, with counter-clockwise being 1000 and clockwise being -1000, and the yaw of a vehicle.</field>
      <field type="uint16_t" name="buttons">A bitfield corresponding to the joystick buttons' 0-15 current state, 1 for pressed, 0 for released. The lowest bit corresponds to Button 1.</field>
      <extensions/>
      <field type="uint16_t" name="buttons2">A bitfield corresponding to the joystick buttons' 16-31 current state, 1 for pressed, 0 for released. The lowest bit corresponds to Button 16.</field>
      <field type="uint8_t" name="enabled_extensions">Set bits to 1 to indicate which of the following extension fields contain valid data: bit 0: pitch, bit 1: roll.</field>
      <field type="int16_t" name="s">Pitch-only-axis, normalized to the range [-1000,1000]. Generally corresponds to pitch on vehicles with additional degrees of freedom. Valid if bit 0 of enabled_extensions field is set. Set to 0 if invalid.</field>
      <field type="int16_t" name="t">Roll-only-axis, normalized to the range [-1000,1000]. Generally corresponds to roll on vehicles with additional degrees of freedom. Valid if bit 1 of enabled_extensions field is set. Set to 0 if invalid.</field>
    </message>
    <message id="70" name="RC_CHANNELS_OVERRIDE">
      <description>The RAW values of the RC channels sent to the MAV to override info received from the RC radio. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.  Note carefully the semantic differences between the first 8 channels and the subsequent channels</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="chan1_raw" units="us" invalid="UINT16_MAX">RC channel 1 value. A value of UINT16_MAX means to ignore this field. A value of 0 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan2_raw" units="us" invalid="UINT16_MAX">RC channel 2 value. A value of UINT16_MAX means to ignore this field. A value of 0 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan3_raw" units="us" invalid="UINT16_MAX">RC channel 3 value. A value of UINT16_MAX means to ignore this field. A value of 0 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan4_raw" units="us" invalid="UINT16_MAX">RC channel 4 value. A value of UINT16_MAX means to ignore this field. A value of 0 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan5_raw" units="us" invalid="UINT16_MAX">RC channel 5 value. A value of UINT16_MAX means to ignore this field. A value of 0 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan6_raw" units="us" invalid="UINT16_MAX">RC channel 6 value. A value of UINT16_MAX means to ignore this field. A value of 0 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan7_raw" units="us" invalid="UINT16_MAX">RC channel 7 value. A value of UINT16_MAX means to ignore this field. A value of 0 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan8_raw" units="us" invalid="UINT16_MAX">RC channel 8 value. A value of UINT16_MAX means to ignore this field. A value of 0 means to release this channel back to the RC radio.</field>
      <extensions/>
      <field type="uint16_t" name="chan9_raw" units="us" invalid="0">RC channel 9 value. A value of 0 or UINT16_MAX means to ignore this field. A value of UINT16_MAX-1 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan10_raw" units="us" invalid="0">RC channel 10 value. A value of 0 or UINT16_MAX means to ignore this field. A value of UINT16_MAX-1 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan11_raw" units="us" invalid="0">RC channel 11 value. A value of 0 or UINT16_MAX means to ignore this field. A value of UINT16_MAX-1 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan12_raw" units="us" invalid="0">RC channel 12 value. A value of 0 or UINT16_MAX means to ignore this field. A value of UINT16_MAX-1 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan13_raw" units="us" invalid="0">RC channel 13 value. A value of 0 or UINT16_MAX means to ignore this field. A value of UINT16_MAX-1 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan14_raw" units="us" invalid="0">RC channel 14 value. A value of 0 or UINT16_MAX means to ignore this field. A value of UINT16_MAX-1 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan15_raw" units="us" invalid="0">RC channel 15 value. A value of 0 or UINT16_MAX means to ignore this field. A value of UINT16_MAX-1 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan16_raw" units="us" invalid="0">RC channel 16 value. A value of 0 or UINT16_MAX means to ignore this field. A value of UINT16_MAX-1 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan17_raw" units="us" invalid="0">RC channel 17 value. A value of 0 or UINT16_MAX means to ignore this field. A value of UINT16_MAX-1 means to release this channel back to the RC radio.</field>
      <field type="uint16_t" name="chan18_raw" units="us" invalid="0">RC channel 18 value. A value of 0 or UINT16_MAX means to ignore this field. A value of UINT16_MAX-1 means to release this channel back to the RC radio.</field>
    </message>
    <message id="73" name="MISSION_ITEM_INT">
      <description>Message encoding a mission item. This message is emitted to announce
                the presence of a mission item and to set a mission item on the system. The mission item can be either in x, y, z meters (type: LOCAL) or x:lat, y:lon, z:altitude. Local frame is Z-down, right handed (NED), global frame is Z-up, right handed (ENU). NaN or INT32_MAX may be used in float/integer params (respectively) to indicate optional/default values (e.g. to use the component's current latitude, yaw rather than a specific value). See also https://mavlink.io/en/services/mission.html.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="seq">Waypoint ID (sequence number). Starts at zero. Increases monotonically for each waypoint, no gaps in the sequence (0,1,2,3,4).</field>
      <field type="uint8_t" name="frame" enum="MAV_FRAME">The coordinate system of the waypoint.</field>
      <field type="uint16_t" name="command" enum="MAV_CMD">The scheduled action for the waypoint.</field>
      <field type="uint8_t" name="current">false:0, true:1</field>
      <field type="uint8_t" name="autocontinue">Autocontinue to next waypoint. 0: false, 1: true. Set false to pause mission after the item completes.</field>
      <field type="float" name="param1">PARAM1, see MAV_CMD enum</field>
      <field type="float" name="param2">PARAM2, see MAV_CMD enum</field>
      <field type="float" name="param3">PARAM3, see MAV_CMD enum</field>
      <field type="float" name="param4">PARAM4, see MAV_CMD enum</field>
      <field type="int32_t" name="x">PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7</field>
      <field type="int32_t" name="y">PARAM6 / y position: local: x position in meters * 1e4, global: longitude in degrees *10^7</field>
      <field type="float" name="z">PARAM7 / z position: global: altitude in meters (relative or absolute, depending on frame.</field>
      <extensions/>
      <field type="uint8_t" name="mission_type" enum="MAV_MISSION_TYPE">Mission type.</field>
    </message>
    <message id="74" name="VFR_HUD">
      <description>Metrics typically displayed on a HUD for fixed wing aircraft.</description>
      <field type="float" name="airspeed" units="m/s">Vehicle speed in form appropriate for vehicle type. For standard aircraft this is typically calibrated airspeed (CAS) or indicated airspeed (IAS) - either of which can be used by a pilot to estimate stall speed.</field>
      <field type="float" name="groundspeed" units="m/s">Current ground speed.</field>
      <field type="int16_t" name="heading" units="deg">Current heading in compass units (0-360, 0=north).</field>
      <field type="uint16_t" name="throttle" units="%">Current throttle setting (0 to 100).</field>
      <field type="float" name="alt" units="m">Current altitude (MSL).</field>
      <field type="float" name="climb" units="m/s">Current climb rate.</field>
    </message>
    <message id="75" name="COMMAND_INT">
      <description>Send a command with up to seven parameters to the MAV, where params 5 and 6 are integers and the other values are floats. This is preferred over COMMAND_LONG as it allows the MAV_FRAME to be specified for interpreting positional information, such as altitude. COMMAND_INT is also preferred when sending latitude and longitude data in params 5 and 6, as it allows for greater precision. Param 5 and 6 encode positional data as scaled integers, where the scaling depends on the actual command value. NaN or INT32_MAX may be used in float/integer params (respectively) to indicate optional/default values (e.g. to use the component's current latitude, yaw rather than a specific value). The command microservice is documented at https://mavlink.io/en/services/command.html</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint8_t" name="frame" enum="MAV_FRAME">The coordinate system of the COMMAND.</field>
      <field type="uint16_t" name="command" enum="MAV_CMD">The scheduled action for the mission item.</field>
      <field type="uint8_t" name="current">Not used.</field>
      <field type="uint8_t" name="autocontinue">Not used (set 0).</field>
      <field type="float" name="param1" invalid="NaN">PARAM1, see MAV_CMD enum</field>
      <field type="float" name="param2" invalid="NaN">PARAM2, see MAV_CMD enum</field>
      <field type="float" name="param3" invalid="NaN">PARAM3, see MAV_CMD enum</field>
      <field type="float" name="param4" invalid="NaN">PARAM4, see MAV_CMD enum</field>
      <field type="int32_t" name="x" invalid="INT32_MAX">PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7</field>
      <field type="int32_t" name="y" invalid="INT32_MAX">PARAM6 / local: y position in meters * 1e4, global: longitude in degrees * 10^7</field>
      <field type="float" name="z" invalid="NaN">PARAM7 / z position: global: altitude in meters (relative or absolute, depending on frame).</field>
    </message>
    <message id="76" name="COMMAND_LONG">
      <description>Send a command with up to seven parameters to the MAV. COMMAND_INT is generally preferred when sending MAV_CMD commands that include positional information; it offers higher precision and allows the MAV_FRAME to be specified (which may otherwise be ambiguous, particularly for altitude). The command microservice is documented at https://mavlink.io/en/services/command.html</description>
      <field type="uint8_t" name="target_system">System which should execute the command</field>
      <field type="uint8_t" name="target_component">Component which should execute the command, 0 for all components</field>
      <field type="uint16_t" name="command" enum="MAV_CMD">Command ID (of command to send).</field>
      <field type="uint8_t" name="confirmation">0: First transmission of this command. 1-255: Confirmation transmissions (e.g. for kill command)</field>
      <field type="float" name="param1" invalid="NaN">Parameter 1 (for the specific command).</field>
      <field type="float" name="param2" invalid="NaN">Parameter 2 (for the specific command).</field>
      <field type="float" name="param3" invalid="NaN">Parameter 3 (for the specific command).</field>
      <field type="float" name="param4" invalid="NaN">Parameter 4 (for the specific command).</field>
      <field type="float" name="param5" invalid="NaN">Parameter 5 (for the specific command).</field>
      <field type="float" name="param6" invalid="NaN">Parameter 6 (for the specific command).</field>
      <field type="float" name="param7" invalid="NaN">Parameter 7 (for the specific command).</field>
    </message>
    <message id="77" name="COMMAND_ACK">
      <description>Report status of a command. Includes feedback whether the command was executed. The command microservice is documented at https://mavlink.io/en/services/command.html</description>
      <field type="uint16_t" name="command" enum="MAV_CMD">Command ID (of acknowledged command).</field>
      <field type="uint8_t" name="result" enum="MAV_RESULT">Result of command.</field>
      <extensions/>
      <field type="uint8_t" name="progress" invalid="UINT8_MAX" units="%">The progress percentage when result is MAV_RESULT_IN_PROGRESS. Values: [0-100], or UINT8_MAX if the progress is unknown.</field>
      <field type="int32_t" name="result_param2">Additional result information. Can be set with a command-specific enum containing command-specific error reasons for why the command might be denied. If used, the associated enum must be documented in the corresponding MAV_CMD (this enum should have a 0 value to indicate "unused" or "unknown").</field>
      <field type="uint8_t" name="target_system">System ID of the target recipient. This is the ID of the system that sent the command for which this COMMAND_ACK is an acknowledgement.</field>
      <field type="uint8_t" name="target_component">Component ID of the target recipient. This is the ID of the system that sent the command for which this COMMAND_ACK is an acknowledgement.</field>
    </message>
    <message id="80" name="COMMAND_CANCEL">
      <wip/>
      <!-- This message is work-in-progress and it can therefore change. It should NOT be used in stable production environments. -->
      <description>Cancel a long running command. The target system should respond with a COMMAND_ACK to the original command with result=MAV_RESULT_CANCELLED if the long running process was cancelled. If it has already completed, the cancel action can be ignored. The cancel action can be retried until some sort of acknowledgement to the original command has been received. The command microservice is documented at https://mavlink.io/en/services/command.html</description>
      <field type="uint8_t" name="target_system">System executing long running command. Should not be broadcast (0).</field>
      <field type="uint8_t" name="target_component">Component executing long running command.</field>
      <field type="uint16_t" name="command" enum="MAV_CMD">Command ID (of command to cancel).</field>
    </message>
    <message id="81" name="MANUAL_SETPOINT">
      <description>Setpoint in roll, pitch, yaw and thrust from the operator</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="float" name="roll" units="rad/s">Desired roll rate</field>
      <field type="float" name="pitch" units="rad/s">Desired pitch rate</field>
      <field type="float" name="yaw" units="rad/s">Desired yaw rate</field>
      <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1</field>
      <field type="uint8_t" name="mode_switch">Flight mode switch position, 0.. 255</field>
      <field type="uint8_t" name="manual_override_switch">Override mode switch position, 0.. 255</field>
    </message>
    <message id="82" name="SET_ATTITUDE_TARGET">
      <description>Sets a desired vehicle attitude. Used by an external controller to command the vehicle (manual controller or other system).</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint8_t" name="type_mask" enum="ATTITUDE_TARGET_TYPEMASK" display="bitmask">Bitmap to indicate which dimensions should be ignored by the vehicle.</field>
      <field type="float[4]" name="q">Attitude quaternion (w, x, y, z order, zero-rotation is 1, 0, 0, 0)</field>
      <field type="float" name="body_roll_rate" units="rad/s">Body roll rate</field>
      <field type="float" name="body_pitch_rate" units="rad/s">Body pitch rate</field>
      <field type="float" name="body_yaw_rate" units="rad/s">Body yaw rate</field>
      <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1 (-1 .. 1 for vehicles capable of reverse trust)</field>
      <extensions/>
      <field type="float[3]" name="thrust_body">3D thrust setpoint in the body NED frame, normalized to -1 .. 1</field>
    </message>
    <message id="83" name="ATTITUDE_TARGET">
      <description>Reports the current commanded attitude of the vehicle as specified by the autopilot. This should match the commands sent in a SET_ATTITUDE_TARGET message if the vehicle is being controlled this way.</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="uint8_t" name="type_mask" enum="ATTITUDE_TARGET_TYPEMASK" display="bitmask">Bitmap to indicate which dimensions should be ignored by the vehicle.</field>
      <field type="float[4]" name="q">Attitude quaternion (w, x, y, z order, zero-rotation is 1, 0, 0, 0)</field>
      <field type="float" name="body_roll_rate" units="rad/s">Body roll rate</field>
      <field type="float" name="body_pitch_rate" units="rad/s">Body pitch rate</field>
      <field type="float" name="body_yaw_rate" units="rad/s">Body yaw rate</field>
      <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1 (-1 .. 1 for vehicles capable of reverse trust)</field>
    </message>
    <message id="84" name="SET_POSITION_TARGET_LOCAL_NED">
      <description>Sets a desired vehicle position in a local north-east-down coordinate frame. Used by an external controller to command the vehicle (manual controller or other system).</description>
      <field type="uint32_t" name="time_boot_ms" units="ms">Timestamp (time since system boot).</field>
      <field type="uint8_t" name="target_system">System