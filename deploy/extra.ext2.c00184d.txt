resetResponse*) deserialize from a stream
/// - int soap_write__tptz__GotoPresetResponse(soap*, _tptz__GotoPresetResponse*) serialize to a stream
/// - _tptz__GotoPresetResponse* _tptz__GotoPresetResponse::soap_dup(soap*) returns deep copy of _tptz__GotoPresetResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GotoPresetResponse::soap_del() deep deletes _tptz__GotoPresetResponse data members, use only after _tptz__GotoPresetResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GotoPresetResponse::soap_type() returns SOAP_TYPE__tptz__GotoPresetResponse or derived type identifier
class _tptz__GotoPresetResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatus
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetStatus is a complexType.
///
/// @note class _tptz__GetStatus operations:
/// - _tptz__GetStatus* soap_new__tptz__GetStatus(soap*) allocate and default initialize
/// - _tptz__GetStatus* soap_new__tptz__GetStatus(soap*, int num) allocate and default initialize an array
/// - _tptz__GetStatus* soap_new_req__tptz__GetStatus(soap*, ...) allocate, set required members
/// - _tptz__GetStatus* soap_new_set__tptz__GetStatus(soap*, ...) allocate, set all public members
/// - _tptz__GetStatus::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetStatus(soap*, _tptz__GetStatus*) deserialize from a stream
/// - int soap_write__tptz__GetStatus(soap*, _tptz__GetStatus*) serialize to a stream
/// - _tptz__GetStatus* _tptz__GetStatus::soap_dup(soap*) returns deep copy of _tptz__GetStatus, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetStatus::soap_del() deep deletes _tptz__GetStatus data members, use only after _tptz__GetStatus::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetStatus::soap_type() returns SOAP_TYPE__tptz__GetStatus or derived type identifier
class _tptz__GetStatus
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the PTZStatus should be requested.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetStatusResponse is a complexType.
///
/// @note class _tptz__GetStatusResponse operations:
/// - _tptz__GetStatusResponse* soap_new__tptz__GetStatusResponse(soap*) allocate and default initialize
/// - _tptz__GetStatusResponse* soap_new__tptz__GetStatusResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetStatusResponse* soap_new_req__tptz__GetStatusResponse(soap*, ...) allocate, set required members
/// - _tptz__GetStatusResponse* soap_new_set__tptz__GetStatusResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetStatusResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetStatusResponse(soap*, _tptz__GetStatusResponse*) deserialize from a stream
/// - int soap_write__tptz__GetStatusResponse(soap*, _tptz__GetStatusResponse*) serialize to a stream
/// - _tptz__GetStatusResponse* _tptz__GetStatusResponse::soap_dup(soap*) returns deep copy of _tptz__GetStatusResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetStatusResponse::soap_del() deep deletes _tptz__GetStatusResponse data members, use only after _tptz__GetStatusResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetStatusResponse::soap_type() returns SOAP_TYPE__tptz__GetStatusResponse or derived type identifier
class _tptz__GetStatusResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   The PTZStatus for the requested MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZStatus" of type "http://www.onvif.org/ver10/schema":PTZStatus.
    tt__PTZStatus*                       PTZStatus                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePosition is a complexType.
///
/// @note class _tptz__GotoHomePosition operations:
/// - _tptz__GotoHomePosition* soap_new__tptz__GotoHomePosition(soap*) allocate and default initialize
/// - _tptz__GotoHomePosition* soap_new__tptz__GotoHomePosition(soap*, int num) allocate and default initialize an array
/// - _tptz__GotoHomePosition* soap_new_req__tptz__GotoHomePosition(soap*, ...) allocate, set required members
/// - _tptz__GotoHomePosition* soap_new_set__tptz__GotoHomePosition(soap*, ...) allocate, set all public members
/// - _tptz__GotoHomePosition::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GotoHomePosition(soap*, _tptz__GotoHomePosition*) deserialize from a stream
/// - int soap_write__tptz__GotoHomePosition(soap*, _tptz__GotoHomePosition*) serialize to a stream
/// - _tptz__GotoHomePosition* _tptz__GotoHomePosition::soap_dup(soap*) returns deep copy of _tptz__GotoHomePosition, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GotoHomePosition::soap_del() deep deletes _tptz__GotoHomePosition data members, use only after _tptz__GotoHomePosition::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GotoHomePosition::soap_type() returns SOAP_TYPE__tptz__GotoHomePosition or derived type identifier
class _tptz__GotoHomePosition
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A requested speed.The speed parameter can only be specified when Speed Spaces are available for the PTZ Node.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GotoHomePositionResponse is a complexType.
///
/// @note class _tptz__GotoHomePositionResponse operations:
/// - _tptz__GotoHomePositionResponse* soap_new__tptz__GotoHomePositionResponse(soap*) allocate and default initialize
/// - _tptz__GotoHomePositionResponse* soap_new__tptz__GotoHomePositionResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GotoHomePositionResponse* soap_new_req__tptz__GotoHomePositionResponse(soap*, ...) allocate, set required members
/// - _tptz__GotoHomePositionResponse* soap_new_set__tptz__GotoHomePositionResponse(soap*, ...) allocate, set all public members
/// - _tptz__GotoHomePositionResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GotoHomePositionResponse(soap*, _tptz__GotoHomePositionResponse*) deserialize from a stream
/// - int soap_write__tptz__GotoHomePositionResponse(soap*, _tptz__GotoHomePositionResponse*) serialize to a stream
/// - _tptz__GotoHomePositionResponse* _tptz__GotoHomePositionResponse::soap_dup(soap*) returns deep copy of _tptz__GotoHomePositionResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GotoHomePositionResponse::soap_del() deep deletes _tptz__GotoHomePositionResponse data members, use only after _tptz__GotoHomePositionResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GotoHomePositionResponse::soap_type() returns SOAP_TYPE__tptz__GotoHomePositionResponse or derived type identifier
class _tptz__GotoHomePositionResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetHomePosition is a complexType.
///
/// @note class _tptz__SetHomePosition operations:
/// - _tptz__SetHomePosition* soap_new__tptz__SetHomePosition(soap*) allocate and default initialize
/// - _tptz__SetHomePosition* soap_new__tptz__SetHomePosition(soap*, int num) allocate and default initialize an array
/// - _tptz__SetHomePosition* soap_new_req__tptz__SetHomePosition(soap*, ...) allocate, set required members
/// - _tptz__SetHomePosition* soap_new_set__tptz__SetHomePosition(soap*, ...) allocate, set all public members
/// - _tptz__SetHomePosition::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetHomePosition(soap*, _tptz__SetHomePosition*) deserialize from a stream
/// - int soap_write__tptz__SetHomePosition(soap*, _tptz__SetHomePosition*) serialize to a stream
/// - _tptz__SetHomePosition* _tptz__SetHomePosition::soap_dup(soap*) returns deep copy of _tptz__SetHomePosition, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetHomePosition::soap_del() deep deletes _tptz__SetHomePosition data members, use only after _tptz__SetHomePosition::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetHomePosition::soap_type() returns SOAP_TYPE__tptz__SetHomePosition or derived type identifier
class _tptz__SetHomePosition
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the home position should be set.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":SetHomePositionResponse is a complexType.
///
/// @note class _tptz__SetHomePositionResponse operations:
/// - _tptz__SetHomePositionResponse* soap_new__tptz__SetHomePositionResponse(soap*) allocate and default initialize
/// - _tptz__SetHomePositionResponse* soap_new__tptz__SetHomePositionResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__SetHomePositionResponse* soap_new_req__tptz__SetHomePositionResponse(soap*, ...) allocate, set required members
/// - _tptz__SetHomePositionResponse* soap_new_set__tptz__SetHomePositionResponse(soap*, ...) allocate, set all public members
/// - _tptz__SetHomePositionResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__SetHomePositionResponse(soap*, _tptz__SetHomePositionResponse*) deserialize from a stream
/// - int soap_write__tptz__SetHomePositionResponse(soap*, _tptz__SetHomePositionResponse*) serialize to a stream
/// - _tptz__SetHomePositionResponse* _tptz__SetHomePositionResponse::soap_dup(soap*) returns deep copy of _tptz__SetHomePositionResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__SetHomePositionResponse::soap_del() deep deletes _tptz__SetHomePositionResponse data members, use only after _tptz__SetHomePositionResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__SetHomePositionResponse::soap_type() returns SOAP_TYPE__tptz__SetHomePositionResponse or derived type identifier
class _tptz__SetHomePositionResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMove is a complexType.
///
/// @note class _tptz__ContinuousMove operations:
/// - _tptz__ContinuousMove* soap_new__tptz__ContinuousMove(soap*) allocate and default initialize
/// - _tptz__ContinuousMove* soap_new__tptz__ContinuousMove(soap*, int num) allocate and default initialize an array
/// - _tptz__ContinuousMove* soap_new_req__tptz__ContinuousMove(soap*, ...) allocate, set required members
/// - _tptz__ContinuousMove* soap_new_set__tptz__ContinuousMove(soap*, ...) allocate, set all public members
/// - _tptz__ContinuousMove::soap_default(soap*) default initialize members
/// - int soap_read__tptz__ContinuousMove(soap*, _tptz__ContinuousMove*) deserialize from a stream
/// - int soap_write__tptz__ContinuousMove(soap*, _tptz__ContinuousMove*) serialize to a stream
/// - _tptz__ContinuousMove* _tptz__ContinuousMove::soap_dup(soap*) returns deep copy of _tptz__ContinuousMove, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__ContinuousMove::soap_del() deep deletes _tptz__ContinuousMove data members, use only after _tptz__ContinuousMove::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__ContinuousMove::soap_type() returns SOAP_TYPE__tptz__ContinuousMove or derived type identifier
class _tptz__ContinuousMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A Velocity vector specifying the velocity of pan, tilt and zoom.
/// </BLOCKQUOTE></PRE>
///
/// Element "Velocity" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Velocity                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Timeout parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element "Timeout" of type xs:duration.
    xsd__duration                        Timeout                        0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ContinuousMoveResponse is a complexType.
///
/// @note class _tptz__ContinuousMoveResponse operations:
/// - _tptz__ContinuousMoveResponse* soap_new__tptz__ContinuousMoveResponse(soap*) allocate and default initialize
/// - _tptz__ContinuousMoveResponse* soap_new__tptz__ContinuousMoveResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__ContinuousMoveResponse* soap_new_req__tptz__ContinuousMoveResponse(soap*, ...) allocate, set required members
/// - _tptz__ContinuousMoveResponse* soap_new_set__tptz__ContinuousMoveResponse(soap*, ...) allocate, set all public members
/// - _tptz__ContinuousMoveResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__ContinuousMoveResponse(soap*, _tptz__ContinuousMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__ContinuousMoveResponse(soap*, _tptz__ContinuousMoveResponse*) serialize to a stream
/// - _tptz__ContinuousMoveResponse* _tptz__ContinuousMoveResponse::soap_dup(soap*) returns deep copy of _tptz__ContinuousMoveResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__ContinuousMoveResponse::soap_del() deep deletes _tptz__ContinuousMoveResponse data members, use only after _tptz__ContinuousMoveResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__ContinuousMoveResponse::soap_type() returns SOAP_TYPE__tptz__ContinuousMoveResponse or derived type identifier
class _tptz__ContinuousMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RelativeMove is a complexType.
///
/// @note class _tptz__RelativeMove operations:
/// - _tptz__RelativeMove* soap_new__tptz__RelativeMove(soap*) allocate and default initialize
/// - _tptz__RelativeMove* soap_new__tptz__RelativeMove(soap*, int num) allocate and default initialize an array
/// - _tptz__RelativeMove* soap_new_req__tptz__RelativeMove(soap*, ...) allocate, set required members
/// - _tptz__RelativeMove* soap_new_set__tptz__RelativeMove(soap*, ...) allocate, set all public members
/// - _tptz__RelativeMove::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RelativeMove(soap*, _tptz__RelativeMove*) deserialize from a stream
/// - int soap_write__tptz__RelativeMove(soap*, _tptz__RelativeMove*) serialize to a stream
/// - _tptz__RelativeMove* _tptz__RelativeMove::soap_dup(soap*) returns deep copy of _tptz__RelativeMove, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RelativeMove::soap_del() deep deletes _tptz__RelativeMove data members, use only after _tptz__RelativeMove::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RelativeMove::soap_type() returns SOAP_TYPE__tptz__RelativeMove or derived type identifier
class _tptz__RelativeMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A positional Translation relative to the current position
/// </BLOCKQUOTE></PRE>
///
/// Element "Translation" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Translation                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed parameter.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RelativeMoveResponse is a complexType.
///
/// @note class _tptz__RelativeMoveResponse operations:
/// - _tptz__RelativeMoveResponse* soap_new__tptz__RelativeMoveResponse(soap*) allocate and default initialize
/// - _tptz__RelativeMoveResponse* soap_new__tptz__RelativeMoveResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__RelativeMoveResponse* soap_new_req__tptz__RelativeMoveResponse(soap*, ...) allocate, set required members
/// - _tptz__RelativeMoveResponse* soap_new_set__tptz__RelativeMoveResponse(soap*, ...) allocate, set all public members
/// - _tptz__RelativeMoveResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RelativeMoveResponse(soap*, _tptz__RelativeMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__RelativeMoveResponse(soap*, _tptz__RelativeMoveResponse*) serialize to a stream
/// - _tptz__RelativeMoveResponse* _tptz__RelativeMoveResponse::soap_dup(soap*) returns deep copy of _tptz__RelativeMoveResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RelativeMoveResponse::soap_del() deep deletes _tptz__RelativeMoveResponse data members, use only after _tptz__RelativeMoveResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RelativeMoveResponse::soap_type() returns SOAP_TYPE__tptz__RelativeMoveResponse or derived type identifier
class _tptz__RelativeMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMove is a complexType.
///
/// @note class _tptz__AbsoluteMove operations:
/// - _tptz__AbsoluteMove* soap_new__tptz__AbsoluteMove(soap*) allocate and default initialize
/// - _tptz__AbsoluteMove* soap_new__tptz__AbsoluteMove(soap*, int num) allocate and default initialize an array
/// - _tptz__AbsoluteMove* soap_new_req__tptz__AbsoluteMove(soap*, ...) allocate, set required members
/// - _tptz__AbsoluteMove* soap_new_set__tptz__AbsoluteMove(soap*, ...) allocate, set all public members
/// - _tptz__AbsoluteMove::soap_default(soap*) default initialize members
/// - int soap_read__tptz__AbsoluteMove(soap*, _tptz__AbsoluteMove*) deserialize from a stream
/// - int soap_write__tptz__AbsoluteMove(soap*, _tptz__AbsoluteMove*) serialize to a stream
/// - _tptz__AbsoluteMove* _tptz__AbsoluteMove::soap_dup(soap*) returns deep copy of _tptz__AbsoluteMove, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__AbsoluteMove::soap_del() deep deletes _tptz__AbsoluteMove data members, use only after _tptz__AbsoluteMove::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__AbsoluteMove::soap_type() returns SOAP_TYPE__tptz__AbsoluteMove or derived type identifier
class _tptz__AbsoluteMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A Position vector specifying the absolute target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Position" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       Position                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":AbsoluteMoveResponse is a complexType.
///
/// @note class _tptz__AbsoluteMoveResponse operations:
/// - _tptz__AbsoluteMoveResponse* soap_new__tptz__AbsoluteMoveResponse(soap*) allocate and default initialize
/// - _tptz__AbsoluteMoveResponse* soap_new__tptz__AbsoluteMoveResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__AbsoluteMoveResponse* soap_new_req__tptz__AbsoluteMoveResponse(soap*, ...) allocate, set required members
/// - _tptz__AbsoluteMoveResponse* soap_new_set__tptz__AbsoluteMoveResponse(soap*, ...) allocate, set all public members
/// - _tptz__AbsoluteMoveResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__AbsoluteMoveResponse(soap*, _tptz__AbsoluteMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__AbsoluteMoveResponse(soap*, _tptz__AbsoluteMoveResponse*) serialize to a stream
/// - _tptz__AbsoluteMoveResponse* _tptz__AbsoluteMoveResponse::soap_dup(soap*) returns deep copy of _tptz__AbsoluteMoveResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__AbsoluteMoveResponse::soap_del() deep deletes _tptz__AbsoluteMoveResponse data members, use only after _tptz__AbsoluteMoveResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__AbsoluteMoveResponse::soap_type() returns SOAP_TYPE__tptz__AbsoluteMoveResponse or derived type identifier
class _tptz__AbsoluteMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GeoMove
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GeoMove is a complexType.
///
/// @note class _tptz__GeoMove operations:
/// - _tptz__GeoMove* soap_new__tptz__GeoMove(soap*) allocate and default initialize
/// - _tptz__GeoMove* soap_new__tptz__GeoMove(soap*, int num) allocate and default initialize an array
/// - _tptz__GeoMove* soap_new_req__tptz__GeoMove(soap*, ...) allocate, set required members
/// - _tptz__GeoMove* soap_new_set__tptz__GeoMove(soap*, ...) allocate, set all public members
/// - _tptz__GeoMove::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GeoMove(soap*, _tptz__GeoMove*) deserialize from a stream
/// - int soap_write__tptz__GeoMove(soap*, _tptz__GeoMove*) serialize to a stream
/// - _tptz__GeoMove* _tptz__GeoMove::soap_dup(soap*) returns deep copy of _tptz__GeoMove, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GeoMove::soap_del() deep deletes _tptz__GeoMove data members, use only after _tptz__GeoMove::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GeoMove::soap_type() returns SOAP_TYPE__tptz__GeoMove or derived type identifier
class _tptz__GeoMove
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The geolocation of the target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "Target" of type "http://www.onvif.org/ver10/schema":GeoLocation.
    tt__GeoLocation*                     Target                         1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An optional Speed.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional indication of the height of the target/area.
/// </BLOCKQUOTE></PRE>
///
/// Element "AreaHeight" of type xs:float.
    float*                               AreaHeight                     0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   An optional indication of the width of the target/area.
/// </BLOCKQUOTE></PRE>
///
/// Element "AreaWidth" of type xs:float.
    float*                               AreaWidth                      0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GeoMoveResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GeoMoveResponse is a complexType.
///
/// @note class _tptz__GeoMoveResponse operations:
/// - _tptz__GeoMoveResponse* soap_new__tptz__GeoMoveResponse(soap*) allocate and default initialize
/// - _tptz__GeoMoveResponse* soap_new__tptz__GeoMoveResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GeoMoveResponse* soap_new_req__tptz__GeoMoveResponse(soap*, ...) allocate, set required members
/// - _tptz__GeoMoveResponse* soap_new_set__tptz__GeoMoveResponse(soap*, ...) allocate, set all public members
/// - _tptz__GeoMoveResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GeoMoveResponse(soap*, _tptz__GeoMoveResponse*) deserialize from a stream
/// - int soap_write__tptz__GeoMoveResponse(soap*, _tptz__GeoMoveResponse*) serialize to a stream
/// - _tptz__GeoMoveResponse* _tptz__GeoMoveResponse::soap_dup(soap*) returns deep copy of _tptz__GeoMoveResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GeoMoveResponse::soap_del() deep deletes _tptz__GeoMoveResponse data members, use only after _tptz__GeoMoveResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GeoMoveResponse::soap_type() returns SOAP_TYPE__tptz__GeoMoveResponse or derived type identifier
class _tptz__GeoMoveResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":Stop
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":Stop is a complexType.
///
/// @note class _tptz__Stop operations:
/// - _tptz__Stop* soap_new__tptz__Stop(soap*) allocate and default initialize
/// - _tptz__Stop* soap_new__tptz__Stop(soap*, int num) allocate and default initialize an array
/// - _tptz__Stop* soap_new_req__tptz__Stop(soap*, ...) allocate, set required members
/// - _tptz__Stop* soap_new_set__tptz__Stop(soap*, ...) allocate, set all public members
/// - _tptz__Stop::soap_default(soap*) default initialize members
/// - int soap_read__tptz__Stop(soap*, _tptz__Stop*) deserialize from a stream
/// - int soap_write__tptz__Stop(soap*, _tptz__Stop*) serialize to a stream
/// - _tptz__Stop* _tptz__Stop::soap_dup(soap*) returns deep copy of _tptz__Stop, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__Stop::soap_del() deep deletes _tptz__Stop data members, use only after _tptz__Stop::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__Stop::soap_type() returns SOAP_TYPE__tptz__Stop or derived type identifier
class _tptz__Stop
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile that indicate what should be stopped.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Set true when we want to stop ongoing pan and tilt movements.If PanTilt arguments are not present, this command stops these movements.
/// </BLOCKQUOTE></PRE>
///
/// Element "PanTilt" of type xs:boolean.
    bool*                                PanTilt                        0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Set true when we want to stop ongoing zoom movement.If Zoom arguments are not present, this command stops ongoing zoom movement.
/// </BLOCKQUOTE></PRE>
///
/// Element "Zoom" of type xs:boolean.
    bool*                                Zoom                           0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":StopResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":StopResponse is a complexType.
///
/// @note class _tptz__StopResponse operations:
/// - _tptz__StopResponse* soap_new__tptz__StopResponse(soap*) allocate and default initialize
/// - _tptz__StopResponse* soap_new__tptz__StopResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__StopResponse* soap_new_req__tptz__StopResponse(soap*, ...) allocate, set required members
/// - _tptz__StopResponse* soap_new_set__tptz__StopResponse(soap*, ...) allocate, set all public members
/// - _tptz__StopResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__StopResponse(soap*, _tptz__StopResponse*) deserialize from a stream
/// - int soap_write__tptz__StopResponse(soap*, _tptz__StopResponse*) serialize to a stream
/// - _tptz__StopResponse* _tptz__StopResponse::soap_dup(soap*) returns deep copy of _tptz__StopResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__StopResponse::soap_del() deep deletes _tptz__StopResponse data members, use only after _tptz__StopResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__StopResponse::soap_type() returns SOAP_TYPE__tptz__StopResponse or derived type identifier
class _tptz__StopResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTours is a complexType.
///
/// @note class _tptz__GetPresetTours operations:
/// - _tptz__GetPresetTours* soap_new__tptz__GetPresetTours(soap*) allocate and default initialize
/// - _tptz__GetPresetTours* soap_new__tptz__GetPresetTours(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTours* soap_new_req__tptz__GetPresetTours(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTours* soap_new_set__tptz__GetPresetTours(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTours::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTours(soap*, _tptz__GetPresetTours*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTours(soap*, _tptz__GetPresetTours*) serialize to a stream
/// - _tptz__GetPresetTours* _tptz__GetPresetTours::soap_dup(soap*) returns deep copy of _tptz__GetPresetTours, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTours::soap_del() deep deletes _tptz__GetPresetTours data members, use only after _tptz__GetPresetTours::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTours::soap_type() returns SOAP_TYPE__tptz__GetPresetTours or derived type identifier
class _tptz__GetPresetTours
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetToursResponse is a complexType.
///
/// @note class _tptz__GetPresetToursResponse operations:
/// - _tptz__GetPresetToursResponse* soap_new__tptz__GetPresetToursResponse(soap*) allocate and default initialize
/// - _tptz__GetPresetToursResponse* soap_new__tptz__GetPresetToursResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetToursResponse* soap_new_req__tptz__GetPresetToursResponse(soap*, ...) allocate, set required members
/// - _tptz__GetPresetToursResponse* soap_new_set__tptz__GetPresetToursResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetToursResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetToursResponse(soap*, _tptz__GetPresetToursResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetToursResponse(soap*, _tptz__GetPresetToursResponse*) serialize to a stream
/// - _tptz__GetPresetToursResponse* _tptz__GetPresetToursResponse::soap_dup(soap*) returns deep copy of _tptz__GetPresetToursResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetToursResponse::soap_del() deep deletes _tptz__GetPresetToursResponse data members, use only after _tptz__GetPresetToursResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetToursResponse::soap_type() returns SOAP_TYPE__tptz__GetPresetToursResponse or derived type identifier
class _tptz__GetPresetToursResponse
{ public:
/// Size of array of tt__PresetTour* is 0..unbounded.
  $ int                                  __sizePresetTour               0;
/// Pointer to array tt__PresetTour* of size 0..unbounded.
    tt__PresetTour*                     *PresetTour                     0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTour is a complexType.
///
/// @note class _tptz__GetPresetTour operations:
/// - _tptz__GetPresetTour* soap_new__tptz__GetPresetTour(soap*) allocate and default initialize
/// - _tptz__GetPresetTour* soap_new__tptz__GetPresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTour* soap_new_req__tptz__GetPresetTour(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTour* soap_new_set__tptz__GetPresetTour(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTour(soap*, _tptz__GetPresetTour*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTour(soap*, _tptz__GetPresetTour*) serialize to a stream
/// - _tptz__GetPresetTour* _tptz__GetPresetTour::soap_dup(soap*) returns deep copy of _tptz__GetPresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTour::soap_del() deep deletes _tptz__GetPresetTour data members, use only after _tptz__GetPresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTour::soap_type() returns SOAP_TYPE__tptz__GetPresetTour or derived type identifier
class _tptz__GetPresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourResponse is a complexType.
///
/// @note class _tptz__GetPresetTourResponse operations:
/// - _tptz__GetPresetTourResponse* soap_new__tptz__GetPresetTourResponse(soap*) allocate and default initialize
/// - _tptz__GetPresetTourResponse* soap_new__tptz__GetPresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTourResponse* soap_new_req__tptz__GetPresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTourResponse* soap_new_set__tptz__GetPresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTourResponse(soap*, _tptz__GetPresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTourResponse(soap*, _tptz__GetPresetTourResponse*) serialize to a stream
/// - _tptz__GetPresetTourResponse* _tptz__GetPresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__GetPresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTourResponse::soap_del() deep deletes _tptz__GetPresetTourResponse data members, use only after _tptz__GetPresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTourResponse::soap_type() returns SOAP_TYPE__tptz__GetPresetTourResponse or derived type identifier
class _tptz__GetPresetTourResponse
{ public:
/// Element "PresetTour" of type "http://www.onvif.org/ver10/schema":PresetTour.
    tt__PresetTour*                      PresetTour                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptions is a complexType.
///
/// @note class _tptz__GetPresetTourOptions operations:
/// - _tptz__GetPresetTourOptions* soap_new__tptz__GetPresetTourOptions(soap*) allocate and default initialize
/// - _tptz__GetPresetTourOptions* soap_new__tptz__GetPresetTourOptions(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTourOptions* soap_new_req__tptz__GetPresetTourOptions(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTourOptions* soap_new_set__tptz__GetPresetTourOptions(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTourOptions::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTourOptions(soap*, _tptz__GetPresetTourOptions*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTourOptions(soap*, _tptz__GetPresetTourOptions*) serialize to a stream
/// - _tptz__GetPresetTourOptions* _tptz__GetPresetTourOptions::soap_dup(soap*) returns deep copy of _tptz__GetPresetTourOptions, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTourOptions::soap_del() deep deletes _tptz__GetPresetTourOptions data members, use only after _tptz__GetPresetTourOptions::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTourOptions::soap_type() returns SOAP_TYPE__tptz__GetPresetTourOptions or derived type identifier
class _tptz__GetPresetTourOptions
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                0;	///< Optional element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetPresetTourOptionsResponse is a complexType.
///
/// @note class _tptz__GetPresetTourOptionsResponse operations:
/// - _tptz__GetPresetTourOptionsResponse* soap_new__tptz__GetPresetTourOptionsResponse(soap*) allocate and default initialize
/// - _tptz__GetPresetTourOptionsResponse* soap_new__tptz__GetPresetTourOptionsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetPresetTourOptionsResponse* soap_new_req__tptz__GetPresetTourOptionsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetPresetTourOptionsResponse* soap_new_set__tptz__GetPresetTourOptionsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetPresetTourOptionsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetPresetTourOptionsResponse(soap*, _tptz__GetPresetTourOptionsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetPresetTourOptionsResponse(soap*, _tptz__GetPresetTourOptionsResponse*) serialize to a stream
/// - _tptz__GetPresetTourOptionsResponse* _tptz__GetPresetTourOptionsResponse::soap_dup(soap*) returns deep copy of _tptz__GetPresetTourOptionsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetPresetTourOptionsResponse::soap_del() deep deletes _tptz__GetPresetTourOptionsResponse data members, use only after _tptz__GetPresetTourOptionsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetPresetTourOptionsResponse::soap_type() returns SOAP_TYPE__tptz__GetPresetTourOptionsResponse or derived type identifier
class _tptz__GetPresetTourOptionsResponse
{ public:
/// Element "Options" of type "http://www.onvif.org/ver10/schema":PTZPresetTourOptions.
    tt__PTZPresetTourOptions*            Options                        1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTour is a complexType.
///
/// @note class _tptz__CreatePresetTour operations:
/// - _tptz__CreatePresetTour* soap_new__tptz__CreatePresetTour(soap*) allocate and default initialize
/// - _tptz__CreatePresetTour* soap_new__tptz__CreatePresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__CreatePresetTour* soap_new_req__tptz__CreatePresetTour(soap*, ...) allocate, set required members
/// - _tptz__CreatePresetTour* soap_new_set__tptz__CreatePresetTour(soap*, ...) allocate, set all public members
/// - _tptz__CreatePresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__CreatePresetTour(soap*, _tptz__CreatePresetTour*) deserialize from a stream
/// - int soap_write__tptz__CreatePresetTour(soap*, _tptz__CreatePresetTour*) serialize to a stream
/// - _tptz__CreatePresetTour* _tptz__CreatePresetTour::soap_dup(soap*) returns deep copy of _tptz__CreatePresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__CreatePresetTour::soap_del() deep deletes _tptz__CreatePresetTour data members, use only after _tptz__CreatePresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__CreatePresetTour::soap_type() returns SOAP_TYPE__tptz__CreatePresetTour or derived type identifier
class _tptz__CreatePresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":CreatePresetTourResponse is a complexType.
///
/// @note class _tptz__CreatePresetTourResponse operations:
/// - _tptz__CreatePresetTourResponse* soap_new__tptz__CreatePresetTourResponse(soap*) allocate and default initialize
/// - _tptz__CreatePresetTourResponse* soap_new__tptz__CreatePresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__CreatePresetTourResponse* soap_new_req__tptz__CreatePresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__CreatePresetTourResponse* soap_new_set__tptz__CreatePresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__CreatePresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__CreatePresetTourResponse(soap*, _tptz__CreatePresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__CreatePresetTourResponse(soap*, _tptz__CreatePresetTourResponse*) serialize to a stream
/// - _tptz__CreatePresetTourResponse* _tptz__CreatePresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__CreatePresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__CreatePresetTourResponse::soap_del() deep deletes _tptz__CreatePresetTourResponse data members, use only after _tptz__CreatePresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__CreatePresetTourResponse::soap_type() returns SOAP_TYPE__tptz__CreatePresetTourResponse or derived type identifier
class _tptz__CreatePresetTourResponse
{ public:
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTour is a complexType.
///
/// @note class _tptz__ModifyPresetTour operations:
/// - _tptz__ModifyPresetTour* soap_new__tptz__ModifyPresetTour(soap*) allocate and default initialize
/// - _tptz__ModifyPresetTour* soap_new__tptz__ModifyPresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__ModifyPresetTour* soap_new_req__tptz__ModifyPresetTour(soap*, ...) allocate, set required members
/// - _tptz__ModifyPresetTour* soap_new_set__tptz__ModifyPresetTour(soap*, ...) allocate, set all public members
/// - _tptz__ModifyPresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__ModifyPresetTour(soap*, _tptz__ModifyPresetTour*) deserialize from a stream
/// - int soap_write__tptz__ModifyPresetTour(soap*, _tptz__ModifyPresetTour*) serialize to a stream
/// - _tptz__ModifyPresetTour* _tptz__ModifyPresetTour::soap_dup(soap*) returns deep copy of _tptz__ModifyPresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__ModifyPresetTour::soap_del() deep deletes _tptz__ModifyPresetTour data members, use only after _tptz__ModifyPresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__ModifyPresetTour::soap_type() returns SOAP_TYPE__tptz__ModifyPresetTour or derived type identifier
class _tptz__ModifyPresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTour" of type "http://www.onvif.org/ver10/schema":PresetTour.
    tt__PresetTour*                      PresetTour                     1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":ModifyPresetTourResponse is a complexType.
///
/// @note class _tptz__ModifyPresetTourResponse operations:
/// - _tptz__ModifyPresetTourResponse* soap_new__tptz__ModifyPresetTourResponse(soap*) allocate and default initialize
/// - _tptz__ModifyPresetTourResponse* soap_new__tptz__ModifyPresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__ModifyPresetTourResponse* soap_new_req__tptz__ModifyPresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__ModifyPresetTourResponse* soap_new_set__tptz__ModifyPresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__ModifyPresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__ModifyPresetTourResponse(soap*, _tptz__ModifyPresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__ModifyPresetTourResponse(soap*, _tptz__ModifyPresetTourResponse*) serialize to a stream
/// - _tptz__ModifyPresetTourResponse* _tptz__ModifyPresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__ModifyPresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__ModifyPresetTourResponse::soap_del() deep deletes _tptz__ModifyPresetTourResponse data members, use only after _tptz__ModifyPresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__ModifyPresetTourResponse::soap_type() returns SOAP_TYPE__tptz__ModifyPresetTourResponse or derived type identifier
class _tptz__ModifyPresetTourResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTour is a complexType.
///
/// @note class _tptz__OperatePresetTour operations:
/// - _tptz__OperatePresetTour* soap_new__tptz__OperatePresetTour(soap*) allocate and default initialize
/// - _tptz__OperatePresetTour* soap_new__tptz__OperatePresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__OperatePresetTour* soap_new_req__tptz__OperatePresetTour(soap*, ...) allocate, set required members
/// - _tptz__OperatePresetTour* soap_new_set__tptz__OperatePresetTour(soap*, ...) allocate, set all public members
/// - _tptz__OperatePresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__OperatePresetTour(soap*, _tptz__OperatePresetTour*) deserialize from a stream
/// - int soap_write__tptz__OperatePresetTour(soap*, _tptz__OperatePresetTour*) serialize to a stream
/// - _tptz__OperatePresetTour* _tptz__OperatePresetTour::soap_dup(soap*) returns deep copy of _tptz__OperatePresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__OperatePresetTour::soap_del() deep deletes _tptz__OperatePresetTour data members, use only after _tptz__OperatePresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__OperatePresetTour::soap_type() returns SOAP_TYPE__tptz__OperatePresetTour or derived type identifier
class _tptz__OperatePresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Element "Operation" of type "http://www.onvif.org/ver10/schema":PTZPresetTourOperation.
    enum tt__PTZPresetTourOperation      Operation                      1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":OperatePresetTourResponse is a complexType.
///
/// @note class _tptz__OperatePresetTourResponse operations:
/// - _tptz__OperatePresetTourResponse* soap_new__tptz__OperatePresetTourResponse(soap*) allocate and default initialize
/// - _tptz__OperatePresetTourResponse* soap_new__tptz__OperatePresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__OperatePresetTourResponse* soap_new_req__tptz__OperatePresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__OperatePresetTourResponse* soap_new_set__tptz__OperatePresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__OperatePresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__OperatePresetTourResponse(soap*, _tptz__OperatePresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__OperatePresetTourResponse(soap*, _tptz__OperatePresetTourResponse*) serialize to a stream
/// - _tptz__OperatePresetTourResponse* _tptz__OperatePresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__OperatePresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__OperatePresetTourResponse::soap_del() deep deletes _tptz__OperatePresetTourResponse data members, use only after _tptz__OperatePresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__OperatePresetTourResponse::soap_type() returns SOAP_TYPE__tptz__OperatePresetTourResponse or derived type identifier
class _tptz__OperatePresetTourResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTour is a complexType.
///
/// @note class _tptz__RemovePresetTour operations:
/// - _tptz__RemovePresetTour* soap_new__tptz__RemovePresetTour(soap*) allocate and default initialize
/// - _tptz__RemovePresetTour* soap_new__tptz__RemovePresetTour(soap*, int num) allocate and default initialize an array
/// - _tptz__RemovePresetTour* soap_new_req__tptz__RemovePresetTour(soap*, ...) allocate, set required members
/// - _tptz__RemovePresetTour* soap_new_set__tptz__RemovePresetTour(soap*, ...) allocate, set all public members
/// - _tptz__RemovePresetTour::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RemovePresetTour(soap*, _tptz__RemovePresetTour*) deserialize from a stream
/// - int soap_write__tptz__RemovePresetTour(soap*, _tptz__RemovePresetTour*) serialize to a stream
/// - _tptz__RemovePresetTour* _tptz__RemovePresetTour::soap_dup(soap*) returns deep copy of _tptz__RemovePresetTour, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RemovePresetTour::soap_del() deep deletes _tptz__RemovePresetTour data members, use only after _tptz__RemovePresetTour::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RemovePresetTour::soap_type() returns SOAP_TYPE__tptz__RemovePresetTour or derived type identifier
class _tptz__RemovePresetTour
{ public:
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Element "PresetTourToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetTourToken                1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":RemovePresetTourResponse is a complexType.
///
/// @note class _tptz__RemovePresetTourResponse operations:
/// - _tptz__RemovePresetTourResponse* soap_new__tptz__RemovePresetTourResponse(soap*) allocate and default initialize
/// - _tptz__RemovePresetTourResponse* soap_new__tptz__RemovePresetTourResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__RemovePresetTourResponse* soap_new_req__tptz__RemovePresetTourResponse(soap*, ...) allocate, set required members
/// - _tptz__RemovePresetTourResponse* soap_new_set__tptz__RemovePresetTourResponse(soap*, ...) allocate, set all public members
/// - _tptz__RemovePresetTourResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__RemovePresetTourResponse(soap*, _tptz__RemovePresetTourResponse*) deserialize from a stream
/// - int soap_write__tptz__RemovePresetTourResponse(soap*, _tptz__RemovePresetTourResponse*) serialize to a stream
/// - _tptz__RemovePresetTourResponse* _tptz__RemovePresetTourResponse::soap_dup(soap*) returns deep copy of _tptz__RemovePresetTourResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__RemovePresetTourResponse::soap_del() deep deletes _tptz__RemovePresetTourResponse data members, use only after _tptz__RemovePresetTourResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__RemovePresetTourResponse::soap_type() returns SOAP_TYPE__tptz__RemovePresetTourResponse or derived type identifier
class _tptz__RemovePresetTourResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurations is a complexType.
///
/// @note class _tptz__GetCompatibleConfigurations operations:
/// - _tptz__GetCompatibleConfigurations* soap_new__tptz__GetCompatibleConfigurations(soap*) allocate and default initialize
/// - _tptz__GetCompatibleConfigurations* soap_new__tptz__GetCompatibleConfigurations(soap*, int num) allocate and default initialize an array
/// - _tptz__GetCompatibleConfigurations* soap_new_req__tptz__GetCompatibleConfigurations(soap*, ...) allocate, set required members
/// - _tptz__GetCompatibleConfigurations* soap_new_set__tptz__GetCompatibleConfigurations(soap*, ...) allocate, set all public members
/// - _tptz__GetCompatibleConfigurations::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetCompatibleConfigurations(soap*, _tptz__GetCompatibleConfigurations*) deserialize from a stream
/// - int soap_write__tptz__GetCompatibleConfigurations(soap*, _tptz__GetCompatibleConfigurations*) serialize to a stream
/// - _tptz__GetCompatibleConfigurations* _tptz__GetCompatibleConfigurations::soap_dup(soap*) returns deep copy of _tptz__GetCompatibleConfigurations, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetCompatibleConfigurations::soap_del() deep deletes _tptz__GetCompatibleConfigurations data members, use only after _tptz__GetCompatibleConfigurations::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetCompatibleConfigurations::soap_type() returns SOAP_TYPE__tptz__GetCompatibleConfigurations or derived type identifier
class _tptz__GetCompatibleConfigurations
{ public:
/// <PRE><BLOCKQUOTE>
///   Contains the token of an existing media profile the configurations shall be compatible with.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":GetCompatibleConfigurationsResponse is a complexType.
///
/// @note class _tptz__GetCompatibleConfigurationsResponse operations:
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new__tptz__GetCompatibleConfigurationsResponse(soap*) allocate and default initialize
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new__tptz__GetCompatibleConfigurationsResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new_req__tptz__GetCompatibleConfigurationsResponse(soap*, ...) allocate, set required members
/// - _tptz__GetCompatibleConfigurationsResponse* soap_new_set__tptz__GetCompatibleConfigurationsResponse(soap*, ...) allocate, set all public members
/// - _tptz__GetCompatibleConfigurationsResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__GetCompatibleConfigurationsResponse(soap*, _tptz__GetCompatibleConfigurationsResponse*) deserialize from a stream
/// - int soap_write__tptz__GetCompatibleConfigurationsResponse(soap*, _tptz__GetCompatibleConfigurationsResponse*) serialize to a stream
/// - _tptz__GetCompatibleConfigurationsResponse* _tptz__GetCompatibleConfigurationsResponse::soap_dup(soap*) returns deep copy of _tptz__GetCompatibleConfigurationsResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__GetCompatibleConfigurationsResponse::soap_del() deep deletes _tptz__GetCompatibleConfigurationsResponse data members, use only after _tptz__GetCompatibleConfigurationsResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__GetCompatibleConfigurationsResponse::soap_type() returns SOAP_TYPE__tptz__GetCompatibleConfigurationsResponse or derived type identifier
class _tptz__GetCompatibleConfigurationsResponse
{ public:
/// <PRE><BLOCKQUOTE>
///   A list of all existing PTZConfigurations on the NVT that is suitable to be added to the addressed media profile.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__PTZConfiguration* is 0..unbounded.
  $ int                                  __sizePTZConfiguration         0;
/// Pointer to array tt__PTZConfiguration* of size 0..unbounded.
    tt__PTZConfiguration*               *PTZConfiguration               0;	///< Multiple elements.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":MoveAndStartTracking
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":MoveAndStartTracking is a complexType.
///
/// @note class _tptz__MoveAndStartTracking operations:
/// - _tptz__MoveAndStartTracking* soap_new__tptz__MoveAndStartTracking(soap*) allocate and default initialize
/// - _tptz__MoveAndStartTracking* soap_new__tptz__MoveAndStartTracking(soap*, int num) allocate and default initialize an array
/// - _tptz__MoveAndStartTracking* soap_new_req__tptz__MoveAndStartTracking(soap*, ...) allocate, set required members
/// - _tptz__MoveAndStartTracking* soap_new_set__tptz__MoveAndStartTracking(soap*, ...) allocate, set all public members
/// - _tptz__MoveAndStartTracking::soap_default(soap*) default initialize members
/// - int soap_read__tptz__MoveAndStartTracking(soap*, _tptz__MoveAndStartTracking*) deserialize from a stream
/// - int soap_write__tptz__MoveAndStartTracking(soap*, _tptz__MoveAndStartTracking*) serialize to a stream
/// - _tptz__MoveAndStartTracking* _tptz__MoveAndStartTracking::soap_dup(soap*) returns deep copy of _tptz__MoveAndStartTracking, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__MoveAndStartTracking::soap_del() deep deletes _tptz__MoveAndStartTracking data members, use only after _tptz__MoveAndStartTracking::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__MoveAndStartTracking::soap_type() returns SOAP_TYPE__tptz__MoveAndStartTracking or derived type identifier
class _tptz__MoveAndStartTracking
{ public:
/// <PRE><BLOCKQUOTE>
///   A reference to the MediaProfile where the operation should take place.
/// </BLOCKQUOTE></PRE>
///
/// Element "ProfileToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   ProfileToken                   1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   A preset token.
/// </BLOCKQUOTE></PRE>
///
/// Element "PresetToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   PresetToken                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   The geolocation of the target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "GeoLocation" of type "http://www.onvif.org/ver10/schema":GeoLocation.
    tt__GeoLocation*                     GeoLocation                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   A Position vector specifying the absolute target position.
/// </BLOCKQUOTE></PRE>
///
/// Element "TargetPosition" of type "http://www.onvif.org/ver10/schema":PTZVector.
    tt__PTZVector*                       TargetPosition                 0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Speed vector specifying the velocity of pan, tilt and zoom.
/// </BLOCKQUOTE></PRE>
///
/// Element "Speed" of type "http://www.onvif.org/ver10/schema":PTZSpeed.
    tt__PTZSpeed*                        Speed                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Object ID of the object to track.
/// </BLOCKQUOTE></PRE>
///
/// Element "ObjectID" of type xs:integer.
    xsd__integer                         ObjectID                       0;	///< Optional element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief Top-level root element "http://www.onvif.org/ver20/ptz/wsdl":MoveAndStartTrackingResponse
/// @brief "http://www.onvif.org/ver20/ptz/wsdl":MoveAndStartTrackingResponse is a complexType.
///
/// @note class _tptz__MoveAndStartTrackingResponse operations:
/// - _tptz__MoveAndStartTrackingResponse* soap_new__tptz__MoveAndStartTrackingResponse(soap*) allocate and default initialize
/// - _tptz__MoveAndStartTrackingResponse* soap_new__tptz__MoveAndStartTrackingResponse(soap*, int num) allocate and default initialize an array
/// - _tptz__MoveAndStartTrackingResponse* soap_new_req__tptz__MoveAndStartTrackingResponse(soap*, ...) allocate, set required members
/// - _tptz__MoveAndStartTrackingResponse* soap_new_set__tptz__MoveAndStartTrackingResponse(soap*, ...) allocate, set all public members
/// - _tptz__MoveAndStartTrackingResponse::soap_default(soap*) default initialize members
/// - int soap_read__tptz__MoveAndStartTrackingResponse(soap*, _tptz__MoveAndStartTrackingResponse*) deserialize from a stream
/// - int soap_write__tptz__MoveAndStartTrackingResponse(soap*, _tptz__MoveAndStartTrackingResponse*) serialize to a stream
/// - _tptz__MoveAndStartTrackingResponse* _tptz__MoveAndStartTrackingResponse::soap_dup(soap*) returns deep copy of _tptz__MoveAndStartTrackingResponse, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - _tptz__MoveAndStartTrackingResponse::soap_del() deep deletes _tptz__MoveAndStartTrackingResponse data members, use only after _tptz__MoveAndStartTrackingResponse::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int _tptz__MoveAndStartTrackingResponse::soap_type() returns SOAP_TYPE__tptz__MoveAndStartTrackingResponse or derived type identifier
class _tptz__MoveAndStartTrackingResponse
{ public:
/// Pointer to soap context that manages this instance.
    struct soap                         *soap                          ;
};

/// @brief "http://www.onvif.org/ver10/device/wsdl":StorageConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// @note class tds__StorageConfiguration operations:
/// - tds__StorageConfiguration* soap_new_tds__StorageConfiguration(soap*) allocate and default initialize
/// - tds__StorageConfiguration* soap_new_tds__StorageConfiguration(soap*, int num) allocate and default initialize an array
/// - tds__StorageConfiguration* soap_new_req_tds__StorageConfiguration(soap*, ...) allocate, set required members
/// - tds__StorageConfiguration* soap_new_set_tds__StorageConfiguration(soap*, ...) allocate, set all public members
/// - tds__StorageConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tds__StorageConfiguration(soap*, tds__StorageConfiguration*) deserialize from a stream
/// - int soap_write_tds__StorageConfiguration(soap*, tds__StorageConfiguration*) serialize to a stream
/// - tds__StorageConfiguration* tds__StorageConfiguration::soap_dup(soap*) returns deep copy of tds__StorageConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tds__StorageConfiguration::soap_del() deep deletes tds__StorageConfiguration data members, use only after tds__StorageConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tds__StorageConfiguration::soap_type() returns SOAP_TYPE_tds__StorageConfiguration or derived type identifier
class tds__StorageConfiguration : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// Element "Data" of type "http://www.onvif.org/ver10/device/wsdl":StorageConfigurationData.
    tds__StorageConfigurationData*       Data                           1;	///< Required element.
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSource is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical video input.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__VideoSource operations:
/// - tt__VideoSource* soap_new_tt__VideoSource(soap*) allocate and default initialize
/// - tt__VideoSource* soap_new_tt__VideoSource(soap*, int num) allocate and default initialize an array
/// - tt__VideoSource* soap_new_req_tt__VideoSource(soap*, ...) allocate, set required members
/// - tt__VideoSource* soap_new_set_tt__VideoSource(soap*, ...) allocate, set all public members
/// - tt__VideoSource::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSource(soap*, tt__VideoSource*) deserialize from a stream
/// - int soap_write_tt__VideoSource(soap*, tt__VideoSource*) serialize to a stream
/// - tt__VideoSource* tt__VideoSource::soap_dup(soap*) returns deep copy of tt__VideoSource, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSource::soap_del() deep deletes tt__VideoSource data members, use only after tt__VideoSource::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSource::soap_type() returns SOAP_TYPE_tt__VideoSource or derived type identifier
class tt__VideoSource : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   Frame rate in frames per second.
/// </BLOCKQUOTE></PRE>
///
/// Element "Framerate" of type xs:float.
    float                                Framerate                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Horizontal and vertical resolution
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional configuration of the image sensor.
/// </BLOCKQUOTE></PRE>
///
/// Element "Imaging" of type "http://www.onvif.org/ver10/schema":ImagingSettings.
    tt__ImagingSettings*                 Imaging                        0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceExtension.
    tt__VideoSourceExtension*            Extension                      0;	///< Optional element.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioSource is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio input.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__AudioSource operations:
/// - tt__AudioSource* soap_new_tt__AudioSource(soap*) allocate and default initialize
/// - tt__AudioSource* soap_new_tt__AudioSource(soap*, int num) allocate and default initialize an array
/// - tt__AudioSource* soap_new_req_tt__AudioSource(soap*, ...) allocate, set required members
/// - tt__AudioSource* soap_new_set_tt__AudioSource(soap*, ...) allocate, set all public members
/// - tt__AudioSource::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioSource(soap*, tt__AudioSource*) deserialize from a stream
/// - int soap_write_tt__AudioSource(soap*, tt__AudioSource*) serialize to a stream
/// - tt__AudioSource* tt__AudioSource::soap_dup(soap*) returns deep copy of tt__AudioSource, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioSource::soap_del() deep deletes tt__AudioSource data members, use only after tt__AudioSource::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioSource::soap_type() returns SOAP_TYPE_tt__AudioSource or derived type identifier
class tt__AudioSource : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <PRE><BLOCKQUOTE>
///   number of available audio channels. (1: mono, 2: stereo)
/// </BLOCKQUOTE></PRE>
///
/// Element "Channels" of type xs:int.
    int                                  Channels                       1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoSourceConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__VideoSourceConfiguration operations:
/// - tt__VideoSourceConfiguration* soap_new_tt__VideoSourceConfiguration(soap*) allocate and default initialize
/// - tt__VideoSourceConfiguration* soap_new_tt__VideoSourceConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__VideoSourceConfiguration* soap_new_req_tt__VideoSourceConfiguration(soap*, ...) allocate, set required members
/// - tt__VideoSourceConfiguration* soap_new_set_tt__VideoSourceConfiguration(soap*, ...) allocate, set all public members
/// - tt__VideoSourceConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoSourceConfiguration(soap*, tt__VideoSourceConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoSourceConfiguration(soap*, tt__VideoSourceConfiguration*) serialize to a stream
/// - tt__VideoSourceConfiguration* tt__VideoSourceConfiguration::soap_dup(soap*) returns deep copy of tt__VideoSourceConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoSourceConfiguration::soap_del() deep deletes tt__VideoSourceConfiguration data members, use only after tt__VideoSourceConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoSourceConfiguration::soap_type() returns SOAP_TYPE_tt__VideoSourceConfiguration or derived type identifier
class tt__VideoSourceConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Reference to the physical input.
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Rectangle specifying the Video capturing area. The capturing area shall not be larger than the whole Video source area.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bounds" of type "http://www.onvif.org/ver10/schema":IntRectangle.
    tt__IntRectangle*                    Bounds                         1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":VideoSourceConfigurationExtension.
    tt__VideoSourceConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Readonly parameter signalling Source configuration's view mode, for devices supporting different view modes as defined in tt:viewModes.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ViewMode" of type xs:string.
  @ char*                                ViewMode                       0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":VideoEncoderConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__VideoEncoderConfiguration operations:
/// - tt__VideoEncoderConfiguration* soap_new_tt__VideoEncoderConfiguration(soap*) allocate and default initialize
/// - tt__VideoEncoderConfiguration* soap_new_tt__VideoEncoderConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__VideoEncoderConfiguration* soap_new_req_tt__VideoEncoderConfiguration(soap*, ...) allocate, set required members
/// - tt__VideoEncoderConfiguration* soap_new_set_tt__VideoEncoderConfiguration(soap*, ...) allocate, set all public members
/// - tt__VideoEncoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoEncoderConfiguration(soap*, tt__VideoEncoderConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoEncoderConfiguration(soap*, tt__VideoEncoderConfiguration*) serialize to a stream
/// - tt__VideoEncoderConfiguration* tt__VideoEncoderConfiguration::soap_dup(soap*) returns deep copy of tt__VideoEncoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoEncoderConfiguration::soap_del() deep deletes tt__VideoEncoderConfiguration data members, use only after tt__VideoEncoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoEncoderConfiguration::soap_type() returns SOAP_TYPE_tt__VideoEncoderConfiguration or derived type identifier
class tt__VideoEncoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Used video codec, either Jpeg, H.264 or Mpeg4
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type "http://www.onvif.org/ver10/schema":VideoEncoding.
    enum tt__VideoEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Configured video resolution
/// </BLOCKQUOTE></PRE>
///
/// Element "Resolution" of type "http://www.onvif.org/ver10/schema":VideoResolution.
    tt__VideoResolution*                 Resolution                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Relative value for the video quantizers and the quality of the video. A high value within supported quality range means higher quality
/// </BLOCKQUOTE></PRE>
///
/// Element "Quality" of type xs:float.
    float                                Quality                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure rate control related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "RateControl" of type "http://www.onvif.org/ver10/schema":VideoRateControl.
    tt__VideoRateControl*                RateControl                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure Mpeg4 related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "MPEG4" of type "http://www.onvif.org/ver10/schema":Mpeg4Configuration.
    tt__Mpeg4Configuration*              MPEG4                          0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure H.264 related parameters.
/// </BLOCKQUOTE></PRE>
///
/// Element "H264" of type "http://www.onvif.org/ver10/schema":H264Configuration.
    tt__H264Configuration*               H264                           0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related video stream
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   A value of true indicates that frame rate is a fixed value rather than an upper limit,
///   and that the video encoder shall prioritize frame rate over all other adaptable
///   configuration values such as bitrate. Default is false.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GuaranteedFrameRate" of type xs:boolean.
  @ bool*                                GuaranteedFrameRate            0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":JpegOptions2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":JpegOptions.
///
/// @note class tt__JpegOptions2 operations:
/// - tt__JpegOptions2* soap_new_tt__JpegOptions2(soap*) allocate and default initialize
/// - tt__JpegOptions2* soap_new_tt__JpegOptions2(soap*, int num) allocate and default initialize an array
/// - tt__JpegOptions2* soap_new_req_tt__JpegOptions2(soap*, ...) allocate, set required members
/// - tt__JpegOptions2* soap_new_set_tt__JpegOptions2(soap*, ...) allocate, set all public members
/// - tt__JpegOptions2::soap_default(soap*) default initialize members
/// - int soap_read_tt__JpegOptions2(soap*, tt__JpegOptions2*) deserialize from a stream
/// - int soap_write_tt__JpegOptions2(soap*, tt__JpegOptions2*) serialize to a stream
/// - tt__JpegOptions2* tt__JpegOptions2::soap_dup(soap*) returns deep copy of tt__JpegOptions2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__JpegOptions2::soap_del() deep deletes tt__JpegOptions2 data members, use only after tt__JpegOptions2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__JpegOptions2::soap_type() returns SOAP_TYPE_tt__JpegOptions2 or derived type identifier
class tt__JpegOptions2 : public tt__JpegOptions
{ public:
/*  INHERITED FROM tt__JpegOptions:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of size 1..unbounded.
    tt__VideoResolution*                *ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
    END OF INHERITED FROM tt__JpegOptions */
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":Mpeg4Options2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":Mpeg4Options.
///
/// @note class tt__Mpeg4Options2 operations:
/// - tt__Mpeg4Options2* soap_new_tt__Mpeg4Options2(soap*) allocate and default initialize
/// - tt__Mpeg4Options2* soap_new_tt__Mpeg4Options2(soap*, int num) allocate and default initialize an array
/// - tt__Mpeg4Options2* soap_new_req_tt__Mpeg4Options2(soap*, ...) allocate, set required members
/// - tt__Mpeg4Options2* soap_new_set_tt__Mpeg4Options2(soap*, ...) allocate, set all public members
/// - tt__Mpeg4Options2::soap_default(soap*) default initialize members
/// - int soap_read_tt__Mpeg4Options2(soap*, tt__Mpeg4Options2*) deserialize from a stream
/// - int soap_write_tt__Mpeg4Options2(soap*, tt__Mpeg4Options2*) serialize to a stream
/// - tt__Mpeg4Options2* tt__Mpeg4Options2::soap_dup(soap*) returns deep copy of tt__Mpeg4Options2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__Mpeg4Options2::soap_del() deep deletes tt__Mpeg4Options2 data members, use only after tt__Mpeg4Options2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__Mpeg4Options2::soap_type() returns SOAP_TYPE_tt__Mpeg4Options2 or derived type identifier
class tt__Mpeg4Options2 : public tt__Mpeg4Options
{ public:
/*  INHERITED FROM tt__Mpeg4Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of size 1..unbounded.
    tt__VideoResolution*                *ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported MPEG-4 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__Mpeg4Profile is 1..unbounded.
  $ int                                  __sizeMpeg4ProfilesSupported   1;
/// Pointer to array enum tt__Mpeg4Profile of size 1..unbounded.
    enum tt__Mpeg4Profile               *Mpeg4ProfilesSupported         1;	///< Multiple elements.
    END OF INHERITED FROM tt__Mpeg4Options */
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":H264Options2 is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":H264Options.
///
/// @note class tt__H264Options2 operations:
/// - tt__H264Options2* soap_new_tt__H264Options2(soap*) allocate and default initialize
/// - tt__H264Options2* soap_new_tt__H264Options2(soap*, int num) allocate and default initialize an array
/// - tt__H264Options2* soap_new_req_tt__H264Options2(soap*, ...) allocate, set required members
/// - tt__H264Options2* soap_new_set_tt__H264Options2(soap*, ...) allocate, set all public members
/// - tt__H264Options2::soap_default(soap*) default initialize members
/// - int soap_read_tt__H264Options2(soap*, tt__H264Options2*) deserialize from a stream
/// - int soap_write_tt__H264Options2(soap*, tt__H264Options2*) serialize to a stream
/// - tt__H264Options2* tt__H264Options2::soap_dup(soap*) returns deep copy of tt__H264Options2, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__H264Options2::soap_del() deep deletes tt__H264Options2 data members, use only after tt__H264Options2::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__H264Options2::soap_type() returns SOAP_TYPE_tt__H264Options2 or derived type identifier
class tt__H264Options2 : public tt__H264Options
{ public:
/*  INHERITED FROM tt__H264Options:
/// <PRE><BLOCKQUOTE>
///   List of supported image sizes.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of tt__VideoResolution* is 1..unbounded.
  $ int                                  __sizeResolutionsAvailable     1;
/// Pointer to array tt__VideoResolution* of size 1..unbounded.
    tt__VideoResolution*                *ResolutionsAvailable           1;	///< Multiple elements.
/// <PRE><BLOCKQUOTE>
///   Supported group of Video frames length. This value typically corresponds to the I-Frame distance.
/// </BLOCKQUOTE></PRE>
///
/// Element "GovLengthRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        GovLengthRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported frame rate in fps (frames per second).
/// </BLOCKQUOTE></PRE>
///
/// Element "FrameRateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        FrameRateRange                 1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Supported encoding interval range. The encoding interval corresponds to the number of frames devided by the encoded frames. An encoding interval value of "1" means that all frames are encoded.
/// </BLOCKQUOTE></PRE>
///
/// Element "EncodingIntervalRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        EncodingIntervalRange          1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   List of supported H.264 profiles.
/// </BLOCKQUOTE></PRE>
///
/// Size of array of enum tt__H264Profile is 1..unbounded.
  $ int                                  __sizeH264ProfilesSupported    1;
/// Pointer to array enum tt__H264Profile of size 1..unbounded.
    enum tt__H264Profile                *H264ProfilesSupported          1;	///< Multiple elements.
    END OF INHERITED FROM tt__H264Options */
/// <PRE><BLOCKQUOTE>
///   Supported range of encoded bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "BitrateRange" of type "http://www.onvif.org/ver10/schema":IntRange.
    tt__IntRange*                        BitrateRange                   1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoEncoder2Configuration is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":AudioSourceConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__AudioSourceConfiguration operations:
/// - tt__AudioSourceConfiguration* soap_new_tt__AudioSourceConfiguration(soap*) allocate and default initialize
/// - tt__AudioSourceConfiguration* soap_new_tt__AudioSourceConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__AudioSourceConfiguration* soap_new_req_tt__AudioSourceConfiguration(soap*, ...) allocate, set required members
/// - tt__AudioSourceConfiguration* soap_new_set_tt__AudioSourceConfiguration(soap*, ...) allocate, set all public members
/// - tt__AudioSourceConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioSourceConfiguration(soap*, tt__AudioSourceConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioSourceConfiguration(soap*, tt__AudioSourceConfiguration*) serialize to a stream
/// - tt__AudioSourceConfiguration* tt__AudioSourceConfiguration::soap_dup(soap*) returns deep copy of tt__AudioSourceConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioSourceConfiguration::soap_del() deep deletes tt__AudioSourceConfiguration data members, use only after tt__AudioSourceConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioSourceConfiguration::soap_type() returns SOAP_TYPE_tt__AudioSourceConfiguration or derived type identifier
class tt__AudioSourceConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Token of the Audio Source the configuration applies to
/// </BLOCKQUOTE></PRE>
///
/// Element "SourceToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   SourceToken                    1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioEncoderConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__AudioEncoderConfiguration operations:
/// - tt__AudioEncoderConfiguration* soap_new_tt__AudioEncoderConfiguration(soap*) allocate and default initialize
/// - tt__AudioEncoderConfiguration* soap_new_tt__AudioEncoderConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__AudioEncoderConfiguration* soap_new_req_tt__AudioEncoderConfiguration(soap*, ...) allocate, set required members
/// - tt__AudioEncoderConfiguration* soap_new_set_tt__AudioEncoderConfiguration(soap*, ...) allocate, set all public members
/// - tt__AudioEncoderConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioEncoderConfiguration(soap*, tt__AudioEncoderConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioEncoderConfiguration(soap*, tt__AudioEncoderConfiguration*) serialize to a stream
/// - tt__AudioEncoderConfiguration* tt__AudioEncoderConfiguration::soap_dup(soap*) returns deep copy of tt__AudioEncoderConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioEncoderConfiguration::soap_del() deep deletes tt__AudioEncoderConfiguration data members, use only after tt__AudioEncoderConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioEncoderConfiguration::soap_type() returns SOAP_TYPE_tt__AudioEncoderConfiguration or derived type identifier
class tt__AudioEncoderConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Audio codec used for encoding the audio input (either G.711, G.726 or AAC)
/// </BLOCKQUOTE></PRE>
///
/// Element "Encoding" of type "http://www.onvif.org/ver10/schema":AudioEncoding.
    enum tt__AudioEncoding               Encoding                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output bitrate in kbps.
/// </BLOCKQUOTE></PRE>
///
/// Element "Bitrate" of type xs:int.
    int                                  Bitrate                        1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The output sample rate in kHz.
/// </BLOCKQUOTE></PRE>
///
/// Element "SampleRate" of type xs:int.
    int                                  SampleRate                     1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":AudioEncoder2Configuration is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":VideoAnalyticsConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__VideoAnalyticsConfiguration operations:
/// - tt__VideoAnalyticsConfiguration* soap_new_tt__VideoAnalyticsConfiguration(soap*) allocate and default initialize
/// - tt__VideoAnalyticsConfiguration* soap_new_tt__VideoAnalyticsConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__VideoAnalyticsConfiguration* soap_new_req_tt__VideoAnalyticsConfiguration(soap*, ...) allocate, set required members
/// - tt__VideoAnalyticsConfiguration* soap_new_set_tt__VideoAnalyticsConfiguration(soap*, ...) allocate, set all public members
/// - tt__VideoAnalyticsConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__VideoAnalyticsConfiguration(soap*, tt__VideoAnalyticsConfiguration*) deserialize from a stream
/// - int soap_write_tt__VideoAnalyticsConfiguration(soap*, tt__VideoAnalyticsConfiguration*) serialize to a stream
/// - tt__VideoAnalyticsConfiguration* tt__VideoAnalyticsConfiguration::soap_dup(soap*) returns deep copy of tt__VideoAnalyticsConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__VideoAnalyticsConfiguration::soap_del() deep deletes tt__VideoAnalyticsConfiguration data members, use only after tt__VideoAnalyticsConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__VideoAnalyticsConfiguration::soap_type() returns SOAP_TYPE_tt__VideoAnalyticsConfiguration or derived type identifier
class tt__VideoAnalyticsConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// Element "AnalyticsEngineConfiguration" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    tt__AnalyticsEngineConfiguration*    AnalyticsEngineConfiguration   1;	///< Required element.
/// Element "RuleEngineConfiguration" of type "http://www.onvif.org/ver10/schema":RuleEngineConfiguration.
    tt__RuleEngineConfiguration*         RuleEngineConfiguration        1;	///< Required element.
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":MetadataConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__MetadataConfiguration operations:
/// - tt__MetadataConfiguration* soap_new_tt__MetadataConfiguration(soap*) allocate and default initialize
/// - tt__MetadataConfiguration* soap_new_tt__MetadataConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__MetadataConfiguration* soap_new_req_tt__MetadataConfiguration(soap*, ...) allocate, set required members
/// - tt__MetadataConfiguration* soap_new_set_tt__MetadataConfiguration(soap*, ...) allocate, set all public members
/// - tt__MetadataConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__MetadataConfiguration(soap*, tt__MetadataConfiguration*) deserialize from a stream
/// - int soap_write_tt__MetadataConfiguration(soap*, tt__MetadataConfiguration*) serialize to a stream
/// - tt__MetadataConfiguration* tt__MetadataConfiguration::soap_dup(soap*) returns deep copy of tt__MetadataConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__MetadataConfiguration::soap_del() deep deletes tt__MetadataConfiguration data members, use only after tt__MetadataConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__MetadataConfiguration::soap_type() returns SOAP_TYPE_tt__MetadataConfiguration or derived type identifier
class tt__MetadataConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   optional element to configure which PTZ related data is to include in the metadata stream
/// </BLOCKQUOTE></PRE>
///
/// Element "PTZStatus" of type "http://www.onvif.org/ver10/schema":PTZFilter.
    tt__PTZFilter*                       PTZStatus                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional element to configure the streaming of events. A client might be interested in receiving all, none or some of the events produced by the device:<ul>
///   <li>To get all events: Include the Events element but do not include a filter.</li>
///   <li>To get no events: Do not include the Events element.</li>
///   <li>To get only some events: Include the Events element and include a filter in the element.</li>
///   </ul>
/// </BLOCKQUOTE></PRE>
///
/// Element "Events" of type "http://www.onvif.org/ver10/schema":EventSubscription.
    tt__EventSubscription*               Events                         0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines whether the streamed metadata will include metadata from the analytics engines (video, cell motion, audio etc.)
/// </BLOCKQUOTE></PRE>
///
/// Element "Analytics" of type xs:boolean.
    bool*                                Analytics                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Defines the multicast settings that could be used for video streaming.
/// </BLOCKQUOTE></PRE>
///
/// Element "Multicast" of type "http://www.onvif.org/ver10/schema":MulticastConfiguration.
    tt__MulticastConfiguration*          Multicast                      1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   The rtsp session timeout for the related audio stream (when using Media2 Service, this value is deprecated and ignored)
/// </BLOCKQUOTE></PRE>
///
/// Element "SessionTimeout" of type xs:duration.
    xsd__duration                        SessionTimeout                 1;	///< Required element.
/// <any namespace="##other" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <PRE><BLOCKQUOTE>
///   Indication which AnalyticsModules shall output metadata.
///   Note that the streaming behavior is undefined if the list includes items that are not part of the associated AnalyticsConfiguration.
/// </BLOCKQUOTE></PRE>
///
/// Element "AnalyticsEngineConfiguration" of type "http://www.onvif.org/ver10/schema":AnalyticsEngineConfiguration.
    tt__AnalyticsEngineConfiguration*    AnalyticsEngineConfiguration   0;	///< Optional element.
/// Element "Extension" of type "http://www.onvif.org/ver10/schema":MetadataConfigurationExtension.
    tt__MetadataConfigurationExtension*  Extension                      0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure compression type of Metadata payload. Use values from enumeration MetadataCompressionType.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "CompressionType" of type xs:string.
  @ char*                                CompressionType                0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure if the metadata stream shall contain the Geo Location coordinates of each target.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "GeoLocation" of type xs:boolean.
  @ bool*                                GeoLocation                    0;	///< Optional attribute.
/// <PRE><BLOCKQUOTE>
///   Optional parameter to configure if the generated metadata stream should contain shape information as polygon.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "ShapePolygon" of type xs:boolean.
  @ bool*                                ShapePolygon                   0;	///< Optional attribute.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutput is not used and was removed

// Optimization: complexType "http://www.onvif.org/ver10/schema":VideoOutputConfiguration is not used and was removed

/// @brief "http://www.onvif.org/ver10/schema":AudioOutput is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":DeviceEntity.
///
/// <PRE><BLOCKQUOTE>
///   Representation of a physical audio outputs.
/// </BLOCKQUOTE></PRE>
///
/// @note class tt__AudioOutput operations:
/// - tt__AudioOutput* soap_new_tt__AudioOutput(soap*) allocate and default initialize
/// - tt__AudioOutput* soap_new_tt__AudioOutput(soap*, int num) allocate and default initialize an array
/// - tt__AudioOutput* soap_new_req_tt__AudioOutput(soap*, ...) allocate, set required members
/// - tt__AudioOutput* soap_new_set_tt__AudioOutput(soap*, ...) allocate, set all public members
/// - tt__AudioOutput::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioOutput(soap*, tt__AudioOutput*) deserialize from a stream
/// - int soap_write_tt__AudioOutput(soap*, tt__AudioOutput*) serialize to a stream
/// - tt__AudioOutput* tt__AudioOutput::soap_dup(soap*) returns deep copy of tt__AudioOutput, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioOutput::soap_del() deep deletes tt__AudioOutput data members, use only after tt__AudioOutput::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioOutput::soap_type() returns SOAP_TYPE_tt__AudioOutput or derived type identifier
class tt__AudioOutput : public tt__DeviceEntity
{ public:
/*  INHERITED FROM tt__DeviceEntity:
/// <PRE><BLOCKQUOTE>
///   Unique identifier referencing the physical entity.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__DeviceEntity */
/// <any namespace="##any" minOccurs="0" maxOccurs="unbounded">
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this element.
///       Use wsdl2h option -d for xsd__anyType DOM (soap_dom_element):
///       wsdl2h maps xsd:any to xsd__anyType, use typemap.dat to remap.
/// <anyAttribute namespace="##any">.
/// @note Schema extensibility is user-definable.
///       Consult the protocol documentation to change or insert declarations.
///       Use wsdl2h option -x to remove this attribute.
///       Use wsdl2h option -d for xsd__anyAttribute DOM (soap_dom_attribute).
};

/// @brief "http://www.onvif.org/ver10/schema":AudioOutputConfiguration is a complexType with complexContent extension of type "http://www.onvif.org/ver10/schema":ConfigurationEntity.
///
/// @note class tt__AudioOutputConfiguration operations:
/// - tt__AudioOutputConfiguration* soap_new_tt__AudioOutputConfiguration(soap*) allocate and default initialize
/// - tt__AudioOutputConfiguration* soap_new_tt__AudioOutputConfiguration(soap*, int num) allocate and default initialize an array
/// - tt__AudioOutputConfiguration* soap_new_req_tt__AudioOutputConfiguration(soap*, ...) allocate, set required members
/// - tt__AudioOutputConfiguration* soap_new_set_tt__AudioOutputConfiguration(soap*, ...) allocate, set all public members
/// - tt__AudioOutputConfiguration::soap_default(soap*) default initialize members
/// - int soap_read_tt__AudioOutputConfiguration(soap*, tt__AudioOutputConfiguration*) deserialize from a stream
/// - int soap_write_tt__AudioOutputConfiguration(soap*, tt__AudioOutputConfiguration*) serialize to a stream
/// - tt__AudioOutputConfiguration* tt__AudioOutputConfiguration::soap_dup(soap*) returns deep copy of tt__AudioOutputConfiguration, copies the (cyclic) graph structure when a context is provided, or (cycle-pruned) tree structure with soap_set_mode(soap, SOAP_XML_TREE) (use soapcpp2 -Ec)
/// - tt__AudioOutputConfiguration::soap_del() deep deletes tt__AudioOutputConfiguration data members, use only after tt__AudioOutputConfiguration::soap_dup(NULL) (use soapcpp2 -Ed)
/// - int tt__AudioOutputConfiguration::soap_type() returns SOAP_TYPE_tt__AudioOutputConfiguration or derived type identifier
class tt__AudioOutputConfiguration : public tt__ConfigurationEntity
{ public:
/*  INHERITED FROM tt__ConfigurationEntity:
/// <PRE><BLOCKQUOTE>
///   User readable name. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Element "Name" of type "http://www.onvif.org/ver10/schema":Name.
    tt__Name                             Name                           1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Number of internal references currently using this configuration. <p style='margin:0'>This informational parameter is read-only. Deprecated for Media2 Service.</p>
/// </BLOCKQUOTE></PRE>
///
/// Element "UseCount" of type xs:int.
    int                                  UseCount                       1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   Token that uniquely references this configuration. Length up to 64 characters.
/// </BLOCKQUOTE></PRE>
///
/// Attribute "token" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
  @ tt__ReferenceToken                   token                          1;	///< Required attribute.
    END OF INHERITED FROM tt__ConfigurationEntity */
/// <PRE><BLOCKQUOTE>
///   Token of the phsycial Audio output.
/// </BLOCKQUOTE></PRE>
///
/// Element "OutputToken" of type "http://www.onvif.org/ver10/schema":ReferenceToken.
    tt__ReferenceToken                   OutputToken                    1;	///< Required element.
/// <PRE><BLOCKQUOTE>
///   An audio channel MAY support different types of audio transmission. While for full duplex
///   operation no special handling is required, in half duplex operation the transmission direction
///   needs to be switched.
///   The optional SendPrimacy parameter inside the AudioOutputConfiguration indicates which
///   direction is currently active. An NVC can switch between different modes by setting the
///   AudioOutputConfiguration.<br/>
///   The following modes for the Send-Primacy are defined:<ul>
///   <li>www.onvif.org/ver20/HalfDuplex/Server
///   The server is allowed to send audio data to the client. The client shall not send
///   audio data via the backchannel to the NVT in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Client
///   The client is allowed to send audio data via the backchannel to the server. The
///   NVT shall not send audio data to the client in this mode.</li>
///   <li>www.onvif.org/ver20/HalfDuplex/Auto
///   It is up to the device how to deal with sending and receiving audio data.</li>
///   </ul>
///   Acoustic echo cancellation is out of ONVIF scope.
/// </BLOCKQUOTE></PRE>
///
/// Element "SendPrimacy" of type xs:anyURI.
    xsd__anyURI                          SendPrimacy                    0;	///< Optional element.
/// <PRE><BLOCKQUOTE>
///   Volume setting of the output. The applicable range is defined via the option AudioOutputOptions.Outp