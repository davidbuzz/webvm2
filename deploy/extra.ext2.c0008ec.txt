 and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field type="int16_t" name="param_index">Parameter index. Send -1 to use the param ID field as identifier (else the param id will be ignored)</field>
    </message>
    <message id="21" name="PARAM_REQUEST_LIST">
      <description>Request all parameters of this component. After this request, all parameters are emitted.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
    </message>
    <message id="22" name="PARAM_VALUE">
      <description>Emit the value of a onboard parameter. The inclusion of param_count and param_index in the message allows the recipient to keep track of received parameters and allows him to re-request missing parameters after a loss or timeout.</description>
      <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field type="float" name="param_value">Onboard parameter value</field>
      <field type="uint8_t" name="param_type" enum="MAV_PARAM_TYPE">Onboard parameter type: see the MAV_PARAM_TYPE enum for supported data types.</field>
      <field type="uint16_t" name="param_count">Total number of onboard parameters</field>
      <field type="uint16_t" name="param_index">Index of this onboard parameter</field>
    </message>
    <message id="23" name="PARAM_SET">
      <description>Set a parameter value TEMPORARILY to RAM. It will be reset to default on system reboot. Send the ACTION MAV_ACTION_STORAGE_WRITE to PERMANENTLY write the RAM contents to EEPROM. IMPORTANT: The receiving component should acknowledge the new parameter value by sending a param_value message to all communication partners. This will also ensure that multiple GCS all have an up-to-date list of all parameters. If the sending GCS did not receive a PARAM_VALUE message within its timeout time, it should re-send the PARAM_SET message.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field type="float" name="param_value">Onboard parameter value</field>
      <field type="uint8_t" name="param_type" enum="MAV_PARAM_TYPE">Onboard parameter type: see the MAV_PARAM_TYPE enum for supported data types.</field>
    </message>
    <message id="24" name="GPS_RAW_INT">
      <description>The global position, as returned by the Global Positioning System (GPS). This is
                NOT the global position estimate of the system, but rather a RAW sensor value. See message GLOBAL_POSITION for the global position estimate. Coordinate frame is right-handed, Z-axis up (GPS frame).</description>
      <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field type="uint8_t" name="fix_type" enum="GPS_FIX_TYPE">See the GPS_FIX_TYPE enum.</field>
      <field type="int32_t" name="lat">Latitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="lon">Longitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="alt">Altitude (AMSL, NOT WGS84), in meters * 1000 (positive for up). Note that virtually all GPS modules provide the AMSL altitude in addition to the WGS84 altitude.</field>
      <field type="uint16_t" name="eph">GPS HDOP horizontal dilution of position (unitless). If unknown, set to: UINT16_MAX</field>
      <field type="uint16_t" name="epv">GPS VDOP vertical dilution of position (unitless). If unknown, set to: UINT16_MAX</field>
      <field type="uint16_t" name="vel">GPS ground speed (m/s * 100). If unknown, set to: UINT16_MAX</field>
      <field type="uint16_t" name="cog">Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX</field>
      <field type="uint8_t" name="satellites_visible">Number of satellites visible. If unknown, set to 255</field>
    </message>
    <message id="25" name="GPS_STATUS">
      <description>The positioning status, as reported by GPS. This message is intended to display status information about each satellite visible to the receiver. See message GLOBAL_POSITION for the global position estimate. This message can contain information for up to 20 satellites.</description>
      <field type="uint8_t" name="satellites_visible">Number of satellites visible</field>
      <field type="uint8_t[20]" name="satellite_prn">Global satellite ID</field>
      <field type="uint8_t[20]" name="satellite_used">0: Satellite not used, 1: used for localization</field>
      <field type="uint8_t[20]" name="satellite_elevation">Elevation (0: right on top of receiver, 90: on the horizon) of satellite</field>
      <field type="uint8_t[20]" name="satellite_azimuth">Direction of satellite, 0: 0 deg, 255: 360 deg.</field>
      <field type="uint8_t[20]" name="satellite_snr">Signal to noise ratio of satellite</field>
    </message>
    <message id="26" name="SCALED_IMU">
      <description>The RAW IMU readings for the usual 9DOF sensor setup. This message should contain the scaled values to the described units</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="int16_t" name="xacc">X acceleration (mg)</field>
      <field type="int16_t" name="yacc">Y acceleration (mg)</field>
      <field type="int16_t" name="zacc">Z acceleration (mg)</field>
      <field type="int16_t" name="xgyro">Angular speed around X axis (millirad /sec)</field>
      <field type="int16_t" name="ygyro">Angular speed around Y axis (millirad /sec)</field>
      <field type="int16_t" name="zgyro">Angular speed around Z axis (millirad /sec)</field>
      <field type="int16_t" name="xmag">X Magnetic field (milli tesla)</field>
      <field type="int16_t" name="ymag">Y Magnetic field (milli tesla)</field>
      <field type="int16_t" name="zmag">Z Magnetic field (milli tesla)</field>
    </message>
    <message id="27" name="RAW_IMU">
      <description>The RAW IMU readings for the usual 9DOF sensor setup. This message should always contain the true raw values without any scaling to allow data capture and system debugging.</description>
      <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field type="int16_t" name="xacc">X acceleration (raw)</field>
      <field type="int16_t" name="yacc">Y acceleration (raw)</field>
      <field type="int16_t" name="zacc">Z acceleration (raw)</field>
      <field type="int16_t" name="xgyro">Angular speed around X axis (raw)</field>
      <field type="int16_t" name="ygyro">Angular speed around Y axis (raw)</field>
      <field type="int16_t" name="zgyro">Angular speed around Z axis (raw)</field>
      <field type="int16_t" name="xmag">X Magnetic field (raw)</field>
      <field type="int16_t" name="ymag">Y Magnetic field (raw)</field>
      <field type="int16_t" name="zmag">Z Magnetic field (raw)</field>
    </message>
    <message id="28" name="RAW_PRESSURE">
      <description>The RAW pressure readings for the typical setup of one absolute pressure and one differential pressure sensor. The sensor values should be the raw, UNSCALED ADC values.</description>
      <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field type="int16_t" name="press_abs">Absolute pressure (raw)</field>
      <field type="int16_t" name="press_diff1">Differential pressure 1 (raw, 0 if nonexistent)</field>
      <field type="int16_t" name="press_diff2">Differential pressure 2 (raw, 0 if nonexistent)</field>
      <field type="int16_t" name="temperature">Raw Temperature measurement (raw)</field>
    </message>
    <message id="29" name="SCALED_PRESSURE">
      <description>The pressure readings for the typical setup of one absolute and differential pressure sensor. The units are as specified in each field.</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="float" name="press_abs">Absolute pressure (hectopascal)</field>
      <field type="float" name="press_diff">Differential pressure 1 (hectopascal)</field>
      <field type="int16_t" name="temperature">Temperature measurement (0.01 degrees celsius)</field>
    </message>
    <message id="30" name="ATTITUDE">
      <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right).</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="float" name="roll">Roll angle (rad, -pi..+pi)</field>
      <field type="float" name="pitch">Pitch angle (rad, -pi..+pi)</field>
      <field type="float" name="yaw">Yaw angle (rad, -pi..+pi)</field>
      <field type="float" name="rollspeed">Roll angular speed (rad/s)</field>
      <field type="float" name="pitchspeed">Pitch angular speed (rad/s)</field>
      <field type="float" name="yawspeed">Yaw angular speed (rad/s)</field>
    </message>
    <message id="31" name="ATTITUDE_QUATERNION">
      <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right), expressed as quaternion. Quaternion order is w, x, y, z and a zero rotation would be expressed as (1 0 0 0).</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="float" name="q1">Quaternion component 1, w (1 in null-rotation)</field>
      <field type="float" name="q2">Quaternion component 2, x (0 in null-rotation)</field>
      <field type="float" name="q3">Quaternion component 3, y (0 in null-rotation)</field>
      <field type="float" name="q4">Quaternion component 4, z (0 in null-rotation)</field>
      <field type="float" name="rollspeed">Roll angular speed (rad/s)</field>
      <field type="float" name="pitchspeed">Pitch angular speed (rad/s)</field>
      <field type="float" name="yawspeed">Yaw angular speed (rad/s)</field>
    </message>
    <message id="32" name="LOCAL_POSITION_NED">
      <description>The filtered local position (e.g. fused computer vision and accelerometers). Coordinate frame is right-handed, Z-axis down (aeronautical frame, NED / north-east-down convention)</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="float" name="x">X Position</field>
      <field type="float" name="y">Y Position</field>
      <field type="float" name="z">Z Position</field>
      <field type="float" name="vx">X Speed</field>
      <field type="float" name="vy">Y Speed</field>
      <field type="float" name="vz">Z Speed</field>
    </message>
    <message id="33" name="GLOBAL_POSITION_INT">
      <description>The filtered global position (e.g. fused GPS and accelerometers). The position is in GPS-frame (right-handed, Z-up). It
               is designed as scaled integer message since the resolution of float is not sufficient.</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="int32_t" name="lat">Latitude, expressed as degrees * 1E7</field>
      <field type="int32_t" name="lon">Longitude, expressed as degrees * 1E7</field>
      <field type="int32_t" name="alt">Altitude in meters, expressed as * 1000 (millimeters), AMSL (not WGS84 - note that virtually all GPS modules provide the AMSL as well)</field>
      <field type="int32_t" name="relative_alt">Altitude above ground in meters, expressed as * 1000 (millimeters)</field>
      <field type="int16_t" name="vx">Ground X Speed (Latitude, positive north), expressed as m/s * 100</field>
      <field type="int16_t" name="vy">Ground Y Speed (Longitude, positive east), expressed as m/s * 100</field>
      <field type="int16_t" name="vz">Ground Z Speed (Altitude, positive down), expressed as m/s * 100</field>
      <field type="uint16_t" name="hdg">Vehicle heading (yaw angle) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX</field>
    </message>
    <message id="34" name="RC_CHANNELS_SCALED">
      <description>The scaled values of the RC channels received. (-100%) -10000, (0%) 0, (100%) 10000. Channels that are inactive should be set to UINT16_MAX.</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="uint8_t" name="port">Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows for more than 8 servos.</field>
      <field type="int16_t" name="chan1_scaled">RC channel 1 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field type="int16_t" name="chan2_scaled">RC channel 2 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field type="int16_t" name="chan3_scaled">RC channel 3 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field type="int16_t" name="chan4_scaled">RC channel 4 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field type="int16_t" name="chan5_scaled">RC channel 5 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field type="int16_t" name="chan6_scaled">RC channel 6 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field type="int16_t" name="chan7_scaled">RC channel 7 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field type="int16_t" name="chan8_scaled">RC channel 8 value scaled, (-100%) -10000, (0%) 0, (100%) 10000, (invalid) INT16_MAX.</field>
      <field type="uint8_t" name="rssi">Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.</field>
    </message>
    <message id="35" name="RC_CHANNELS_RAW">
      <description>The RAW values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="uint8_t" name="port">Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows for more than 8 servos.</field>
      <field type="uint16_t" name="chan1_raw">RC channel 1 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan2_raw">RC channel 2 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan3_raw">RC channel 3 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan4_raw">RC channel 4 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan5_raw">RC channel 5 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan6_raw">RC channel 6 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan7_raw">RC channel 7 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan8_raw">RC channel 8 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint8_t" name="rssi">Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.</field>
    </message>
    <message id="36" name="SERVO_OUTPUT_RAW">
      <description>The RAW values of the servo outputs (for RC input from the remote, use the RC_CHANNELS messages). The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%.</description>
      <field type="uint32_t" name="time_usec">Timestamp (microseconds since system boot)</field>
      <field type="uint8_t" name="port">Servo output port (set of 8 outputs = 1 port). Most MAVs will just use one, but this allows to encode more than 8 servos.</field>
      <field type="uint16_t" name="servo1_raw">Servo output 1 value, in microseconds</field>
      <field type="uint16_t" name="servo2_raw">Servo output 2 value, in microseconds</field>
      <field type="uint16_t" name="servo3_raw">Servo output 3 value, in microseconds</field>
      <field type="uint16_t" name="servo4_raw">Servo output 4 value, in microseconds</field>
      <field type="uint16_t" name="servo5_raw">Servo output 5 value, in microseconds</field>
      <field type="uint16_t" name="servo6_raw">Servo output 6 value, in microseconds</field>
      <field type="uint16_t" name="servo7_raw">Servo output 7 value, in microseconds</field>
      <field type="uint16_t" name="servo8_raw">Servo output 8 value, in microseconds</field>
      <extensions/>
      <field type="uint16_t" name="servo9_raw">Servo output 9 value, in microseconds</field>
      <field type="uint16_t" name="servo10_raw">Servo output 10 value, in microseconds</field>
      <field type="uint16_t" name="servo11_raw">Servo output 11 value, in microseconds</field>
      <field type="uint16_t" name="servo12_raw">Servo output 12 value, in microseconds</field>
      <field type="uint16_t" name="servo13_raw">Servo output 13 value, in microseconds</field>
      <field type="uint16_t" name="servo14_raw">Servo output 14 value, in microseconds</field>
      <field type="uint16_t" name="servo15_raw">Servo output 15 value, in microseconds</field>
      <field type="uint16_t" name="servo16_raw">Servo output 16 value, in microseconds</field>
    </message>
    <message id="37" name="MISSION_REQUEST_PARTIAL_LIST">
      <description>Request a partial list of mission items from the system/component. https://mavlink.io/en/services/mission.html . If start and end index are the same, just send one waypoint.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="int16_t" name="start_index">Start index, 0 by default</field>
      <field type="int16_t" name="end_index">End index, -1 by default (-1: send list to end). Else a valid index of the list</field>
    </message>
    <message id="38" name="MISSION_WRITE_PARTIAL_LIST">
      <description>This message is sent to the MAV to write a partial list. If start index == end index, only one item will be transmitted / updated. If the start index is NOT 0 and above the current list size, this request should be REJECTED!</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="int16_t" name="start_index">Start index, 0 by default and smaller / equal to the largest index of the current onboard list.</field>
      <field type="int16_t" name="end_index">End index, equal or greater than start index.</field>
    </message>
    <message id="39" name="MISSION_ITEM">
      <description>Message encoding a mission item. This message is emitted to announce
                the presence of a mission item and to set a mission item on the system. The mission item can be either in x, y, z meters (type: LOCAL) or x:lat, y:lon, z:altitude. Local frame is Z-down, right handed (NED), global frame is Z-up, right handed (ENU). See also https://mavlink.io/en/services/mission.html .</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="seq">Sequence</field>
      <field type="uint8_t" name="frame">The coordinate system of the MISSION. see MAV_FRAME in mavlink_types.h</field>
      <field type="uint16_t" name="command">The scheduled action for the MISSION. see MAV_CMD in common.xml MAVLink specs</field>
      <field type="uint8_t" name="current">false:0, true:1</field>
      <field type="uint8_t" name="autocontinue">autocontinue to next wp</field>
      <field type="float" name="param1">PARAM1, see MAV_CMD enum</field>
      <field type="float" name="param2">PARAM2, see MAV_CMD enum</field>
      <field type="float" name="param3">PARAM3, see MAV_CMD enum</field>
      <field type="float" name="param4">PARAM4, see MAV_CMD enum</field>
      <field type="float" name="x">PARAM5 / local: x position, global: latitude</field>
      <field type="float" name="y">PARAM6 / y position: global: longitude</field>
      <field type="float" name="z">PARAM7 / z position: global: altitude (relative or absolute, depending on frame.</field>
    </message>
    <message id="40" name="MISSION_REQUEST">
      <description>Request the information of the mission item with the sequence number seq. The response of the system to this message should be a MISSION_ITEM message. https://mavlink.io/en/services/mission.html</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="seq">Sequence</field>
    </message>
    <message id="41" name="MISSION_SET_CURRENT">
      <description>Set the mission item with sequence number seq as current item. This means that the MAV will continue to this mission item on the shortest path (not following the mission items in-between).</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="seq">Sequence</field>
    </message>
    <message id="42" name="MISSION_CURRENT">
      <description>Message that announces the sequence number of the current active mission item. The MAV will fly towards this mission item.</description>
      <field type="uint16_t" name="seq">Sequence</field>
    </message>
    <message id="43" name="MISSION_REQUEST_LIST">
      <description>Request the overall list of mission items from the system/component.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
    </message>
    <message id="44" name="MISSION_COUNT">
      <description>This message is emitted as response to MISSION_REQUEST_LIST by the MAV and to initiate a write transaction. The GCS can then request the individual mission item based on the knowledge of the total number of MISSIONs.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="count">Number of mission items in the sequence</field>
    </message>
    <message id="45" name="MISSION_CLEAR_ALL">
      <description>Delete all mission items at once.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
    </message>
    <message id="46" name="MISSION_ITEM_REACHED">
      <description>A certain mission item has been reached. The system will either hold this position (or circle on the orbit) or (if the autocontinue on the WP was set) continue to the next MISSION.</description>
      <field type="uint16_t" name="seq">Sequence</field>
    </message>
    <message id="47" name="MISSION_ACK">
      <description>Ack message during MISSION handling. The type field states if this message is a positive ack (type=0) or if an error happened (type=non-zero).</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint8_t" name="type" enum="MAV_MISSION_RESULT">See MAV_MISSION_RESULT enum</field>
    </message>
    <message id="48" name="SET_GPS_GLOBAL_ORIGIN">
      <description>As local waypoints exist, the global MISSION reference allows to transform between the local coordinate frame and the global (GPS) coordinate frame. This can be necessary when e.g. in- and outdoor settings are connected and the MAV should move from in- to outdoor.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="int32_t" name="latitude">Latitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="longitude">Longitude (WGS84, in degrees * 1E7</field>
      <field type="int32_t" name="altitude">Altitude (AMSL), in meters * 1000 (positive for up)</field>
    </message>
    <message id="49" name="GPS_GLOBAL_ORIGIN">
      <description>Once the MAV sets a new GPS-Local correspondence, this message announces the origin (0,0,0) position</description>
      <field type="int32_t" name="latitude">Latitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="longitude">Longitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="altitude">Altitude (AMSL), in meters * 1000 (positive for up)</field>
    </message>
    <message id="50" name="PARAM_MAP_RC">
      <description>Bind a RC channel to a parameter. The parameter should change according to the RC channel value.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="char[16]" name="param_id">Onboard parameter id, terminated by NULL if the length is less than 16 human-readable chars and WITHOUT null termination (NULL) byte if the length is exactly 16 chars - applications have to provide 16+1 bytes storage if the ID is stored as string</field>
      <field type="int16_t" name="param_index">Parameter index. Send -1 to use the param ID field as identifier (else the param id will be ignored), send -2 to disable any existing map for this rc_channel_index.</field>
      <field type="uint8_t" name="parameter_rc_channel_index">Index of parameter RC channel. Not equal to the RC channel id. Typically correpsonds to a potentiometer-knob on the RC.</field>
      <field type="float" name="param_value0">Initial parameter value</field>
      <field type="float" name="scale">Scale, maps the RC range [-1, 1] to a parameter value</field>
      <field type="float" name="param_value_min">Minimum param value. The protocol does not define if this overwrites an onboard minimum value. (Depends on implementation)</field>
      <field type="float" name="param_value_max">Maximum param value. The protocol does not define if this overwrites an onboard maximum value. (Depends on implementation)</field>
    </message>
    <message id="51" name="MISSION_REQUEST_INT">
      <description>Request the information of the mission item with the sequence number seq. The response of the system to this message should be a MISSION_ITEM_INT message. https://mavlink.io/en/services/mission.html</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="seq">Sequence</field>
    </message>
    <message id="54" name="SAFETY_SET_ALLOWED_AREA">
      <description>Set a safety zone (volume), which is defined by two corners of a cube. This message can be used to tell the MAV which setpoints/MISSIONs to accept and which to reject. Safety areas are often enforced by national or competition regulations.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint8_t" name="frame" enum="MAV_FRAME">Coordinate frame, as defined by MAV_FRAME enum in mavlink_types.h. Can be either global, GPS, right-handed with Z axis up or local, right handed, Z axis down.</field>
      <field type="float" name="p1x">x position 1 / Latitude 1</field>
      <field type="float" name="p1y">y position 1 / Longitude 1</field>
      <field type="float" name="p1z">z position 1 / Altitude 1</field>
      <field type="float" name="p2x">x position 2 / Latitude 2</field>
      <field type="float" name="p2y">y position 2 / Longitude 2</field>
      <field type="float" name="p2z">z position 2 / Altitude 2</field>
    </message>
    <message id="55" name="SAFETY_ALLOWED_AREA">
      <description>Read out the safety zone the MAV currently assumes.</description>
      <field type="uint8_t" name="frame" enum="MAV_FRAME">Coordinate frame, as defined by MAV_FRAME enum in mavlink_types.h. Can be either global, GPS, right-handed with Z axis up or local, right handed, Z axis down.</field>
      <field type="float" name="p1x">x position 1 / Latitude 1</field>
      <field type="float" name="p1y">y position 1 / Longitude 1</field>
      <field type="float" name="p1z">z position 1 / Altitude 1</field>
      <field type="float" name="p2x">x position 2 / Latitude 2</field>
      <field type="float" name="p2y">y position 2 / Longitude 2</field>
      <field type="float" name="p2z">z position 2 / Altitude 2</field>
    </message>
    <message id="61" name="ATTITUDE_QUATERNION_COV">
      <description>The attitude in the aeronautical frame (right-handed, Z-down, X-front, Y-right), expressed as quaternion. Quaternion order is w, x, y, z and a zero rotation would be expressed as (1 0 0 0).</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="float[4]" name="q">Quaternion components, w, x, y, z (1 0 0 0 is the null-rotation)</field>
      <field type="float" name="rollspeed">Roll angular speed (rad/s)</field>
      <field type="float" name="pitchspeed">Pitch angular speed (rad/s)</field>
      <field type="float" name="yawspeed">Yaw angular speed (rad/s)</field>
      <field type="float[9]" name="covariance">Attitude covariance</field>
    </message>
    <message id="62" name="NAV_CONTROLLER_OUTPUT">
      <description>The state of the fixed wing navigation and position controller.</description>
      <field type="float" name="nav_roll">Current desired roll in degrees</field>
      <field type="float" name="nav_pitch">Current desired pitch in degrees</field>
      <field type="int16_t" name="nav_bearing">Current desired heading in degrees</field>
      <field type="int16_t" name="target_bearing">Bearing to current MISSION/target in degrees</field>
      <field type="uint16_t" name="wp_dist">Distance to active MISSION in meters</field>
      <field type="float" name="alt_error">Current altitude error in meters</field>
      <field type="float" name="aspd_error">Current airspeed error in meters/second</field>
      <field type="float" name="xtrack_error">Current crosstrack error on x-y plane in meters</field>
    </message>
    <message id="63" name="GLOBAL_POSITION_INT_COV">
      <description>The filtered global position (e.g. fused GPS and accelerometers). The position is in GPS-frame (right-handed, Z-up). It  is designed as scaled integer message since the resolution of float is not sufficient. NOTE: This message is intended for onboard networks / companion computers and higher-bandwidth links and optimized for accuracy and completeness. Please use the GLOBAL_POSITION_INT message for a minimal subset.</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="uint64_t" name="time_utc">Timestamp (microseconds since UNIX epoch) in UTC. 0 for unknown. Commonly filled by the precision time source of a GPS receiver.</field>
      <field type="uint8_t" name="estimator_type" enum="MAV_ESTIMATOR_TYPE">Class id of the estimator this estimate originated from.</field>
      <field type="int32_t" name="lat">Latitude, expressed as degrees * 1E7</field>
      <field type="int32_t" name="lon">Longitude, expressed as degrees * 1E7</field>
      <field type="int32_t" name="alt">Altitude in meters, expressed as * 1000 (millimeters), above MSL</field>
      <field type="int32_t" name="relative_alt">Altitude above ground in meters, expressed as * 1000 (millimeters)</field>
      <field type="float" name="vx">Ground X Speed (Latitude), expressed as m/s</field>
      <field type="float" name="vy">Ground Y Speed (Longitude), expressed as m/s</field>
      <field type="float" name="vz">Ground Z Speed (Altitude), expressed as m/s</field>
      <field type="float[36]" name="covariance">Covariance matrix (first six entries are the first ROW, next six entries are the second row, etc.)</field>
    </message>
    <message id="64" name="LOCAL_POSITION_NED_COV">
      <description>The filtered local position (e.g. fused computer vision and accelerometers). Coordinate frame is right-handed, Z-axis down (aeronautical frame, NED / north-east-down convention)</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot). 0 for system without monotonic timestamp</field>
      <field type="uint64_t" name="time_utc">Timestamp (microseconds since UNIX epoch) in UTC. 0 for unknown. Commonly filled by the precision time source of a GPS receiver.</field>
      <field type="uint8_t" name="estimator_type" enum="MAV_ESTIMATOR_TYPE">Class id of the estimator this estimate originated from.</field>
      <field type="float" name="x">X Position</field>
      <field type="float" name="y">Y Position</field>
      <field type="float" name="z">Z Position</field>
      <field type="float" name="vx">X Speed (m/s)</field>
      <field type="float" name="vy">Y Speed (m/s)</field>
      <field type="float" name="vz">Z Speed (m/s)</field>
      <field type="float" name="ax">X Acceleration (m/s^2)</field>
      <field type="float" name="ay">Y Acceleration (m/s^2)</field>
      <field type="float" name="az">Z Acceleration (m/s^2)</field>
      <field type="float[45]" name="covariance">Covariance matrix upper right triangular (first nine entries are the first ROW, next eight entries are the second row, etc.)</field>
    </message>
    <message id="65" name="RC_CHANNELS">
      <description>The PPM values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="uint8_t" name="chancount">Total number of RC channels being received. This can be larger than 18, indicating that more channels are available but not given in this message. This value should be 0 when no RC channels are available.</field>
      <field type="uint16_t" name="chan1_raw">RC channel 1 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan2_raw">RC channel 2 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan3_raw">RC channel 3 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan4_raw">RC channel 4 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan5_raw">RC channel 5 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan6_raw">RC channel 6 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan7_raw">RC channel 7 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan8_raw">RC channel 8 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan9_raw">RC channel 9 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan10_raw">RC channel 10 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan11_raw">RC channel 11 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan12_raw">RC channel 12 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan13_raw">RC channel 13 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan14_raw">RC channel 14 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan15_raw">RC channel 15 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan16_raw">RC channel 16 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan17_raw">RC channel 17 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint16_t" name="chan18_raw">RC channel 18 value, in microseconds. A value of UINT16_MAX implies the channel is unused.</field>
      <field type="uint8_t" name="rssi">Receive signal strength indicator, 0: 0%, 100: 100%, 255: invalid/unknown.</field>
    </message>
    <message id="66" name="REQUEST_DATA_STREAM">
      <description>THIS INTERFACE IS DEPRECATED. USE SET_MESSAGE_INTERVAL INSTEAD.</description>
      <field type="uint8_t" name="target_system">The target requested to send the message stream.</field>
      <field type="uint8_t" name="target_component">The target requested to send the message stream.</field>
      <field type="uint8_t" name="req_stream_id">The ID of the requested data stream</field>
      <field type="uint16_t" name="req_message_rate">The requested message rate</field>
      <field type="uint8_t" name="start_stop">1 to start sending, 0 to stop sending.</field>
    </message>
    <message id="67" name="DATA_STREAM">
      <description>THIS INTERFACE IS DEPRECATED. USE MESSAGE_INTERVAL INSTEAD.</description>
      <field type="uint8_t" name="stream_id">The ID of the requested data stream</field>
      <field type="uint16_t" name="message_rate">The message rate</field>
      <field type="uint8_t" name="on_off">1 stream is enabled, 0 stream is stopped.</field>
    </message>
    <message id="69" name="MANUAL_CONTROL">
      <description>This message provides an API for manually controlling the vehicle using standard joystick axes nomenclature, along with a joystick-like input device. Unused axes can be disabled an buttons are also transmit as boolean values of their </description>
      <field type="uint8_t" name="target">The system to be controlled.</field>
      <field type="int16_t" name="x">X-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to forward(1000)-backward(-1000) movement on a joystick and the pitch of a vehicle.</field>
      <field type="int16_t" name="y">Y-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to left(-1000)-right(1000) movement on a joystick and the roll of a vehicle.</field>
      <field type="int16_t" name="z">Z-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to a separate slider movement with maximum being 1000 and minimum being -1000 on a joystick and the thrust of a vehicle. Positive values are positive thrust, negative values are negative thrust.</field>
      <field type="int16_t" name="r">R-axis, normalized to the range [-1000,1000]. A value of INT16_MAX indicates that this axis is invalid. Generally corresponds to a twisting of the joystick, with counter-clockwise being 1000 and clockwise being -1000, and the yaw of a vehicle.</field>
      <field type="uint16_t" name="buttons">A bitfield corresponding to the joystick buttons' current state, 1 for pressed, 0 for released. The lowest bit corresponds to Button 1.</field>
    </message>
    <message id="70" name="RC_CHANNELS_OVERRIDE">
      <description>The RAW values of the RC channels sent to the MAV to override info received from the RC radio. A value of UINT16_MAX means no change to that channel. A value of 0 means control of that channel should be released back to the RC radio. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="chan1_raw">RC channel 1 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field type="uint16_t" name="chan2_raw">RC channel 2 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field type="uint16_t" name="chan3_raw">RC channel 3 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field type="uint16_t" name="chan4_raw">RC channel 4 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field type="uint16_t" name="chan5_raw">RC channel 5 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field type="uint16_t" name="chan6_raw">RC channel 6 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field type="uint16_t" name="chan7_raw">RC channel 7 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
      <field type="uint16_t" name="chan8_raw">RC channel 8 value, in microseconds. A value of UINT16_MAX means to ignore this field.</field>
    </message>
    <message id="73" name="MISSION_ITEM_INT">
      <description>Message encoding a mission item. This message is emitted to announce
                the presence of a mission item and to set a mission item on the system. The mission item can be either in x, y, z meters (type: LOCAL) or x:lat, y:lon, z:altitude. Local frame is Z-down, right handed (NED), global frame is Z-up, right handed (ENU). See also https://mavlink.io/en/services/mission.html .</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="seq">Waypoint ID (sequence number). Starts at zero. Increases monotonically for each waypoint, no gaps in the sequence (0,1,2,3,4).</field>
      <field type="uint8_t" name="frame">The coordinate system of the MISSION. see MAV_FRAME in mavlink_types.h</field>
      <field type="uint16_t" name="command">The scheduled action for the MISSION. see MAV_CMD in common.xml MAVLink specs</field>
      <field type="uint8_t" name="current">false:0, true:1</field>
      <field type="uint8_t" name="autocontinue">autocontinue to next wp</field>
      <field type="float" name="param1">PARAM1, see MAV_CMD enum</field>
      <field type="float" name="param2">PARAM2, see MAV_CMD enum</field>
      <field type="float" name="param3">PARAM3, see MAV_CMD enum</field>
      <field type="float" name="param4">PARAM4, see MAV_CMD enum</field>
      <field type="int32_t" name="x">PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7</field>
      <field type="int32_t" name="y">PARAM6 / y position: local: x position in meters * 1e4, global: longitude in degrees *10^7</field>
      <field type="float" name="z">PARAM7 / z position: global: altitude in meters (relative or absolute, depending on frame.</field>
    </message>
    <message id="74" name="VFR_HUD">
      <description>Metrics typically displayed on a HUD for fixed wing aircraft</description>
      <field type="float" name="airspeed">Current airspeed in m/s</field>
      <field type="float" name="groundspeed">Current ground speed in m/s</field>
      <field type="int16_t" name="heading">Current heading in degrees, in compass units (0..360, 0=north)</field>
      <field type="uint16_t" name="throttle">Current throttle setting in integer percent, 0 to 100</field>
      <field type="float" name="alt">Current altitude (MSL), in meters</field>
      <field type="float" name="climb">Current climb rate in meters/second</field>
    </message>
    <message id="75" name="COMMAND_INT">
      <description>Message encoding a command with parameters as scaled integers. Scaling depends on the actual command value.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint8_t" name="frame">The coordinate system of the COMMAND. see MAV_FRAME in mavlink_types.h</field>
      <field type="uint16_t" name="command">The scheduled action for the mission item. see MAV_CMD in common.xml MAVLink specs</field>
      <field type="uint8_t" name="current">false:0, true:1</field>
      <field type="uint8_t" name="autocontinue">autocontinue to next wp</field>
      <field type="float" name="param1">PARAM1, see MAV_CMD enum</field>
      <field type="float" name="param2">PARAM2, see MAV_CMD enum</field>
      <field type="float" name="param3">PARAM3, see MAV_CMD enum</field>
      <field type="float" name="param4">PARAM4, see MAV_CMD enum</field>
      <field type="int32_t" name="x">PARAM5 / local: x position in meters * 1e4, global: latitude in degrees * 10^7</field>
      <field type="int32_t" name="y">PARAM6 / local: y position in meters * 1e4, global: longitude in degrees * 10^7</field>
      <field type="float" name="z">PARAM7 / z position: global: altitude in meters (relative or absolute, depending on frame.</field>
    </message>
    <message id="76" name="COMMAND_LONG">
      <description>Send a command with up to seven parameters to the MAV</description>
      <field type="uint8_t" name="target_system">System which should execute the command</field>
      <field type="uint8_t" name="target_component">Component which should execute the command, 0 for all components</field>
      <field type="uint16_t" name="command" enum="MAV_CMD">Command ID, as defined by MAV_CMD enum.</field>
      <field type="uint8_t" name="confirmation">0: First transmission of this command. 1-255: Confirmation transmissions (e.g. for kill command)</field>
      <field type="float" name="param1">Parameter 1, as defined by MAV_CMD enum.</field>
      <field type="float" name="param2">Parameter 2, as defined by MAV_CMD enum.</field>
      <field type="float" name="param3">Parameter 3, as defined by MAV_CMD enum.</field>
      <field type="float" name="param4">Parameter 4, as defined by MAV_CMD enum.</field>
      <field type="float" name="param5">Parameter 5, as defined by MAV_CMD enum.</field>
      <field type="float" name="param6">Parameter 6, as defined by MAV_CMD enum.</field>
      <field type="float" name="param7">Parameter 7, as defined by MAV_CMD enum.</field>
    </message>
    <message id="77" name="COMMAND_ACK">
      <description>Report status of a command. Includes feedback whether the command was executed.</description>
      <field type="uint16_t" name="command" enum="MAV_CMD">Command ID, as defined by MAV_CMD enum.</field>
      <field type="uint8_t" name="result">See MAV_RESULT enum</field>
    </message>
    <message id="81" name="MANUAL_SETPOINT">
      <description>Setpoint in roll, pitch, yaw and thrust from the operator</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot</field>
      <field type="float" name="roll">Desired roll rate in radians per second</field>
      <field type="float" name="pitch">Desired pitch rate in radians per second</field>
      <field type="float" name="yaw">Desired yaw rate in radians per second</field>
      <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1</field>
      <field type="uint8_t" name="mode_switch">Flight mode switch position, 0.. 255</field>
      <field type="uint8_t" name="manual_override_switch">Override mode switch position, 0.. 255</field>
    </message>
    <message id="82" name="SET_ATTITUDE_TARGET">
      <description>Sets a desired vehicle attitude. Used by an external controller to command the vehicle (manual controller or other system).</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot</field>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint8_t" name="type_mask">Mappings: If any of these bits are set, the corresponding input should be ignored: bit 1: body roll rate, bit 2: body pitch rate, bit 3: body yaw rate. bit 4-bit 6: reserved, bit 7: throttle, bit 8: attitude</field>
      <field type="float[4]" name="q">Attitude quaternion (w, x, y, z order, zero-rotation is 1, 0, 0, 0)</field>
      <field type="float" name="body_roll_rate">Body roll rate in radians per second</field>
      <field type="float" name="body_pitch_rate">Body roll rate in radians per second</field>
      <field type="float" name="body_yaw_rate">Body roll rate in radians per second</field>
      <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1 (-1 .. 1 for vehicles capable of reverse trust)</field>
    </message>
    <message id="83" name="ATTITUDE_TARGET">
      <description>Reports the current commanded attitude of the vehicle as specified by the autopilot. This should match the commands sent in a SET_ATTITUDE_TARGET message if the vehicle is being controlled this way.</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot</field>
      <field type="uint8_t" name="type_mask">Mappings: If any of these bits are set, the corresponding input should be ignored: bit 1: body roll rate, bit 2: body pitch rate, bit 3: body yaw rate. bit 4-bit 7: reserved, bit 8: attitude</field>
      <field type="float[4]" name="q">Attitude quaternion (w, x, y, z order, zero-rotation is 1, 0, 0, 0)</field>
      <field type="float" name="body_roll_rate">Body roll rate in radians per second</field>
      <field type="float" name="body_pitch_rate">Body roll rate in radians per second</field>
      <field type="float" name="body_yaw_rate">Body roll rate in radians per second</field>
      <field type="float" name="thrust">Collective thrust, normalized to 0 .. 1 (-1 .. 1 for vehicles capable of reverse trust)</field>
    </message>
    <message id="84" name="SET_POSITION_TARGET_LOCAL_NED">
      <description>Sets a desired vehicle position in a local north-east-down coordinate frame. Used by an external controller to command the vehicle (manual controller or other system).</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot</field>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint8_t" name="coordinate_frame" enum="MAV_FRAME">Valid options are: MAV_FRAME_LOCAL_NED = 1, MAV_FRAME_LOCAL_OFFSET_NED = 7, MAV_FRAME_BODY_NED = 8, MAV_FRAME_BODY_OFFSET_NED = 9</field>
      <field type="uint16_t" name="type_mask">Bitmask to indicate which dimensions should be ignored by the vehicle: a value of 0b0000000000000000 or 0b0000001000000000 indicates that none of the setpoint dimensions should be ignored. If bit 10 is set the floats afx afy afz should be interpreted as force instead of acceleration. Mapping: bit 1: x, bit 2: y, bit 3: z, bit 4: vx, bit 5: vy, bit 6: vz, bit 7: ax, bit 8: ay, bit 9: az, bit 10: is force setpoint, bit 11: yaw, bit 12: yaw rate</field>
      <field type="float" name="x">X Position in NED frame in meters</field>
      <field type="float" name="y">Y Position in NED frame in meters</field>
      <field type="float" name="z">Z Position in NED frame in meters (note, altitude is negative in NED)</field>
      <field type="float" name="vx">X velocity in NED frame in meter / s</field>
      <field type="float" name="vy">Y velocity in NED frame in meter / s</field>
      <field type="float" name="vz">Z velocity in NED frame in meter / s</field>
      <field type="float" name="afx">X acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field type="float" name="afy">Y acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field type="float" name="afz">Z acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field type="float" name="yaw">yaw setpoint in rad</field>
      <field type="float" name="yaw_rate">yaw rate setpoint in rad/s</field>
    </message>
    <message id="85" name="POSITION_TARGET_LOCAL_NED">
      <description>Reports the current commanded vehicle position, velocity, and acceleration as specified by the autopilot. This should match the commands sent in SET_POSITION_TARGET_LOCAL_NED if the vehicle is being controlled this way.</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot</field>
      <field type="uint8_t" name="coordinate_frame" enum="MAV_FRAME">Valid options are: MAV_FRAME_LOCAL_NED = 1, MAV_FRAME_LOCAL_OFFSET_NED = 7, MAV_FRAME_BODY_NED = 8, MAV_FRAME_BODY_OFFSET_NED = 9</field>
      <field type="uint16_t" name="type_mask">Bitmask to indicate which dimensions should be ignored by the vehicle: a value of 0b0000000000000000 or 0b0000001000000000 indicates that none of the setpoint dimensions should be ignored. If bit 10 is set the floats afx afy afz should be interpreted as force instead of acceleration. Mapping: bit 1: x, bit 2: y, bit 3: z, bit 4: vx, bit 5: vy, bit 6: vz, bit 7: ax, bit 8: ay, bit 9: az, bit 10: is force setpoint, bit 11: yaw, bit 12: yaw rate</field>
      <field type="float" name="x">X Position in NED frame in meters</field>
      <field type="float" name="y">Y Position in NED frame in meters</field>
      <field type="float" name="z">Z Position in NED frame in meters (note, altitude is negative in NED)</field>
      <field type="float" name="vx">X velocity in NED frame in meter / s</field>
      <field type="float" name="vy">Y velocity in NED frame in meter / s</field>
      <field type="float" name="vz">Z velocity in NED frame in meter / s</field>
      <field type="float" name="afx">X acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field type="float" name="afy">Y acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field type="float" name="afz">Z acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field type="float" name="yaw">yaw setpoint in rad</field>
      <field type="float" name="yaw_rate">yaw rate setpoint in rad/s</field>
    </message>
    <message id="86" name="SET_POSITION_TARGET_GLOBAL_INT">
      <description>Sets a desired vehicle position, velocity, and/or acceleration in a global coordinate system (WGS84). Used by an external controller to command the vehicle (manual controller or other system).</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot. The rationale for the timestamp in the setpoint is to allow the system to compensate for the transport delay of the setpoint. This allows the system to compensate processing latency.</field>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint8_t" name="coordinate_frame" enum="MAV_FRAME">Valid options are: MAV_FRAME_GLOBAL_INT = 5, MAV_FRAME_GLOBAL_RELATIVE_ALT_INT = 6, MAV_FRAME_GLOBAL_TERRAIN_ALT_INT = 11</field>
      <field type="uint16_t" name="type_mask">Bitmask to indicate which dimensions should be ignored by the vehicle: a value of 0b0000000000000000 or 0b0000001000000000 indicates that none of the setpoint dimensions should be ignored. If bit 10 is set the floats afx afy afz should be interpreted as force instead of acceleration. Mapping: bit 1: x, bit 2: y, bit 3: z, bit 4: vx, bit 5: vy, bit 6: vz, bit 7: ax, bit 8: ay, bit 9: az, bit 10: is force setpoint, bit 11: yaw, bit 12: yaw rate</field>
      <field type="int32_t" name="lat_int">X Position in WGS84 frame in 1e7 * meters</field>
      <field type="int32_t" name="lon_int">Y Position in WGS84 frame in 1e7 * meters</field>
      <field type="float" name="alt">Altitude in meters in AMSL altitude, not WGS84 if absolute or relative, above terrain if GLOBAL_TERRAIN_ALT_INT</field>
      <field type="float" name="vx">X velocity in NED frame in meter / s</field>
      <field type="float" name="vy">Y velocity in NED frame in meter / s</field>
      <field type="float" name="vz">Z velocity in NED frame in meter / s</field>
      <field type="float" name="afx">X acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field type="float" name="afy">Y acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field type="float" name="afz">Z acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field type="float" name="yaw">yaw setpoint in rad</field>
      <field type="float" name="yaw_rate">yaw rate setpoint in rad/s</field>
    </message>
    <message id="87" name="POSITION_TARGET_GLOBAL_INT">
      <description>Reports the current commanded vehicle position, velocity, and acceleration as specified by the autopilot. This should match the commands sent in SET_POSITION_TARGET_GLOBAL_INT if the vehicle is being controlled this way.</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp in milliseconds since system boot. The rationale for the timestamp in the setpoint is to allow the system to compensate for the transport delay of the setpoint. This allows the system to compensate processing latency.</field>
      <field type="uint8_t" name="coordinate_frame" enum="MAV_FRAME">Valid options are: MAV_FRAME_GLOBAL_INT = 5, MAV_FRAME_GLOBAL_RELATIVE_ALT_INT = 6, MAV_FRAME_GLOBAL_TERRAIN_ALT_INT = 11</field>
      <field type="uint16_t" name="type_mask">Bitmask to indicate which dimensions should be ignored by the vehicle: a value of 0b0000000000000000 or 0b0000001000000000 indicates that none of the setpoint dimensions should be ignored. If bit 10 is set the floats afx afy afz should be interpreted as force instead of acceleration. Mapping: bit 1: x, bit 2: y, bit 3: z, bit 4: vx, bit 5: vy, bit 6: vz, bit 7: ax, bit 8: ay, bit 9: az, bit 10: is force setpoint, bit 11: yaw, bit 12: yaw rate</field>
      <field type="int32_t" name="lat_int">X Position in WGS84 frame in 1e7 * meters</field>
      <field type="int32_t" name="lon_int">Y Position in WGS84 frame in 1e7 * meters</field>
      <field type="float" name="alt">Altitude in meters in AMSL altitude, not WGS84 if absolute or relative, above terrain if GLOBAL_TERRAIN_ALT_INT</field>
      <field type="float" name="vx">X velocity in NED frame in meter / s</field>
      <field type="float" name="vy">Y velocity in NED frame in meter / s</field>
      <field type="float" name="vz">Z velocity in NED frame in meter / s</field>
      <field type="float" name="afx">X acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field type="float" name="afy">Y acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field type="float" name="afz">Z acceleration or force (if bit 10 of type_mask is set) in NED frame in meter / s^2 or N</field>
      <field type="float" name="yaw">yaw setpoint in rad</field>
      <field type="float" name="yaw_rate">yaw rate setpoint in rad/s</field>
    </message>
    <message id="89" name="LOCAL_POSITION_NED_SYSTEM_GLOBAL_OFFSET">
      <description>The offset in X, Y, Z and yaw between the LOCAL_POSITION_NED messages of MAV X and the global coordinate frame in NED coordinates. Coordinate frame is right-handed, Z-axis down (aeronautical frame, NED / north-east-down convention)</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="float" name="x">X Position</field>
      <field type="float" name="y">Y Position</field>
      <field type="float" name="z">Z Position</field>
      <field type="float" name="roll">Roll</field>
      <field type="float" name="pitch">Pitch</field>
      <field type="float" name="yaw">Yaw</field>
    </message>
    <message id="90" name="HIL_STATE">
      <description>DEPRECATED PACKET! Suffers from missing airspeed fields and singularities due to Euler angles. Please use HIL_STATE_QUATERNION instead. Sent from simulation to autopilot. This packet is useful for high throughput applications such as hardware in the loop simulations.</description>
      <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field type="float" name="roll">Roll angle (rad)</field>
      <field type="float" name="pitch">Pitch angle (rad)</field>
      <field type="float" name="yaw">Yaw angle (rad)</field>
      <field type="float" name="rollspeed">Body frame roll / phi angular speed (rad/s)</field>
      <field type="float" name="pitchspeed">Body frame pitch / theta angular speed (rad/s)</field>
      <field type="float" name="yawspeed">Body frame yaw / psi angular speed (rad/s)</field>
      <field type="int32_t" name="lat">Latitude, expressed as * 1E7</field>
      <field type="int32_t" name="lon">Longitude, expressed as * 1E7</field>
      <field type="int32_t" name="alt">Altitude in meters, expressed as * 1000 (millimeters)</field>
      <field type="int16_t" name="vx">Ground X Speed (Latitude), expressed as m/s * 100</field>
      <field type="int16_t" name="vy">Ground Y Speed (Longitude), expressed as m/s * 100</field>
      <field type="int16_t" name="vz">Ground Z Speed (Altitude), expressed as m/s * 100</field>
      <field type="int16_t" name="xacc">X acceleration (mg)</field>
      <field type="int16_t" name="yacc">Y acceleration (mg)</field>
      <field type="int16_t" name="zacc">Z acceleration (mg)</field>
    </message>
    <message id="91" name="HIL_CONTROLS">
      <description>Sent from autopilot to simulation. Hardware in the loop control outputs</description>
      <field name="time_usec" type="uint64_t">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field name="roll_ailerons" type="float">Control output -1 .. 1</field>
      <field name="pitch_elevator" type="float">Control output -1 .. 1</field>
      <field name="yaw_rudder" type="float">Control output -1 .. 1</field>
      <field name="throttle" type="float">Throttle 0 .. 1</field>
      <field name="aux1" type="float">Aux 1, -1 .. 1</field>
      <field name="aux2" type="float">Aux 2, -1 .. 1</field>
      <field name="aux3" type="float">Aux 3, -1 .. 1</field>
      <field name="aux4" type="float">Aux 4, -1 .. 1</field>
      <field name="mode" type="uint8_t">System mode (MAV_MODE)</field>
      <field name="nav_mode" type="uint8_t">Navigation mode (MAV_NAV_MODE)</field>
    </message>
    <message id="92" name="HIL_RC_INPUTS_RAW">
      <description>Sent from simulation to autopilot. The RAW values of the RC channels received. The standard PPM modulation is as follows: 1000 microseconds: 0%, 2000 microseconds: 100%. Individual receivers/transmitters might violate this specification.</description>
      <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field type="uint16_t" name="chan1_raw">RC channel 1 value, in microseconds</field>
      <field type="uint16_t" name="chan2_raw">RC channel 2 value, in microseconds</field>
      <field type="uint16_t" name="chan3_raw">RC channel 3 value, in microseconds</field>
      <field type="uint16_t" name="chan4_raw">RC channel 4 value, in microseconds</field>
      <field type="uint16_t" name="chan5_raw">RC channel 5 value, in microseconds</field>
      <field type="uint16_t" name="chan6_raw">RC channel 6 value, in microseconds</field>
      <field type="uint16_t" name="chan7_raw">RC channel 7 value, in microseconds</field>
      <field type="uint16_t" name="chan8_raw">RC channel 8 value, in microseconds</field>
      <field type="uint16_t" name="chan9_raw">RC channel 9 value, in microseconds</field>
      <field type="uint16_t" name="chan10_raw">RC channel 10 value, in microseconds</field>
      <field type="uint16_t" name="chan11_raw">RC channel 11 value, in microseconds</field>
      <field type="uint16_t" name="chan12_raw">RC channel 12 value, in microseconds</field>
      <field type="uint8_t" name="rssi">Receive signal strength indicator, 0: 0%, 255: 100%</field>
    </message>
    <message id="93" name="HIL_ACTUATOR_CONTROLS">
      <description>Sent from autopilot to simulation. Hardware in the loop control outputs (replacement for HIL_CONTROLS)</description>
      <field name="time_usec" type="uint64_t">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field name="controls" type="float[16]">Control outputs -1 .. 1. Channel assignment depends on the simulated hardware.</field>
      <field name="mode" type="uint8_t">System mode (MAV_MODE), includes arming state.</field>
      <field name="flags" type="uint64_t">Flags as bitfield, reserved for future use.</field>
    </message>
    <message id="100" name="OPTICAL_FLOW">
      <description>Optical flow from a flow sensor (e.g. optical mouse sensor)</description>
      <field type="uint64_t" name="time_usec">Timestamp (UNIX)</field>
      <field type="uint8_t" name="sensor_id">Sensor ID</field>
      <field type="int16_t" name="flow_x">Flow in pixels * 10 in x-sensor direction (dezi-pixels)</field>
      <field type="int16_t" name="flow_y">Flow in pixels * 10 in y-sensor direction (dezi-pixels)</field>
      <field type="float" name="flow_comp_m_x">Flow in meters in x-sensor direction, angular-speed compensated</field>
      <field type="float" name="flow_comp_m_y">Flow in meters in y-sensor direction, angular-speed compensated</field>
      <field type="uint8_t" name="quality">Optical flow quality / confidence. 0: bad, 255: maximum quality</field>
      <field type="float" name="ground_distance">Ground distance in meters. Positive value: distance known. Negative value: Unknown distance</field>
    </message>
    <message id="101" name="GLOBAL_VISION_POSITION_ESTIMATE">
      <field type="uint64_t" name="usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field type="float" name="x">Global X position</field>
      <field type="float" name="y">Global Y position</field>
      <field type="float" name="z">Global Z position</field>
      <field type="float" name="roll">Roll angle in rad</field>
      <field type="float" name="pitch">Pitch angle in rad</field>
      <field type="float" name="yaw">Yaw angle in rad</field>
    </message>
    <message id="102" name="VISION_POSITION_ESTIMATE">
      <field type="uint64_t" name="usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field type="float" name="x">Global X position</field>
      <field type="float" name="y">Global Y position</field>
      <field type="float" name="z">Global Z position</field>
      <field type="float" name="roll">Roll angle in rad</field>
      <field type="float" name="pitch">Pitch angle in rad</field>
      <field type="float" name="yaw">Yaw angle in rad</field>
    </message>
    <message id="103" name="VISION_SPEED_ESTIMATE">
      <field type="uint64_t" name="usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field type="float" name="x">Global X speed</field>
      <field type="float" name="y">Global Y speed</field>
      <field type="float" name="z">Global Z speed</field>
    </message>
    <message id="104" name="VICON_POSITION_ESTIMATE">
      <field type="uint64_t" name="usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field type="float" name="x">Global X position</field>
      <field type="float" name="y">Global Y position</field>
      <field type="float" name="z">Global Z position</field>
      <field type="float" name="roll">Roll angle in rad</field>
      <field type="float" name="pitch">Pitch angle in rad</field>
      <field type="float" name="yaw">Yaw angle in rad</field>
    </message>
    <message id="105" name="HIGHRES_IMU">
      <description>The IMU readings in SI units in NED body frame</description>
      <field type="uint64_t" name="time_usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field type="float" name="xacc">X acceleration (m/s^2)</field>
      <field type="float" name="yacc">Y acceleration (m/s^2)</field>
      <field type="float" name="zacc">Z acceleration (m/s^2)</field>
      <field type="float" name="xgyro">Angular speed around X axis (rad / sec)</field>
      <field type="float" name="ygyro">Angular speed around Y axis (rad / sec)</field>
      <field type="float" name="zgyro">Angular speed around Z axis (rad / sec)</field>
      <field type="float" name="xmag">X Magnetic field (Gauss)</field>
      <field type="float" name="ymag">Y Magnetic field (Gauss)</field>
      <field type="float" name="zmag">Z Magnetic field (Gauss)</field>
      <field type="float" name="abs_pressure">Absolute pressure in millibar</field>
      <field type="float" name="diff_pressure">Differential pressure in millibar</field>
      <field type="float" name="pressure_alt">Altitude calculated from pressure</field>
      <field type="float" name="temperature">Temperature in degrees celsius</field>
      <field type="uint16_t" name="fields_updated">Bitmask for fields that have updated since last message, bit 0 = xacc, bit 12: temperature</field>
    </message>
    <message id="106" name="OPTICAL_FLOW_RAD">
      <description>Optical flow from an angular rate flow sensor (e.g. PX4FLOW or mouse sensor)</description>
      <field type="uint64_t" name="time_usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field type="uint8_t" name="sensor_id">Sensor ID</field>
      <field type="uint32_t" name="integration_time_us">Integration time in microseconds. Divide integrated_x and integrated_y by the integration time to obtain average flow. The integration time also indicates the.</field>
      <field type="float" name="integrated_x">Flow in radians around X axis (Sensor RH rotation about the X axis induces a positive flow. Sensor linear motion along the positive Y axis induces a negative flow.)</field>
      <field type="float" name="integrated_y">Flow in radians around Y axis (Sensor RH rotation about the Y axis induces a positive flow. Sensor linear motion along the positive X axis induces a positive flow.)</field>
      <field type="float" name="integrated_xgyro">RH rotation around X axis (rad)</field>
      <field type="float" name="integrated_ygyro">RH rotation around Y axis (rad)</field>
      <field type="float" name="integrated_zgyro">RH rotation around Z axis (rad)</field>
      <field type="int16_t" name="temperature">Temperature * 100 in centi-degrees Celsius</field>
      <field type="uint8_t" name="quality">Optical flow quality / confidence. 0: no valid flow, 255: maximum quality</field>
      <field type="uint32_t" name="time_delta_distance_us">Time in microseconds since the distance was sampled.</field>
      <field type="float" name="distance">Distance to the center of the flow field in meters. Positive value (including zero): distance known. Negative value: Unknown distance.</field>
    </message>
    <message id="107" name="HIL_SENSOR">
      <description>The IMU readings in SI units in NED body frame</description>
      <field type="uint64_t" name="time_usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field type="float" name="xacc">X acceleration (m/s^2)</field>
      <field type="float" name="yacc">Y acceleration (m/s^2)</field>
      <field type="float" name="zacc">Z acceleration (m/s^2)</field>
      <field type="float" name="xgyro">Angular speed around X axis in body frame (rad / sec)</field>
      <field type="float" name="ygyro">Angular speed around Y axis in body frame (rad / sec)</field>
      <field type="float" name="zgyro">Angular speed around Z axis in body frame (rad / sec)</field>
      <field type="float" name="xmag">X Magnetic field (Gauss)</field>
      <field type="float" name="ymag">Y Magnetic field (Gauss)</field>
      <field type="float" name="zmag">Z Magnetic field (Gauss)</field>
      <field type="float" name="abs_pressure">Absolute pressure in millibar</field>
      <field type="float" name="diff_pressure">Differential pressure (airspeed) in millibar</field>
      <field type="float" name="pressure_alt">Altitude calculated from pressure</field>
      <field type="float" name="temperature">Temperature in degrees celsius</field>
      <field type="uint32_t" name="fields_updated">Bitmask for fields that have updated since last message, bit 0 = xacc, bit 12: temperature, bit 31: full reset of attitude/position/velocities/etc was performed in sim.</field>
    </message>
    <message name="SIM_STATE" id="108">
      <description>Status of simulation environment, if used</description>
      <field type="float" name="q1">True attitude quaternion component 1, w (1 in null-rotation)</field>
      <field type="float" name="q2">True attitude quaternion component 2, x (0 in null-rotation)</field>
      <field type="float" name="q3">True attitude quaternion component 3, y (0 in null-rotation)</field>
      <field type="float" name="q4">True attitude quaternion component 4, z (0 in null-rotation)</field>
      <field type="float" name="roll">Attitude roll expressed as Euler angles, not recommended except for human-readable outputs</field>
      <field type="float" name="pitch">Attitude pitch expressed as Euler angles, not recommended except for human-readable outputs</field>
      <field type="float" name="yaw">Attitude yaw expressed as Euler angles, not recommended except for human-readable outputs</field>
      <field type="float" name="xacc">X acceleration m/s/s</field>
      <field type="float" name="yacc">Y acceleration m/s/s</field>
      <field type="float" name="zacc">Z acceleration m/s/s</field>
      <field type="float" name="xgyro">Angular speed around X axis rad/s</field>
      <field type="float" name="ygyro">Angular speed around Y axis rad/s</field>
      <field type="float" name="zgyro">Angular speed around Z axis rad/s</field>
      <field type="float" name="lat">Latitude in degrees</field>
      <field type="float" name="lon">Longitude in degrees</field>
      <field type="float" name="alt">Altitude in meters</field>
      <field type="float" name="std_dev_horz">Horizontal position standard deviation</field>
      <field type="float" name="std_dev_vert">Vertical position standard deviation</field>
      <field type="float" name="vn">True velocity in m/s in NORTH direction in earth-fixed NED frame</field>
      <field type="float" name="ve">True velocity in m/s in EAST direction in earth-fixed NED frame</field>
      <field type="float" name="vd">True velocity in m/s in DOWN direction in earth-fixed NED frame</field>
    </message>
    <message name="RADIO_STATUS" id="109">
      <description>Status generated by radio and injected into MAVLink stream.</description>
      <field type="uint8_t" name="rssi">Local signal strength</field>
      <field type="uint8_t" name="remrssi">Remote signal strength</field>
      <field type="uint8_t" name="txbuf">Remaining free buffer space in percent.</field>
      <field type="uint8_t" name="noise">Background noise level</field>
      <field type="uint8_t" name="remnoise">Remote background noise level</field>
      <field type="uint16_t" name="rxerrors">Receive errors</field>
      <field type="uint16_t" name="fixed">Count of error corrected packets</field>
    </message>
    <message id="110" name="FILE_TRANSFER_PROTOCOL">
      <description>File transfer message</description>
      <field type="uint8_t" name="target_network">Network ID (0 for broadcast)</field>
      <field type="uint8_t" name="target_system">System ID (0 for broadcast)</field>
      <field type="uint8_t" name="target_component">Component ID (0 for broadcast)</field>
      <field type="uint8_t[251]" name="payload">Variable length payload. The length is defined by the remaining message length when subtracting the header and other fields.  The entire content of this block is opaque unless you understand any the encoding message_type.  The particular encoding used can be extension specific and might not always be documented as part of the mavlink specification.</field>
    </message>
    <message id="111" name="TIMESYNC">
      <description>Time synchronization message.</description>
      <field type="int64_t" name="tc1">Time sync timestamp 1</field>
      <field type="int64_t" name="ts1">Time sync timestamp 2</field>
    </message>
    <message id="112" name="CAMERA_TRIGGER">
      <description>Camera-IMU triggering and synchronisation message.</description>
      <field type="uint64_t" name="time_usec">Timestamp for the image frame in microseconds</field>
      <field type="uint32_t" name="seq">Image frame sequence</field>
    </message>
    <message id="113" name="HIL_GPS">
      <description>The global position, as returned by the Global Positioning System (GPS). This is
                 NOT the global position estimate of the system, but rather a RAW sensor value. See message GLOBAL_POSITION for the global position estimate. Coordinate frame is right-handed, Z-axis up (GPS frame).</description>
      <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field type="uint8_t" name="fix_type">0-1: no fix, 2: 2D fix, 3: 3D fix. Some applications will not use the value of this field unless it is at least two, so always correctly fill in the fix.</field>
      <field type="int32_t" name="lat">Latitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="lon">Longitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="alt">Altitude (AMSL, not WGS84), in meters * 1000 (positive for up)</field>
      <field type="uint16_t" name="eph">GPS HDOP horizontal dilution of position in cm (m*100). If unknown, set to: 65535</field>
      <field type="uint16_t" name="epv">GPS VDOP vertical dilution of position in cm (m*100). If unknown, set to: 65535</field>
      <field type="uint16_t" name="vel">GPS ground speed (m/s * 100). If unknown, set to: 65535</field>
      <field type="int16_t" name="vn">GPS velocity in cm/s in NORTH direction in earth-fixed NED frame</field>
      <field type="int16_t" name="ve">GPS velocity in cm/s in EAST direction in earth-fixed NED frame</field>
      <field type="int16_t" name="vd">GPS velocity in cm/s in DOWN direction in earth-fixed NED frame</field>
      <field type="uint16_t" name="cog">Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: 65535</field>
      <field type="uint8_t" name="satellites_visible">Number of satellites visible. If unknown, set to 255</field>
    </message>
    <message id="114" name="HIL_OPTICAL_FLOW">
      <description>Simulated optical flow from a flow sensor (e.g. PX4FLOW or optical mouse sensor)</description>
      <field type="uint64_t" name="time_usec">Timestamp (microseconds, synced to UNIX time or since system boot)</field>
      <field type="uint8_t" name="sensor_id">Sensor ID</field>
      <field type="uint32_t" name="integration_time_us">Integration time in microseconds. Divide integrated_x and integrated_y by the integration time to obtain average flow. The integration time also indicates the.</field>
      <field type="float" name="integrated_x">Flow in radians around X axis (Sensor RH rotation about the X axis induces a positive flow. Sensor linear motion along the positive Y axis induces a negative flow.)</field>
      <field type="float" name="integrated_y">Flow in radians around Y axis (Sensor RH rotation about the Y axis induces a positive flow. Sensor linear motion along the positive X axis induces a positive flow.)</field>
      <field type="float" name="integrated_xgyro">RH rotation around X axis (rad)</field>
      <field type="float" name="integrated_ygyro">RH rotation around Y axis (rad)</field>
      <field type="float" name="integrated_zgyro">RH rotation around Z axis (rad)</field>
      <field type="int16_t" name="temperature">Temperature * 100 in centi-degrees Celsius</field>
      <field type="uint8_t" name="quality">Optical flow quality / confidence. 0: no valid flow, 255: maximum quality</field>
      <field type="uint32_t" name="time_delta_distance_us">Time in microseconds since the distance was sampled.</field>
      <field type="float" name="distance">Distance to the center of the flow field in meters. Positive value (including zero): distance known. Negative value: Unknown distance.</field>
    </message>
    <message id="115" name="HIL_STATE_QUATERNION">
      <description>Sent from simulation to autopilot, avoids in contrast to HIL_STATE singularities. This packet is useful for high throughput applications such as hardware in the loop simulations.</description>
      <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field type="float[4]" name="attitude_quaternion">Vehicle attitude expressed as normalized quaternion in w, x, y, z order (with 1 0 0 0 being the null-rotation)</field>
      <field type="float" name="rollspeed">Body frame roll / phi angular speed (rad/s)</field>
      <field type="float" name="pitchspeed">Body frame pitch / theta angular speed (rad/s)</field>
      <field type="float" name="yawspeed">Body frame yaw / psi angular speed (rad/s)</field>
      <field type="int32_t" name="lat">Latitude, expressed as * 1E7</field>
      <field type="int32_t" name="lon">Longitude, expressed as * 1E7</field>
      <field type="int32_t" name="alt">Altitude in meters, expressed as * 1000 (millimeters)</field>
      <field type="int16_t" name="vx">Ground X Speed (Latitude), expressed as m/s * 100</field>
      <field type="int16_t" name="vy">Ground Y Speed (Longitude), expressed as m/s * 100</field>
      <field type="int16_t" name="vz">Ground Z Speed (Altitude), expressed as m/s * 100</field>
      <field type="uint16_t" name="ind_airspeed">Indicated airspeed, expressed as m/s * 100</field>
      <field type="uint16_t" name="true_airspeed">True airspeed, expressed as m/s * 100</field>
      <field type="int16_t" name="xacc">X acceleration (mg)</field>
      <field type="int16_t" name="yacc">Y acceleration (mg)</field>
      <field type="int16_t" name="zacc">Z acceleration (mg)</field>
    </message>
    <message id="116" name="SCALED_IMU2">
      <description>The RAW IMU readings for secondary 9DOF sensor setup. This message should contain the scaled values to the described units</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="int16_t" name="xacc">X acceleration (mg)</field>
      <field type="int16_t" name="yacc">Y acceleration (mg)</field>
      <field type="int16_t" name="zacc">Z acceleration (mg)</field>
      <field type="int16_t" name="xgyro">Angular speed around X axis (millirad /sec)</field>
      <field type="int16_t" name="ygyro">Angular speed around Y axis (millirad /sec)</field>
      <field type="int16_t" name="zgyro">Angular speed around Z axis (millirad /sec)</field>
      <field type="int16_t" name="xmag">X Magnetic field (milli tesla)</field>
      <field type="int16_t" name="ymag">Y Magnetic field (milli tesla)</field>
      <field type="int16_t" name="zmag">Z Magnetic field (milli tesla)</field>
    </message>
    <message id="117" name="LOG_REQUEST_LIST">
      <description>Request a list of available logs. On some systems calling this may stop on-board logging until LOG_REQUEST_END is called.</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="start">First log id (0 for first available)</field>
      <field type="uint16_t" name="end">Last log id (0xffff for last available)</field>
    </message>
    <message id="118" name="LOG_ENTRY">
      <description>Reply to LOG_REQUEST_LIST</description>
      <field type="uint16_t" name="id">Log id</field>
      <field type="uint16_t" name="num_logs">Total number of logs</field>
      <field type="uint16_t" name="last_log_num">High log number</field>
      <field type="uint32_t" name="time_utc">UTC timestamp of log in seconds since 1970, or 0 if not available</field>
      <field type="uint32_t" name="size">Size of the log (may be approximate) in bytes</field>
    </message>
    <message id="119" name="LOG_REQUEST_DATA">
      <description>Request a chunk of a log</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint16_t" name="id">Log id (from LOG_ENTRY reply)</field>
      <field type="uint32_t" name="ofs">Offset into the log</field>
      <field type="uint32_t" name="count">Number of bytes</field>
    </message>
    <message id="120" name="LOG_DATA">
      <description>Reply to LOG_REQUEST_DATA</description>
      <field type="uint16_t" name="id">Log id (from LOG_ENTRY reply)</field>
      <field type="uint32_t" name="ofs">Offset into the log</field>
      <field type="uint8_t" name="count">Number of bytes (zero for end of log)</field>
      <field type="uint8_t[90]" name="data">log data</field>
    </message>
    <message id="121" name="LOG_ERASE">
      <description>Erase all logs</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
    </message>
    <message id="122" name="LOG_REQUEST_END">
      <description>Stop log transfer and resume normal logging</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
    </message>
    <message name="GPS_INJECT_DATA" id="123">
      <description>data for injecting into the onboard GPS (used for DGPS)</description>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="uint8_t" name="len">data length</field>
      <field type="uint8_t[110]" name="data">raw data (110 is enough for 12 satellites of RTCMv2)</field>
    </message>
    <message id="124" name="GPS2_RAW">
      <description>Second GPS data. Coordinate frame is right-handed, Z-axis up (GPS frame).</description>
      <field type="uint64_t" name="time_usec">Timestamp (microseconds since UNIX epoch or microseconds since system boot)</field>
      <field type="uint8_t" name="fix_type" enum="GPS_FIX_TYPE">See the GPS_FIX_TYPE enum.</field>
      <field type="int32_t" name="lat">Latitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="lon">Longitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="alt">Altitude (AMSL, not WGS84), in meters * 1000 (positive for up)</field>
      <field type="uint16_t" name="eph">GPS HDOP horizontal dilution of position in cm (m*100). If unknown, set to: UINT16_MAX</field>
      <field type="uint16_t" name="epv">GPS VDOP vertical dilution of position in cm (m*100). If unknown, set to: UINT16_MAX</field>
      <field type="uint16_t" name="vel">GPS ground speed (m/s * 100). If unknown, set to: UINT16_MAX</field>
      <field type="uint16_t" name="cog">Course over ground (NOT heading, but direction of movement) in degrees * 100, 0.0..359.99 degrees. If unknown, set to: UINT16_MAX</field>
      <field type="uint8_t" name="satellites_visible">Number of satellites visible. If unknown, set to 255</field>
      <field type="uint8_t" name="dgps_numch">Number of DGPS satellites</field>
      <field type="uint32_t" name="dgps_age">Age of DGPS info</field>
    </message>
    <message id="125" name="POWER_STATUS">
      <description>Power supply status</description>
      <field type="uint16_t" name="Vcc">5V rail voltage in millivolts</field>
      <field type="uint16_t" name="Vservo">servo rail voltage in millivolts</field>
      <field type="uint16_t" name="flags">power supply status flags (see MAV_POWER_STATUS enum)</field>
    </message>
    <message name="SERIAL_CONTROL" id="126">
      <description>Control a serial port. This can be used for raw access to an onboard serial peripheral such as a GPS or telemetry radio. It is designed to make it possible to update the devices firmware via MAVLink messages or change the devices settings. A message with zero bytes can be used to change just the baudrate.</description>
      <field type="uint8_t" name="device">See SERIAL_CONTROL_DEV enum</field>
      <field type="uint8_t" name="flags">See SERIAL_CONTROL_FLAG enum</field>
      <field type="uint16_t" name="timeout">Timeout for reply data in milliseconds</field>
      <field type="uint32_t" name="baudrate">Baudrate of transfer. Zero means no change.</field>
      <field type="uint8_t" name="count">how many bytes in this transfer</field>
      <field type="uint8_t[70]" name="data">serial data</field>
    </message>
    <message id="127" name="GPS_RTK">
      <description>RTK GPS data. Gives information on the relative baseline calculation the GPS is reporting</description>
      <field type="uint32_t" name="time_last_baseline_ms">Time since boot of last baseline message received in ms.</field>
      <field type="uint8_t" name="rtk_receiver_id">Identification of connected RTK receiver.</field>
      <field type="uint16_t" name="wn">GPS Week Number of last baseline</field>
      <field type="uint32_t" name="tow">GPS Time of Week of last baseline</field>
      <field type="uint8_t" name="rtk_health">GPS-specific health report for RTK data.</field>
      <field type="uint8_t" name="rtk_rate">Rate of baseline messages being received by GPS, in HZ</field>
      <field type="uint8_t" name="nsats">Current number of sats used for RTK calculation.</field>
      <field type="uint8_t" name="baseline_coords_type">Coordinate system of baseline. 0 == ECEF, 1 == NED</field>
      <field type="int32_t" name="baseline_a_mm">Current baseline in ECEF x or NED north component in mm.</field>
      <field type="int32_t" name="baseline_b_mm">Current baseline in ECEF y or NED east component in mm.</field>
      <field type="int32_t" name="baseline_c_mm">Current baseline in ECEF z or NED down component in mm.</field>
      <field type="uint32_t" name="accuracy">Current estimate of baseline accuracy.</field>
      <field type="int32_t" name="iar_num_hypotheses">Current number of integer ambiguity hypotheses.</field>
    </message>
    <message id="128" name="GPS2_RTK">
      <description>RTK GPS data. Gives information on the relative baseline calculation the GPS is reporting</description>
      <field type="uint32_t" name="time_last_baseline_ms">Time since boot of last baseline message received in ms.</field>
      <field type="uint8_t" name="rtk_receiver_id">Identification of connected RTK receiver.</field>
      <field type="uint16_t" name="wn">GPS Week Number of last baseline</field>
      <field type="uint32_t" name="tow">GPS Time of Week of last baseline</field>
      <field type="uint8_t" name="rtk_health">GPS-specific health report for RTK data.</field>
      <field type="uint8_t" name="rtk_rate">Rate of baseline messages being received by GPS, in HZ</field>
      <field type="uint8_t" name="nsats">Current number of sats used for RTK calculation.</field>
      <field type="uint8_t" name="baseline_coords_type">Coordinate system of baseline. 0 == ECEF, 1 == NED</field>
      <field type="int32_t" name="baseline_a_mm">Current baseline in ECEF x or NED north component in mm.</field>
      <field type="int32_t" name="baseline_b_mm">Current baseline in ECEF y or NED east component in mm.</field>
      <field type="int32_t" name="baseline_c_mm">Current baseline in ECEF z or NED down component in mm.</field>
      <field type="uint32_t" name="accuracy">Current estimate of baseline accuracy.</field>
      <field type="int32_t" name="iar_num_hypotheses">Current number of integer ambiguity hypotheses.</field>
    </message>
    <message id="129" name="SCALED_IMU3">
      <description>The RAW IMU readings for 3rd 9DOF sensor setup. This message should contain the scaled values to the described units</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="int16_t" name="xacc">X acceleration (mg)</field>
      <field type="int16_t" name="yacc">Y acceleration (mg)</field>
      <field type="int16_t" name="zacc">Z acceleration (mg)</field>
      <field type="int16_t" name="xgyro">Angular speed around X axis (millirad /sec)</field>
      <field type="int16_t" name="ygyro">Angular speed around Y axis (millirad /sec)</field>
      <field type="int16_t" name="zgyro">Angular speed around Z axis (millirad /sec)</field>
      <field type="int16_t" name="xmag">X Magnetic field (milli tesla)</field>
      <field type="int16_t" name="ymag">Y Magnetic field (milli tesla)</field>
      <field type="int16_t" name="zmag">Z Magnetic field (milli tesla)</field>
    </message>
    <message id="130" name="DATA_TRANSMISSION_HANDSHAKE">
      <field type="uint8_t" name="type">type of requested/acknowledged data (as defined in ENUM DATA_TYPES in mavlink/include/mavlink_types.h)</field>
      <field type="uint32_t" name="size">total data size in bytes (set on ACK only)</field>
      <field type="uint16_t" name="width">Width of a matrix or image</field>
      <field type="uint16_t" name="height">Height of a matrix or image</field>
      <field type="uint16_t" name="packets">number of packets being sent (set on ACK only)</field>
      <field type="uint8_t" name="payload">payload size per packet (normally 253 byte, see DATA field size in message ENCAPSULATED_DATA) (set on ACK only)</field>
      <field type="uint8_t" name="jpg_quality">JPEG quality out of [1,100]</field>
    </message>
    <message id="131" name="ENCAPSULATED_DATA">
      <field type="uint16_t" name="seqnr">sequence number (starting with 0 on every transmission)</field>
      <field type="uint8_t[253]" name="data">image data bytes</field>
    </message>
    <message id="132" name="DISTANCE_SENSOR">
      <field type="uint32_t" name="time_boot_ms">Time since system boot</field>
      <field type="uint16_t" name="min_distance">Minimum distance the sensor can measure in centimeters</field>
      <field type="uint16_t" name="max_distance">Maximum distance the sensor can measure in centimeters</field>
      <field type="uint16_t" name="current_distance">Current distance reading</field>
      <field type="uint8_t" name="type">Type from MAV_DISTANCE_SENSOR enum.</field>
      <field type="uint8_t" name="id">Onboard ID of the sensor</field>
      <field type="uint8_t" name="orientation">Direction the sensor faces from MAV_SENSOR_ORIENTATION enum.</field>
      <field type="uint8_t" name="covariance">Measurement covariance in centimeters, 0 for unknown / invalid readings</field>
    </message>
    <message id="133" name="TERRAIN_REQUEST">
      <description>Request for terrain data and terrain status</description>
      <field type="int32_t" name="lat">Latitude of SW corner of first grid (degrees *10^7)</field>
      <field type="int32_t" name="lon">Longitude of SW corner of first grid (in degrees *10^7)</field>
      <field type="uint16_t" name="grid_spacing">Grid spacing in meters</field>
      <field type="uint64_t" name="mask" print_format="0x%07x">Bitmask of requested 4x4 grids (row major 8x7 array of grids, 56 bits)</field>
    </message>
    <message id="134" name="TERRAIN_DATA">
      <description>Terrain data sent from GCS. The lat/lon and grid_spacing must be the same as a lat/lon from a TERRAIN_REQUEST</description>
      <field type="int32_t" name="lat">Latitude of SW corner of first grid (degrees *10^7)</field>
      <field type="int32_t" name="lon">Longitude of SW corner of first grid (in degrees *10^7)</field>
      <field type="uint16_t" name="grid_spacing">Grid spacing in meters</field>
      <field type="uint8_t" name="gridbit">bit within the terrain request mask</field>
      <field type="int16_t[16]" name="data">Terrain data in meters AMSL</field>
    </message>
    <message id="135" name="TERRAIN_CHECK">
      <description>Request that the vehicle report terrain height at the given location. Used by GCS to check if vehicle has all terrain data needed for a mission.</description>
      <field type="int32_t" name="lat">Latitude (degrees *10^7)</field>
      <field type="int32_t" name="lon">Longitude (degrees *10^7)</field>
    </message>
    <message id="136" name="TERRAIN_REPORT">
      <description>Response from a TERRAIN_CHECK request</description>
      <field type="int32_t" name="lat">Latitude (degrees *10^7)</field>
      <field type="int32_t" name="lon">Longitude (degrees *10^7)</field>
      <field type="uint16_t" name="spacing">grid spacing (zero if terrain at this location unavailable)</field>
      <field type="float" name="terrain_height">Terrain height in meters AMSL</field>
      <field type="float" name="current_height">Current vehicle height above lat/lon terrain height (meters)</field>
      <field type="uint16_t" name="pending">Number of 4x4 terrain blocks waiting to be received or read from disk</field>
      <field type="uint16_t" name="loaded">Number of 4x4 terrain blocks in memory</field>
    </message>
    <message id="137" name="SCALED_PRESSURE2">
      <description>Barometer readings for 2nd barometer</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="float" name="press_abs">Absolute pressure (hectopascal)</field>
      <field type="float" name="press_diff">Differential pressure 1 (hectopascal)</field>
      <field type="int16_t" name="temperature">Temperature measurement (0.01 degrees celsius)</field>
    </message>
    <message id="138" name="ATT_POS_MOCAP">
      <description>Motion capture attitude and position</description>
      <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
      <field type="float[4]" name="q">Attitude quaternion (w, x, y, z order, zero-rotation is 1, 0, 0, 0)</field>
      <field type="float" name="x">X position in meters (NED)</field>
      <field type="float" name="y">Y position in meters (NED)</field>
      <field type="float" name="z">Z position in meters (NED)</field>
    </message>
    <message id="139" name="SET_ACTUATOR_CONTROL_TARGET">
      <description>Set the vehicle attitude and body angular rates.</description>
      <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
      <field type="uint8_t" name="group_mlx">Actuator group. The "_mlx" indicates this is a multi-instance message and a MAVLink parser should use this field to difference between instances.</field>
      <field type="uint8_t" name="target_system">System ID</field>
      <field type="uint8_t" name="target_component">Component ID</field>
      <field type="float[8]" name="controls">Actuator controls. Normed to -1..+1 where 0 is neutral position. Throttle for single rotation direction motors is 0..1, negative range for reverse direction. Standard mapping for attitude controls (group 0): (index 0-7): roll, pitch, yaw, throttle, flaps, spoilers, airbrakes, landing gear. Load a pass-through mixer to repurpose them as generic outputs.</field>
    </message>
    <message id="140" name="ACTUATOR_CONTROL_TARGET">
      <description>Set the vehicle attitude and body angular rates.</description>
      <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
      <field type="uint8_t" name="group_mlx">Actuator group. The "_mlx" indicates this is a multi-instance message and a MAVLink parser should use this field to difference between instances.</field>
      <field type="float[8]" name="controls">Actuator controls. Normed to -1..+1 where 0 is neutral position. Throttle for single rotation direction motors is 0..1, negative range for reverse direction. Standard mapping for attitude controls (group 0): (index 0-7): roll, pitch, yaw, throttle, flaps, spoilers, airbrakes, landing gear. Load a pass-through mixer to repurpose them as generic outputs.</field>
    </message>
    <message id="141" name="ALTITUDE">
      <description>The current system altitude.</description>
      <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
      <field type="float" name="altitude_monotonic">This altitude measure is initialized on system boot and monotonic (it is never reset, but represents the local altitude change). The only guarantee on this field is that it will never be reset and is consistent within a flight. The recommended value for this field is the uncorrected barometric altitude at boot time. This altitude will also drift and vary between flights.</field>
      <field type="float" name="altitude_amsl">This altitude measure is strictly above mean sea level and might be non-monotonic (it might reset on events like GPS lock or when a new QNH value is set). It should be the altitude to which global altitude waypoints are compared to. Note that it is *not* the GPS altitude, however, most GPS modules already output AMSL by default and not the WGS84 altitude.</field>
      <field type="float" name="altitude_local">This is the local altitude in the local coordinate frame. It is not the altitude above home, but in reference to the coordinate origin (0, 0, 0). It is up-positive.</field>
      <field type="float" name="altitude_relative">This is the altitude above the home position. It resets on each change of the current home position.</field>
      <field type="float" name="altitude_terrain">This is the altitude above terrain. It might be fed by a terrain database or an altimeter. Values smaller than -1000 should be interpreted as unknown.</field>
      <field type="float" name="bottom_clearance">This is not the altitude, but the clear space below the system according to the fused clearance estimate. It generally should max out at the maximum range of e.g. the laser altimeter. It is generally a moving target. A negative value indicates no measurement available.</field>
    </message>
    <message id="142" name="RESOURCE_REQUEST">
      <description>The autopilot is requesting a resource (file, binary, other type of data)</description>
      <field type="uint8_t" name="request_id">Request ID. This ID should be re-used when sending back URI contents</field>
      <field type="uint8_t" name="uri_type">The type of requested URI. 0 = a file via URL. 1 = a UAVCAN binary</field>
      <field type="uint8_t[120]" name="uri">The requested unique resource identifier (URI). It is not necessarily a straight domain name (depends on the URI type enum)</field>
      <field type="uint8_t" name="transfer_type">The way the autopilot wants to receive the URI. 0 = MAVLink FTP. 1 = binary stream.</field>
      <field type="uint8_t[120]" name="storage">The storage path the autopilot wants the URI to be stored in. Will only be valid if the transfer_type has a storage associated (e.g. MAVLink FTP).</field>
    </message>
    <message id="143" name="SCALED_PRESSURE3">
      <description>Barometer readings for 3rd barometer</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="float" name="press_abs">Absolute pressure (hectopascal)</field>
      <field type="float" name="press_diff">Differential pressure 1 (hectopascal)</field>
      <field type="int16_t" name="temperature">Temperature measurement (0.01 degrees celsius)</field>
    </message>
    <message id="144" name="FOLLOW_TARGET">
      <description>current motion information from a designated system</description>
      <field type="uint64_t" name="timestamp">Timestamp in milliseconds since system boot</field>
      <field type="uint8_t" name="est_capabilities">bit positions for tracker reporting capabilities (POS = 0, VEL = 1, ACCEL = 2, ATT + RATES = 3)</field>
      <field type="int32_t" name="lat">Latitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="lon">Longitude (WGS84), in degrees * 1E7</field>
      <field type="float" name="alt">AMSL, in meters</field>
      <field type="float[3]" name="vel">target velocity (0,0,0) for unknown</field>
      <field type="float[3]" name="acc">linear target acceleration (0,0,0) for unknown</field>
      <field type="float[4]" name="attitude_q">(1 0 0 0 for unknown)</field>
      <field type="float[3]" name="rates">(0 0 0 for unknown)</field>
      <field type="float[3]" name="position_cov">eph epv</field>
      <field type="uint64_t" name="custom_state">button states or switches of a tracker device</field>
    </message>
    <message id="146" name="CONTROL_SYSTEM_STATE">
      <description>The smoothed, monotonic system state used to feed the control loops of the system.</description>
      <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
      <field type="float" name="x_acc">X acceleration in body frame</field>
      <field type="float" name="y_acc">Y acceleration in body frame</field>
      <field type="float" name="z_acc">Z acceleration in body frame</field>
      <field type="float" name="x_vel">X velocity in body frame</field>
      <field type="float" name="y_vel">Y velocity in body frame</field>
      <field type="float" name="z_vel">Z velocity in body frame</field>
      <field type="float" name="x_pos">X position in local frame</field>
      <field type="float" name="y_pos">Y position in local frame</field>
      <field type="float" name="z_pos">Z position in local frame</field>
      <field type="float" name="airspeed">Airspeed, set to -1 if unknown</field>
      <field type="float[3]" name="vel_variance">Variance of body velocity estimate</field>
      <field type="float[3]" name="pos_variance">Variance in local position</field>
      <field type="float[4]" name="q">The attitude, represented as Quaternion</field>
      <field type="float" name="roll_rate">Angular rate in roll axis</field>
      <field type="float" name="pitch_rate">Angular rate in pitch axis</field>
      <field type="float" name="yaw_rate">Angular rate in yaw axis</field>
    </message>
    <message id="147" name="BATTERY_STATUS">
      <description>Battery information</description>
      <field type="uint8_t" name="id">Battery ID</field>
      <field type="uint8_t" name="battery_function" enum="MAV_BATTERY_FUNCTION">Function of the battery</field>
      <field type="uint8_t" name="type" enum="MAV_BATTERY_TYPE">Type (chemistry) of the battery</field>
      <field type="int16_t" name="temperature">Temperature of the battery in centi-degrees celsius. INT16_MAX for unknown temperature.</field>
      <field type="uint16_t[10]" name="voltages">Battery voltage of cells, in millivolts (1 = 1 millivolt). Cells above the valid cell count for this battery should have the UINT16_MAX value.</field>
      <field type="int16_t" name="current_battery">Battery current, in 10*milliamperes (1 = 10 milliampere), -1: autopilot does not measure the current</field>
      <field type="int32_t" name="current_consumed">Consumed charge, in milliampere hours (1 = 1 mAh), -1: autopilot does not provide mAh consumption estimate</field>
      <field type="int32_t" name="energy_consumed">Consumed energy, in 100*Joules (integrated U*I*dt)  (1 = 100 Joule), -1: autopilot does not provide energy consumption estimate</field>
      <field type="int8_t" name="battery_remaining">Remaining battery energy: (0%: 0, 100%: 100), -1: autopilot does not estimate the remaining battery</field>
    </message>
    <message id="148" name="AUTOPILOT_VERSION">
      <description>Version and capability of autopilot software</description>
      <field type="uint64_t" name="capabilities">bitmask of capabilities (see MAV_PROTOCOL_CAPABILITY enum)</field>
      <field type="uint32_t" name="flight_sw_version">Firmware version number</field>
      <field type="uint32_t" name="middleware_sw_version">Middleware version number</field>
      <field type="uint32_t" name="os_sw_version">Operating system version number</field>
      <field type="uint32_t" name="board_version">HW / board version (last 8 bytes should be silicon ID, if any)</field>
      <field type="uint8_t[8]" name="flight_custom_version">Custom version field, commonly the first 8 bytes of the git hash. This is not an unique identifier, but should allow to identify the commit using the main version number even for very large code bases.</field>
      <field type="uint8_t[8]" name="middleware_custom_version">Custom version field, commonly the first 8 bytes of the git hash. This is not an unique identifier, but should allow to identify the commit using the main version number even for very large code bases.</field>
      <field type="uint8_t[8]" name="os_custom_version">Custom version field, commonly the first 8 bytes of the git hash. This is not an unique identifier, but should allow to identify the commit using the main version number even for very large code bases.</field>
      <field type="uint16_t" name="vendor_id">ID of the board vendor</field>
      <field type="uint16_t" name="product_id">ID of the product</field>
      <field type="uint64_t" name="uid">UID if provided by hardware</field>
    </message>
    <message id="149" name="LANDING_TARGET">
      <description>The location of a landing area captured from a downward facing camera</description>
      <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
      <field type="uint8_t" name="target_num">The ID of the target if multiple targets are present</field>
      <field type="uint8_t" name="frame">MAV_FRAME enum specifying the whether the following feilds are earth-frame, body-frame, etc.</field>
      <field type="float" name="angle_x">X-axis angular offset (in radians) of the target from the center of the image</field>
      <field type="float" name="angle_y">Y-axis angular offset (in radians) of the target from the center of the image</field>
      <field type="float" name="distance">Distance to the target from the vehicle in meters</field>
      <field type="float" name="size_x">Size in radians of target along x-axis</field>
      <field type="float" name="size_y">Size in radians of target along y-axis</field>
    </message>
    <!-- MESSAGE IDs 180 - 229: Space for custom messages in individual projectname_messages.xml files -->
    <message id="230" name="ESTIMATOR_STATUS">
      <description>Estimator status message including flags, innovation test ratios and estimated accuracies. The flags message is an integer bitmask containing information on which EKF outputs are valid. See the ESTIMATOR_STATUS_FLAGS enum definition for further information. The innovaton test ratios show the magnitude of the sensor innovation divided by the innovation check threshold. Under normal operation the innovaton test ratios should be below 0.5 with occasional values up to 1.0. Values greater than 1.0 should be rare under normal operation and indicate that a measurement has been rejected by the filter. The user should be notified if an innovation test ratio greater than 1.0 is recorded. Notifications for values in the range between 0.5 and 1.0 should be optional and controllable by the user.</description>
      <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
      <field name="flags" type="uint16_t" enum="ESTIMATOR_STATUS_FLAGS">Integer bitmask indicating which EKF outputs are valid. See definition for ESTIMATOR_STATUS_FLAGS.</field>
      <field name="vel_ratio" type="float">Velocity innovation test ratio</field>
      <field name="pos_horiz_ratio" type="float">Horizontal position innovation test ratio</field>
      <field name="pos_vert_ratio" type="float">Vertical position innovation test ratio</field>
      <field name="mag_ratio" type="float">Magnetometer innovation test ratio</field>
      <field name="hagl_ratio" type="float">Height above terrain innovation test ratio</field>
      <field name="tas_ratio" type="float">True airspeed innovation test ratio</field>
      <field name="pos_horiz_accuracy" type="float">Horizontal position 1-STD accuracy relative to the EKF local origin (m)</field>
      <field name="pos_vert_accuracy" type="float">Vertical position 1-STD accuracy relative to the EKF local origin (m)</field>
    </message>
    <message id="231" name="WIND_COV">
      <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
      <field type="float" name="wind_x">Wind in X (NED) direction in m/s</field>
      <field type="float" name="wind_y">Wind in Y (NED) direction in m/s</field>
      <field type="float" name="wind_z">Wind in Z (NED) direction in m/s</field>
      <field type="float" name="var_horiz">Variability of the wind in XY. RMS of a 1 Hz lowpassed wind estimate.</field>
      <field type="float" name="var_vert">Variability of the wind in Z. RMS of a 1 Hz lowpassed wind estimate.</field>
      <field type="float" name="wind_alt">AMSL altitude (m) this measurement was taken at</field>
      <field name="horiz_accuracy" type="float">Horizontal speed 1-STD accuracy</field>
      <field name="vert_accuracy" type="float">Vertical speed 1-STD accuracy</field>
    </message>
    <message id="232" name="GPS_INPUT">
      <description>GPS sensor input message.  This is a raw sensor value sent by the GPS. This is NOT the global position estimate of the system.</description>
      <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
      <field type="uint8_t" name="gps_id">ID of the GPS for multiple GPS inputs</field>
      <field type="uint16_t" name="ignore_flags" enum="GPS_INPUT_IGNORE_FLAGS">Flags indicating which fields to ignore (see GPS_INPUT_IGNORE_FLAGS enum).  All other fields must be provided.</field>
      <field type="uint32_t" name="time_week_ms">GPS time (milliseconds from start of GPS week)</field>
      <field type="uint16_t" name="time_week">GPS week number</field>
      <field type="uint8_t" name="fix_type">0-1: no fix, 2: 2D fix, 3: 3D fix. 4: 3D with DGPS. 5: 3D with RTK</field>
      <field type="int32_t" name="lat">Latitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="lon">Longitude (WGS84), in degrees * 1E7</field>
      <field type="float" name="alt">Altitude (AMSL, not WGS84), in m (positive for up)</field>
      <field type="float" name="hdop">GPS HDOP horizontal dilution of position in m</field>
      <field type="float" name="vdop">GPS VDOP vertical dilution of position in m</field>
      <field type="float" name="vn">GPS velocity in m/s in NORTH direction in earth-fixed NED frame</field>
      <field type="float" name="ve">GPS velocity in m/s in EAST direction in earth-fixed NED frame</field>
      <field type="float" name="vd">GPS velocity in m/s in DOWN direction in earth-fixed NED frame</field>
      <field type="float" name="speed_accuracy">GPS speed accuracy in m/s</field>
      <field type="float" name="horiz_accuracy">GPS horizontal accuracy in m</field>
      <field type="float" name="vert_accuracy">GPS vertical accuracy in m</field>
      <field type="uint8_t" name="satellites_visible">Number of satellites visible.</field>
    </message>
    <message id="233" name="GPS_RTCM_DATA">
      <description>WORK IN PROGRESS! RTCM message for injecting into the onboard GPS (used for DGPS)</description>
      <field type="uint8_t" name="flags">LSB: 1 means message is fragmented</field>
      <field type="uint8_t" name="len">data length</field>
      <field type="uint8_t[180]" name="data">RTCM message (may be fragmented)</field>
    </message>
    <message id="241" name="VIBRATION">
      <description>Vibration levels and accelerometer clipping</description>
      <field type="uint64_t" name="time_usec">Timestamp (micros since boot or Unix epoch)</field>
      <field type="float" name="vibration_x">Vibration levels on X-axis</field>
      <field type="float" name="vibration_y">Vibration levels on Y-axis</field>
      <field type="float" name="vibration_z">Vibration levels on Z-axis</field>
      <field type="uint32_t" name="clipping_0">first accelerometer clipping count</field>
      <field type="uint32_t" name="clipping_1">second accelerometer clipping count</field>
      <field type="uint32_t" name="clipping_2">third accelerometer clipping count</field>
    </message>
    <message id="242" name="HOME_POSITION">
      <description>This message can be requested by sending the MAV_CMD_GET_HOME_POSITION command. The position the system will return to and land on. The position is set automatically by the system during the takeoff in case it was not explicitly set by the operator before or after. The position the system will return to and land on. The global and local positions encode the position in the respective coordinate frames, while the q parameter encodes the orientation of the surface. Under normal conditions it describes the heading and terrain slope, which can be used by the aircraft to adjust the approach. The approach 3D vector describes the point to which the system should fly in normal flight mode and then perform a landing sequence along the vector.</description>
      <field type="int32_t" name="latitude">Latitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="longitude">Longitude (WGS84, in degrees * 1E7</field>
      <field type="int32_t" name="altitude">Altitude (AMSL), in meters * 1000 (positive for up)</field>
      <field type="float" name="x">Local X position of this position in the local coordinate frame</field>
      <field type="float" name="y">Local Y position of this position in the local coordinate frame</field>
      <field type="float" name="z">Local Z position of this position in the local coordinate frame</field>
      <field type="float[4]" name="q">World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground</field>
      <field type="float" name="approach_x">Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
      <field type="float" name="approach_y">Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
      <field type="float" name="approach_z">Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
    </message>
    <message id="243" name="SET_HOME_POSITION">
      <description>The position the system will return to and land on. The position is set automatically by the system during the takeoff in case it was not explicitly set by the operator before or after. The global and local positions encode the position in the respective coordinate frames, while the q parameter encodes the orientation of the surface. Under normal conditions it describes the heading and terrain slope, which can be used by the aircraft to adjust the approach. The approach 3D vector describes the point to which the system should fly in normal flight mode and then perform a landing sequence along the vector.</description>
      <field type="uint8_t" name="target_system">System ID.</field>
      <field type="int32_t" name="latitude">Latitude (WGS84), in degrees * 1E7</field>
      <field type="int32_t" name="longitude">Longitude (WGS84, in degrees * 1E7</field>
      <field type="int32_t" name="altitude">Altitude (AMSL), in meters * 1000 (positive for up)</field>
      <field type="float" name="x">Local X position of this position in the local coordinate frame</field>
      <field type="float" name="y">Local Y position of this position in the local coordinate frame</field>
      <field type="float" name="z">Local Z position of this position in the local coordinate frame</field>
      <field type="float[4]" name="q">World to surface normal and heading transformation of the takeoff position. Used to indicate the heading and slope of the ground</field>
      <field type="float" name="approach_x">Local X position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
      <field type="float" name="approach_y">Local Y position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
      <field type="float" name="approach_z">Local Z position of the end of the approach vector. Multicopters should set this position based on their takeoff path. Grass-landing fixed wing aircraft should set it the same way as multicopters. Runway-landing fixed wing aircraft should set it to the opposite direction of the takeoff, assuming the takeoff happened from the threshold / touchdown zone.</field>
    </message>
    <message id="244" name="MESSAGE_INTERVAL">
      <description>This interface replaces DATA_STREAM</description>
      <field type="uint16_t" name="message_id">The ID of the requested MAVLink message. v1.0 is limited to 254 messages.</field>
      <field type="int32_t" name="interval_us">The interval between two messages, in microseconds. A value of -1 indicates this stream is disabled, 0 indicates it is not available, &gt; 0 indicates the interval at which it is sent.</field>
    </message>
    <message id="245" name="EXTENDED_SYS_STATE">
      <description>Provides state for additional features</description>
      <field type="uint8_t" name="vtol_state" enum="MAV_VTOL_STATE">The VTOL state if applicable. Is set to MAV_VTOL_STATE_UNDEFINED if UAV is not in VTOL configuration.</field>
      <field type="uint8_t" name="landed_state" enum="MAV_LANDED_STATE">The landed state. Is set to MAV_LANDED_STATE_UNDEFINED if landed state is unknown.</field>
    </message>
    <message id="246" name="ADSB_VEHICLE">
      <description>The location and information of an ADSB vehicle</description>
      <field type="uint32_t" name="ICAO_address">ICAO address</field>
      <field type="int32_t" name="lat">Latitude, expressed as degrees * 1E7</field>
      <field type="int32_t" name="lon">Longitude, expressed as degrees * 1E7</field>
      <field type="uint8_t" name="altitude_type" enum="ADSB_ALTITUDE_TYPE">Type from ADSB_ALTITUDE_TYPE enum</field>
      <field type="int32_t" name="altitude">Altitude(ASL) in millimeters</field>
      <field type="uint16_t" name="heading">Course over ground in centidegrees</field>
      <field type="uint16_t" name="hor_velocity">The horizontal velocity in centimeters/second</field>
      <field type="int16_t" name="ver_velocity">The vertical velocity in centimeters/second, positive is up</field>
      <field type="char[9]" name="callsign">The callsign, 8+null</field>
      <field type="uint8_t" name="emitter_type" enum="ADSB_EMITTER_TYPE">Type from ADSB_EMITTER_TYPE enum</field>
      <field type="uint8_t" name="tslc">Time since last communication in seconds</field>
      <field type="uint16_t" name="flags" enum="ADSB_FLAGS">Flags to indicate various statuses including valid data fields</field>
      <field type="uint16_t" name="squawk">Squawk code</field>
    </message>
    <message id="247" name="COLLISION">
      <description>Information about a potential collision</description>
      <field type="uint8_t" name="src" enum="MAV_COLLISION_SRC">Collision data source</field>
      <field type="uint32_t" name="id">Unique identifier, domain based on src field</field>
      <field type="uint8_t" name="action" enum="MAV_COLLISION_ACTION">Action that is being taken to avoid this collision</field>
      <field type="uint8_t" name="threat_level" enum="MAV_COLLISION_THREAT_LEVEL">How concerned the aircraft is about this collision</field>
      <field type="float" name="time_to_minimum_delta">Estimated time until collision occurs (seconds)</field>
      <field type="float" name="altitude_minimum_delta">Closest vertical distance in meters between vehicle and object</field>
      <field type="float" name="horizontal_minimum_delta">Closest horizontal distance in meteres between vehicle and object</field>
    </message>
    <message id="248" name="V2_EXTENSION">
      <description>Message implementing parts of the V2 payload specs in V1 frames for transitional support.</description>
      <field type="uint8_t" name="target_network">Network ID (0 for broadcast)</field>
      <field type="uint8_t" name="target_system">System ID (0 for broadcast)</field>
      <field type="uint8_t" name="target_component">Component ID (0 for broadcast)</field>
      <field type="uint16_t" name="message_type">A code that identifies the software component that understands this message (analogous to usb device classes or mime type strings).  If this code is less than 32768, it is considered a 'registered' protocol extension and the corresponding entry should be added to https://github.com/mavlink/mavlink/extension-message-ids.xml.  Software creators can register blocks of message IDs as needed (useful for GCS specific metadata, etc...). Message_types greater than 32767 are considered local experiments and should not be checked in to any widely distributed codebase.</field>
      <field type="uint8_t[249]" name="payload">Variable length payload. The length is defined by the remaining message length when subtracting the header and other fields.  The entire content of this block is opaque unless you understand any the encoding message_type.  The particular encoding used can be extension specific and might not always be documented as part of the mavlink specification.</field>
    </message>
    <message id="249" name="MEMORY_VECT">
      <description>Send raw controller memory. The use of this message is discouraged for normal packets, but a quite efficient way for testing new messages and getting experimental debug output.</description>
      <field type="uint16_t" name="address">Starting address of the debug variables</field>
      <field type="uint8_t" name="ver">Version code of the type variable. 0=unknown, type ignored and assumed int16_t. 1=as below</field>
      <field type="uint8_t" name="type">Type code of the memory variables. for ver = 1: 0=16 x int16_t, 1=16 x uint16_t, 2=16 x Q15, 3=16 x 1Q14</field>
      <field type="int8_t[32]" name="value">Memory contents at specified address</field>
    </message>
    <message id="250" name="DEBUG_VECT">
      <field type="char[10]" name="name">Name</field>
      <field type="uint64_t" name="time_usec">Timestamp</field>
      <field type="float" name="x">x</field>
      <field type="float" name="y">y</field>
      <field type="float" name="z">z</field>
    </message>
    <message id="251" name="NAMED_VALUE_FLOAT">
      <description>Send a key-value pair as float. The use of this message is discouraged for normal packets, but a quite efficient way for testing new messages and getting experimental debug output.</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="char[10]" name="name">Name of the debug variable</field>
      <field type="float" name="value">Floating point value</field>
    </message>
    <message id="252" name="NAMED_VALUE_INT">
      <description>Send a key-value pair as integer. The use of this message is discouraged for normal packets, but a quite efficient way for testing new messages and getting experimental debug output.</description>
      <field type="uint32_t" name="time_boot_ms">Timestamp (milliseconds since system boot)</field>
      <field type="char[10]" name="name">Name of the debug variable</field>
      <field type="int32_t" name="valu